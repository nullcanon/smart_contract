{
	"id": "981064490da083fffed64975a184435c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/SignatureWithdrawERC20.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract ClaimERC20 is Ownable {\r\n    mapping(address => uint) private userNonce;\r\n    address private signer;\r\n    address private erc20mint;\r\n\r\n    event Claim(address indexed, uint256 indexed, uint indexed);\r\n\r\n   function getMessageHash(\r\n        address _to,\r\n        uint256 _amount,\r\n        uint _nonce\r\n    ) public pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(_to, _amount, _nonce));\r\n    }\r\n\r\n    function getEthSignedMessageHash(bytes32 _messageHash)\r\n        public\r\n        pure\r\n        returns (bytes32)\r\n    {\r\n        /*\r\n        Signature is produced by signing a keccak256 hash with the following format:\r\n        \"\\x19Ethereum Signed Message\\n\" + len(msg) + msg\r\n        */\r\n        return\r\n            keccak256(\r\n                abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash)\r\n            );\r\n    }\r\n\r\n    function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)\r\n        public\r\n        pure\r\n        returns (address)\r\n    {\r\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\r\n\r\n        return ecrecover(_ethSignedMessageHash, v + 27, r, s);\r\n    }\r\n\r\n    function verify(\r\n        address _to,\r\n        uint256 _amount,\r\n        uint _nonce,\r\n        bytes memory signature\r\n    ) public view returns (bool) {\r\n        bytes32 messageHash = getMessageHash(_to, _amount, _nonce);\r\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\r\n\r\n        return recoverSigner(ethSignedMessageHash, signature) == signer;\r\n    }\r\n\r\n\r\n    function splitSignature(bytes memory sig)\r\n        public\r\n        pure\r\n        returns (\r\n            bytes32 r,\r\n            bytes32 s,\r\n            uint8 v\r\n        )\r\n    {\r\n        require(sig.length == 65, \"invalid signature length\");\r\n\r\n        assembly {\r\n            /*\r\n            First 32 bytes stores the length of the signature\r\n\r\n            add(sig, 32) = pointer of sig + 32\r\n            effectively, skips first 32 bytes of signature\r\n\r\n            mload(p) loads next 32 bytes starting at the memory address p into memory\r\n            */\r\n\r\n            // first 32 bytes, after the length prefix\r\n            r := mload(add(sig, 32))\r\n            // second 32 bytes\r\n            s := mload(add(sig, 64))\r\n            // final byte (first byte of the next 32 bytes)\r\n            v := byte(0, mload(add(sig, 96)))\r\n        }\r\n\r\n        // implicitly return (r, s, v)\r\n    }\r\n\r\n\r\n\r\n    function claim(        \r\n        address _to,\r\n        uint256 _amount,\r\n        uint _nonce,\r\n        bytes memory signature\r\n    ) public {\r\n        require(verify(_to, _amount, _nonce, signature), \"signature verify faild\");\r\n        require(userNonce[_to] < _nonce, \"nonce verify faild\");\r\n        userNonce[_to] = userNonce[_to] + 1;\r\n\r\n        IERC20(erc20mint).transfer(_to, _amount);\r\n        emit Claim(_to, _amount, _nonce);\r\n    }\r\n\r\n    function setSigner(address _signer) public onlyOwner {\r\n        signer = _signer;\r\n    }\r\n\r\n    function setToken(address _token) public onlyOwner {\r\n        erc20mint = _token;\r\n    }\r\n\r\n    function urgentWithdraw(address _token) public onlyOwner {\r\n        IERC20(_token).transfer( msg.sender, IERC20(erc20mint).balanceOf(address(this)));\r\n    }\r\n\r\n    function getSigner() public view returns (address) {\r\n        return signer;\r\n    }\r\n\r\n    function getToken() public  view returns (address) {\r\n        return erc20mint;\r\n    }\r\n\r\n}"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        unchecked {\n            _approve(sender, _msgSender(), currentAllowance - amount);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/SignatureWithdrawERC20.sol": {
				"ClaimERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_messageHash",
									"type": "bytes32"
								}
							],
							"name": "getEthSignedMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								}
							],
							"name": "getMessageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_ethSignedMessageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "recoverSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "setSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "setToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								}
							],
							"name": "splitSignature",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "urgentWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/SignatureWithdrawERC20.sol\":250:3699  contract ClaimERC20 is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_4:\n    /* \"nft/SignatureWithdrawERC20.sol\":250:3699  contract ClaimERC20 is Ownable {... */\n  jump(tag_8)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"nft/SignatureWithdrawERC20.sol\":250:3699  contract ClaimERC20 is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/SignatureWithdrawERC20.sol\":250:3699  contract ClaimERC20 is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xc4091443\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc4091443\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd2b0737b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfa540801\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x97aba7f9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa7bb5803\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x2ada8a32\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x2ada8a32\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6c19e783\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7ac3c02f\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x0deea608\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x144fa6d7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x21df0da7\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"nft/SignatureWithdrawERC20.sol\":1416:1800  function verify(... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1748:1762   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1741:1763   */\n      iszero\n        /* \"#utility.yul\":1723:1764   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1711:1713   */\n      0x20\n        /* \"#utility.yul\":1696:1714   */\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":1416:1800  function verify(... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/SignatureWithdrawERC20.sol\":3257:3345  function setToken(address _token) public onlyOwner {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"nft/SignatureWithdrawERC20.sol\":3608:3694  function getToken() public  view returns (address) {... */\n    tag_5:\n        /* \"nft/SignatureWithdrawERC20.sol\":3677:3686  erc20mint */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"nft/SignatureWithdrawERC20.sol\":3608:3694  function getToken() public  view returns (address) {... */\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2130:2162   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2112:2163   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2100:2102   */\n      0x20\n        /* \"#utility.yul\":2085:2103   */\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":3608:3694  function getToken() public  view returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1966:2169   */\n      jump\n        /* \"nft/SignatureWithdrawERC20.sol\":2713:3153  function claim(        ... */\n    tag_6:\n      tag_26\n      tag_35\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"nft/SignatureWithdrawERC20.sol\":3161:3249  function setSigner(address _signer) public onlyOwner {... */\n    tag_7:\n      tag_26\n      tag_38\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_26\n      tag_41\n      jump\t// in\n        /* \"nft/SignatureWithdrawERC20.sol\":3517:3600  function getSigner() public view returns (address) {... */\n    tag_9:\n        /* \"nft/SignatureWithdrawERC20.sol\":3586:3592  signer */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"nft/SignatureWithdrawERC20.sol\":3517:3600  function getSigner() public view returns (address) {... */\n      jump(tag_30)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_30)\n        /* \"nft/SignatureWithdrawERC20.sol\":1122:1408  function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)... */\n    tag_11:\n      tag_30\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"nft/SignatureWithdrawERC20.sol\":1810:2701  function splitSignature(bytes memory sig)... */\n    tag_12:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3090:3115   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"#utility.yul\":3131:3149   */\n      dup5\n      add\n        /* \"#utility.yul\":3124:3158   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3206:3210   */\n      0xff\n        /* \"#utility.yul\":3194:3211   */\n      and\n        /* \"#utility.yul\":3174:3192   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3167:3212   */\n      mstore\n        /* \"#utility.yul\":3078:3080   */\n      0x60\n        /* \"#utility.yul\":3063:3081   */\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":1810:2701  function splitSignature(bytes memory sig)... */\n      tag_24\n        /* \"#utility.yul\":2892:3218   */\n      jump\n        /* \"nft/SignatureWithdrawERC20.sol\":3353:3509  function urgentWithdraw(address _token) public onlyOwner {... */\n    tag_13:\n      tag_26\n      tag_60\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"nft/SignatureWithdrawERC20.sol\":467:673  function getMessageHash(... */\n    tag_14:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":3696:3721   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3684:3686   */\n      0x20\n        /* \"#utility.yul\":3669:3687   */\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":467:673  function getMessageHash(... */\n      tag_24\n        /* \"#utility.yul\":3550:3727   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_26\n      tag_69\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"nft/SignatureWithdrawERC20.sol\":681:1114  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_16:\n      tag_62\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"nft/SignatureWithdrawERC20.sol\":1416:1800  function verify(... */\n    tag_23:\n        /* \"nft/SignatureWithdrawERC20.sol\":1563:1567  bool */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":1580:1599  bytes32 messageHash */\n      dup1\n        /* \"nft/SignatureWithdrawERC20.sol\":1602:1638  getMessageHash(_to, _amount, _nonce) */\n      tag_77\n        /* \"nft/SignatureWithdrawERC20.sol\":1617:1620  _to */\n      dup7\n        /* \"nft/SignatureWithdrawERC20.sol\":1622:1629  _amount */\n      dup7\n        /* \"nft/SignatureWithdrawERC20.sol\":1631:1637  _nonce */\n      dup7\n        /* \"nft/SignatureWithdrawERC20.sol\":1602:1616  getMessageHash */\n      tag_65\n        /* \"nft/SignatureWithdrawERC20.sol\":1602:1638  getMessageHash(_to, _amount, _nonce) */\n      jump\t// in\n    tag_77:\n        /* \"nft/SignatureWithdrawERC20.sol\":1580:1638  bytes32 messageHash = getMessageHash(_to, _amount, _nonce) */\n      swap1\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":1649:1677  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":1680:1716  getEthSignedMessageHash(messageHash) */\n      tag_78\n        /* \"nft/SignatureWithdrawERC20.sol\":1704:1715  messageHash */\n      dup3\n        /* \"nft/SignatureWithdrawERC20.sol\":1680:1703  getEthSignedMessageHash */\n      tag_74\n        /* \"nft/SignatureWithdrawERC20.sol\":1680:1716  getEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_78:\n        /* \"nft/SignatureWithdrawERC20.sol\":1786:1792  signer */\n      sload(0x02)\n        /* \"nft/SignatureWithdrawERC20.sol\":1649:1716  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":1786:1792  signer */\n      and\n        /* \"nft/SignatureWithdrawERC20.sol\":1736:1782  recoverSigner(ethSignedMessageHash, signature) */\n      tag_79\n        /* \"nft/SignatureWithdrawERC20.sol\":1649:1716  bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash) */\n      dup3\n        /* \"nft/SignatureWithdrawERC20.sol\":1772:1781  signature */\n      dup7\n        /* \"nft/SignatureWithdrawERC20.sol\":1736:1749  recoverSigner */\n      tag_51\n        /* \"nft/SignatureWithdrawERC20.sol\":1736:1782  recoverSigner(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":1736:1792  recoverSigner(ethSignedMessageHash, signature) == signer */\n      and\n      eq\n      swap8\n        /* \"nft/SignatureWithdrawERC20.sol\":1416:1800  function verify(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":3257:3345  function setToken(address _token) public onlyOwner {... */\n    tag_29:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"nft/SignatureWithdrawERC20.sol\":3319:3328  erc20mint */\n      0x03\n        /* \"nft/SignatureWithdrawERC20.sol\":3319:3337  erc20mint = _token */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3257:3345  function setToken(address _token) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":2713:3153  function claim(        ... */\n    tag_36:\n        /* \"nft/SignatureWithdrawERC20.sol\":2872:2911  verify(_to, _amount, _nonce, signature) */\n      tag_90\n        /* \"nft/SignatureWithdrawERC20.sol\":2879:2882  _to */\n      dup5\n        /* \"nft/SignatureWithdrawERC20.sol\":2884:2891  _amount */\n      dup5\n        /* \"nft/SignatureWithdrawERC20.sol\":2893:2899  _nonce */\n      dup5\n        /* \"nft/SignatureWithdrawERC20.sol\":2901:2910  signature */\n      dup5\n        /* \"nft/SignatureWithdrawERC20.sol\":2872:2878  verify */\n      tag_23\n        /* \"nft/SignatureWithdrawERC20.sol\":2872:2911  verify(_to, _amount, _nonce, signature) */\n      jump\t// in\n    tag_90:\n        /* \"nft/SignatureWithdrawERC20.sol\":2864:2938  require(verify(_to, _amount, _nonce, signature), \"signature verify faild\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4480:4482   */\n      0x20\n        /* \"nft/SignatureWithdrawERC20.sol\":2864:2938  require(verify(_to, _amount, _nonce, signature), \"signature verify faild\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4462:4483   */\n      mstore\n        /* \"#utility.yul\":4519:4521   */\n      0x16\n        /* \"#utility.yul\":4499:4517   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4492:4522   */\n      mstore\n      shl(0x52, 0x1cda59db985d1d5c99481d995c9a599e4819985a5b19)\n        /* \"#utility.yul\":4538:4556   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4531:4583   */\n      mstore\n        /* \"#utility.yul\":4600:4618   */\n      0x64\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":2864:2938  require(verify(_to, _amount, _nonce, signature), \"signature verify faild\") */\n      tag_85\n        /* \"#utility.yul\":4278:4624   */\n      jump\n        /* \"nft/SignatureWithdrawERC20.sol\":2864:2938  require(verify(_to, _amount, _nonce, signature), \"signature verify faild\") */\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":2957:2971  userNonce[_to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":2957:2966  userNonce */\n      0x01\n        /* \"nft/SignatureWithdrawERC20.sol\":2957:2971  userNonce[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"nft/SignatureWithdrawERC20.sol\":2957:2980  userNonce[_to] < _nonce */\n      dup3\n      gt\n        /* \"nft/SignatureWithdrawERC20.sol\":2949:3003  require(userNonce[_to] < _nonce, \"nonce verify faild\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4831:4833   */\n      0x20\n        /* \"nft/SignatureWithdrawERC20.sol\":2949:3003  require(userNonce[_to] < _nonce, \"nonce verify faild\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4813:4834   */\n      mstore\n        /* \"#utility.yul\":4870:4872   */\n      0x12\n        /* \"#utility.yul\":4850:4868   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4843:4873   */\n      mstore\n      shl(0x72, 0x1b9bdb98d9481d995c9a599e4819985a5b19)\n        /* \"#utility.yul\":4889:4907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4882:4930   */\n      mstore\n        /* \"#utility.yul\":4947:4965   */\n      0x64\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":2949:3003  require(userNonce[_to] < _nonce, \"nonce verify faild\") */\n      tag_85\n        /* \"#utility.yul\":4629:4971   */\n      jump\n        /* \"nft/SignatureWithdrawERC20.sol\":2949:3003  require(userNonce[_to] < _nonce, \"nonce verify faild\") */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":3031:3045  userNonce[_to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3031:3040  userNonce */\n      0x01\n        /* \"nft/SignatureWithdrawERC20.sol\":3031:3045  userNonce[_to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"nft/SignatureWithdrawERC20.sol\":3031:3049  userNonce[_to] + 1 */\n      tag_97\n      swap2\n      tag_98\n      jump\t// in\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":3014:3028  userNonce[_to] */\n      dup6\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3014:3023  userNonce */\n      0x01\n        /* \"nft/SignatureWithdrawERC20.sol\":3014:3028  userNonce[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"nft/SignatureWithdrawERC20.sol\":3014:3049  userNonce[_to] = userNonce[_to] + 1 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3069:3078  erc20mint */\n      sload(0x03)\n        /* \"nft/SignatureWithdrawERC20.sol\":3062:3102  IERC20(erc20mint).transfer(_to, _amount) */\n      swap3\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5415:5466   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5482:5500   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5475:5509   */\n      dup7\n      swap1\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3069:3078  erc20mint */\n      swap2\n      and\n      swap1\n        /* \"nft/SignatureWithdrawERC20.sol\":3062:3088  IERC20(erc20mint).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5388:5406   */\n      0x44\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":3062:3102  IERC20(erc20mint).transfer(_to, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":3138:3144  _nonce */\n      dup2\n        /* \"nft/SignatureWithdrawERC20.sol\":3129:3136  _amount */\n      dup4\n        /* \"nft/SignatureWithdrawERC20.sol\":3124:3127  _to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":3118:3145  Claim(_to, _amount, _nonce) */\n      and\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nft/SignatureWithdrawERC20.sol\":2713:3153  function claim(        ... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":3161:3249  function setSigner(address _signer) public onlyOwner {... */\n    tag_39:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \"nft/SignatureWithdrawERC20.sol\":3225:3231  signer */\n      0x02\n        /* \"nft/SignatureWithdrawERC20.sol\":3225:3241  signer = _signer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3161:3249  function setSigner(address _signer) public onlyOwner {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_41:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_114:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_117\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_118\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_117:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":1122:1408  function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)... */\n    tag_51:\n        /* \"nft/SignatureWithdrawERC20.sol\":1249:1256  address */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":1275:1284  bytes32 r */\n      dup1\n        /* \"nft/SignatureWithdrawERC20.sol\":1286:1295  bytes32 s */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":1297:1304  uint8 v */\n      dup1\n        /* \"nft/SignatureWithdrawERC20.sol\":1308:1334  splitSignature(_signature) */\n      tag_122\n        /* \"nft/SignatureWithdrawERC20.sol\":1323:1333  _signature */\n      dup6\n        /* \"nft/SignatureWithdrawERC20.sol\":1308:1322  splitSignature */\n      tag_56\n        /* \"nft/SignatureWithdrawERC20.sol\":1308:1334  splitSignature(_signature) */\n      jump\t// in\n    tag_122:\n        /* \"nft/SignatureWithdrawERC20.sol\":1274:1334  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      swap1\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":1354:1400  ecrecover(_ethSignedMessageHash, v + 27, r, s) */\n      0x01\n        /* \"nft/SignatureWithdrawERC20.sol\":1364:1385  _ethSignedMessageHash */\n      dup7\n        /* \"nft/SignatureWithdrawERC20.sol\":1387:1393  v + 27 */\n      tag_123\n        /* \"nft/SignatureWithdrawERC20.sol\":1274:1334  (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature) */\n      dup4\n        /* \"nft/SignatureWithdrawERC20.sol\":1391:1393  27 */\n      0x1b\n        /* \"nft/SignatureWithdrawERC20.sol\":1387:1393  v + 27 */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"nft/SignatureWithdrawERC20.sol\":1354:1400  ecrecover(_ethSignedMessageHash, v + 27, r, s) */\n      0x40\n      dup1\n      mload\n      0x00\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      dup4\n      mstore\n        /* \"#utility.yul\":6238:6263   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":6311:6315   */\n      0xff\n        /* \"#utility.yul\":6299:6316   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6279:6297   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6272:6317   */\n      mstore\n        /* \"#utility.yul\":6333:6351   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":6326:6360   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6376:6394   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":6369:6403   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":6210:6229   */\n      0xa0\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":1354:1400  ecrecover(_ethSignedMessageHash, v + 27, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap8\n        /* \"nft/SignatureWithdrawERC20.sol\":1122:1408  function recoverSigner(bytes32 _ethSignedMessageHash, bytes memory _signature)... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":1810:2701  function splitSignature(bytes memory sig)... */\n    tag_56:\n        /* \"nft/SignatureWithdrawERC20.sol\":1914:1923  bytes32 r */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":1938:1947  bytes32 s */\n      dup1\n        /* \"nft/SignatureWithdrawERC20.sol\":1962:1969  uint8 v */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":2005:2008  sig */\n      dup4\n        /* \"nft/SignatureWithdrawERC20.sol\":2005:2015  sig.length */\n      mload\n        /* \"nft/SignatureWithdrawERC20.sol\":2019:2021  65 */\n      0x41\n        /* \"nft/SignatureWithdrawERC20.sol\":2005:2021  sig.length == 65 */\n      eq\n        /* \"nft/SignatureWithdrawERC20.sol\":1997:2050  require(sig.length == 65, \"invalid signature length\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6616:6618   */\n      0x20\n        /* \"nft/SignatureWithdrawERC20.sol\":1997:2050  require(sig.length == 65, \"invalid signature length\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6598:6619   */\n      mstore\n        /* \"#utility.yul\":6655:6657   */\n      0x18\n        /* \"#utility.yul\":6635:6653   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6628:6658   */\n      mstore\n        /* \"#utility.yul\":6694:6720   */\n      0x696e76616c6964207369676e6174757265206c656e6774680000000000000000\n        /* \"#utility.yul\":6674:6692   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6667:6721   */\n      mstore\n        /* \"#utility.yul\":6738:6756   */\n      0x64\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":1997:2050  require(sig.length == 65, \"invalid signature length\") */\n      tag_85\n        /* \"#utility.yul\":6414:6762   */\n      jump\n        /* \"nft/SignatureWithdrawERC20.sol\":1997:2050  require(sig.length == 65, \"invalid signature length\") */\n    tag_130:\n      pop\n      pop\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":2459:2461  32 */\n      0x20\n        /* \"nft/SignatureWithdrawERC20.sol\":2450:2462  add(sig, 32) */\n      dup2\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":2444:2463  mload(add(sig, 32)) */\n      mload\n        /* \"nft/SignatureWithdrawERC20.sol\":2529:2531  64 */\n      0x40\n        /* \"nft/SignatureWithdrawERC20.sol\":2520:2532  add(sig, 64) */\n      dup3\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":2514:2533  mload(add(sig, 64)) */\n      mload\n        /* \"nft/SignatureWithdrawERC20.sol\":2636:2638  96 */\n      0x60\n        /* \"nft/SignatureWithdrawERC20.sol\":2627:2639  add(sig, 96) */\n      swap1\n      swap3\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":2621:2640  mload(add(sig, 96)) */\n      mload\n        /* \"nft/SignatureWithdrawERC20.sol\":2444:2463  mload(add(sig, 32)) */\n      swap1\n      swap3\n        /* \"nft/SignatureWithdrawERC20.sol\":2618:2619  0 */\n      0x00\n        /* \"nft/SignatureWithdrawERC20.sol\":2613:2641  byte(0, mload(add(sig, 96))) */\n      swap2\n      swap1\n      swap2\n      byte\n      swap1\n        /* \"nft/SignatureWithdrawERC20.sol\":1810:2701  function splitSignature(bytes memory sig)... */\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":3353:3509  function urgentWithdraw(address _token) public onlyOwner {... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_136:\n        /* \"nft/SignatureWithdrawERC20.sol\":3465:3474  erc20mint */\n      sload(0x03)\n        /* \"nft/SignatureWithdrawERC20.sol\":3458:3500  IERC20(erc20mint).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":3494:3498  this */\n      address\n        /* \"nft/SignatureWithdrawERC20.sol\":3458:3500  IERC20(erc20mint).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2112:2163   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/SignatureWithdrawERC20.sol\":3421:3444  IERC20(_token).transfer */\n      dup4\n      dup2\n      and\n      swap3\n      0xa9059cbb\n      swap3\n        /* \"nft/SignatureWithdrawERC20.sol\":3446:3456  msg.sender */\n      caller\n      swap3\n        /* \"nft/SignatureWithdrawERC20.sol\":3465:3474  erc20mint */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"nft/SignatureWithdrawERC20.sol\":3458:3485  IERC20(erc20mint).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2085:2103   */\n      0x24\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":3458:3500  IERC20(erc20mint).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"nft/SignatureWithdrawERC20.sol\":3421:3501  IERC20(_token).transfer( msg.sender, IERC20(erc20mint).balanceOf(address(this))) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5433:5465   */\n      swap1\n      swap3\n      and\n        /* \"nft/SignatureWithdrawERC20.sol\":3421:3501  IERC20(_token).transfer( msg.sender, IERC20(erc20mint).balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5415:5466   */\n      mstore\n        /* \"#utility.yul\":5482:5500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5475:5509   */\n      mstore\n        /* \"#utility.yul\":5388:5406   */\n      0x44\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":3421:3501  IERC20(_token).transfer( msg.sender, IERC20(erc20mint).balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_147:\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":3353:3509  function urgentWithdraw(address _token) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":467:673  function getMessageHash(... */\n    tag_65:\n        /* \"nft/SignatureWithdrawERC20.sol\":626:664  abi.encodePacked(_to, _amount, _nonce) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":7161:7163   */\n      0x60\n        /* \"#utility.yul\":7157:7172   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":7153:7206   */\n      and\n        /* \"nft/SignatureWithdrawERC20.sol\":626:664  abi.encodePacked(_to, _amount, _nonce) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":7141:7207   */\n      mstore\n        /* \"#utility.yul\":7223:7235   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":7216:7244   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7260:7272   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":7253:7281   */\n      dup3\n      swap1\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":589:596  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":7297:7309   */\n      0x74\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":626:664  abi.encodePacked(_to, _amount, _nonce) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":616:665  keccak256(abi.encodePacked(_to, _amount, _nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"nft/SignatureWithdrawERC20.sol\":609:665  return keccak256(abi.encodePacked(_to, _amount, _nonce)) */\n      swap1\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":467:673  function getMessageHash(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_70:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7522:7524   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7504:7525   */\n      mstore\n        /* \"#utility.yul\":7561:7563   */\n      0x26\n        /* \"#utility.yul\":7541:7559   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7534:7564   */\n      mstore\n        /* \"#utility.yul\":7600:7634   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7580:7598   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7573:7635   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7651:7669   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7644:7680   */\n      mstore\n        /* \"#utility.yul\":7697:7716   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_85\n        /* \"#utility.yul\":7320:7722   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_160\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_118\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_160:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"nft/SignatureWithdrawERC20.sol\":681:1114  function getEthSignedMessageHash(bytes32 _messageHash)... */\n    tag_74:\n        /* \"nft/SignatureWithdrawERC20.sol\":1025:1091  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash) */\n      mload(0x40)\n        /* \"#utility.yul\":7969:8035   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"nft/SignatureWithdrawERC20.sol\":1025:1091  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":7957:8036   */\n      mstore\n        /* \"#utility.yul\":8052:8064   */\n      0x3c\n      dup2\n      add\n        /* \"#utility.yul\":8045:8073   */\n      dup3\n      swap1\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":784:791  bytes32 */\n      0x00\n      swap1\n        /* \"#utility.yul\":8089:8101   */\n      0x5c\n      add\n        /* \"nft/SignatureWithdrawERC20.sol\":1025:1091  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _messageHash) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"nft/SignatureWithdrawERC20.sol\":997:1106  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"nft/SignatureWithdrawERC20.sol\":977:1106  return... */\n      swap1\n      pop\n        /* \"nft/SignatureWithdrawERC20.sol\":681:1114  function getEthSignedMessageHash(bytes32 _messageHash)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_118:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_166:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_172:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:319   */\n    tag_167:\n        /* \"#utility.yul\":253:263   */\n      0x4e487b71\n        /* \"#utility.yul\":248:251   */\n      0xe0\n        /* \"#utility.yul\":244:264   */\n      shl\n        /* \"#utility.yul\":241:242   */\n      0x00\n        /* \"#utility.yul\":234:265   */\n      mstore\n        /* \"#utility.yul\":284:288   */\n      0x41\n        /* \"#utility.yul\":281:282   */\n      0x04\n        /* \"#utility.yul\":274:289   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x24\n        /* \"#utility.yul\":305:306   */\n      0x00\n        /* \"#utility.yul\":298:313   */\n      revert\n        /* \"#utility.yul\":324:1042   */\n    tag_168:\n        /* \"#utility.yul\":366:371   */\n      0x00\n        /* \"#utility.yul\":419:422   */\n      dup3\n        /* \"#utility.yul\":412:416   */\n      0x1f\n        /* \"#utility.yul\":404:410   */\n      dup4\n        /* \"#utility.yul\":400:417   */\n      add\n        /* \"#utility.yul\":396:423   */\n      slt\n        /* \"#utility.yul\":386:441   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":437:438   */\n      0x00\n        /* \"#utility.yul\":434:435   */\n      dup1\n        /* \"#utility.yul\":427:439   */\n      revert\n        /* \"#utility.yul\":386:441   */\n    tag_175:\n        /* \"#utility.yul\":473:479   */\n      dup2\n        /* \"#utility.yul\":460:480   */\n      calldataload\n        /* \"#utility.yul\":499:517   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":536:538   */\n      dup1\n        /* \"#utility.yul\":532:534   */\n      dup3\n        /* \"#utility.yul\":529:539   */\n      gt\n        /* \"#utility.yul\":526:562   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":542:560   */\n      tag_177\n      tag_167\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":617:619   */\n      0x40\n        /* \"#utility.yul\":611:620   */\n      mload\n        /* \"#utility.yul\":585:587   */\n      0x1f\n        /* \"#utility.yul\":671:684   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":667:689   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":691:693   */\n      0x3f\n        /* \"#utility.yul\":663:694   */\n      add\n        /* \"#utility.yul\":659:699   */\n      and\n        /* \"#utility.yul\":647:700   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":715:733   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":735:757   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":712:758   */\n      or\n        /* \"#utility.yul\":709:781   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":761:779   */\n      tag_179\n      tag_167\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":801:811   */\n      dup2\n        /* \"#utility.yul\":797:799   */\n      0x40\n        /* \"#utility.yul\":790:812   */\n      mstore\n        /* \"#utility.yul\":836:838   */\n      dup4\n        /* \"#utility.yul\":828:834   */\n      dup2\n        /* \"#utility.yul\":821:839   */\n      mstore\n        /* \"#utility.yul\":882:885   */\n      dup7\n        /* \"#utility.yul\":875:879   */\n      0x20\n        /* \"#utility.yul\":870:872   */\n      dup6\n        /* \"#utility.yul\":862:868   */\n      dup9\n        /* \"#utility.yul\":858:873   */\n      add\n        /* \"#utility.yul\":854:880   */\n      add\n        /* \"#utility.yul\":851:886   */\n      gt\n        /* \"#utility.yul\":848:903   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":899:900   */\n      0x00\n        /* \"#utility.yul\":896:897   */\n      dup1\n        /* \"#utility.yul\":889:901   */\n      revert\n        /* \"#utility.yul\":848:903   */\n    tag_180:\n        /* \"#utility.yul\":963:965   */\n      dup4\n        /* \"#utility.yul\":956:960   */\n      0x20\n        /* \"#utility.yul\":948:954   */\n      dup8\n        /* \"#utility.yul\":944:961   */\n      add\n        /* \"#utility.yul\":937:941   */\n      0x20\n        /* \"#utility.yul\":929:935   */\n      dup4\n        /* \"#utility.yul\":925:942   */\n      add\n        /* \"#utility.yul\":912:966   */\n      calldatacopy\n        /* \"#utility.yul\":1010:1011   */\n      0x00\n        /* \"#utility.yul\":1003:1007   */\n      0x20\n        /* \"#utility.yul\":998:1000   */\n      dup6\n        /* \"#utility.yul\":990:996   */\n      dup4\n        /* \"#utility.yul\":986:1001   */\n      add\n        /* \"#utility.yul\":982:1008   */\n      add\n        /* \"#utility.yul\":975:1012   */\n      mstore\n        /* \"#utility.yul\":1030:1036   */\n      dup1\n        /* \"#utility.yul\":1021:1036   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":324:1042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1047:1578   */\n    tag_22:\n        /* \"#utility.yul\":1142:1148   */\n      0x00\n        /* \"#utility.yul\":1150:1156   */\n      dup1\n        /* \"#utility.yul\":1158:1164   */\n      0x00\n        /* \"#utility.yul\":1166:1172   */\n      dup1\n        /* \"#utility.yul\":1219:1222   */\n      0x80\n        /* \"#utility.yul\":1207:1216   */\n      dup6\n        /* \"#utility.yul\":1198:1205   */\n      dup8\n        /* \"#utility.yul\":1194:1217   */\n      sub\n        /* \"#utility.yul\":1190:1223   */\n      slt\n        /* \"#utility.yul\":1187:1240   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1236:1237   */\n      0x00\n        /* \"#utility.yul\":1233:1234   */\n      dup1\n        /* \"#utility.yul\":1226:1238   */\n      revert\n        /* \"#utility.yul\":1187:1240   */\n    tag_182:\n        /* \"#utility.yul\":1259:1288   */\n      tag_183\n        /* \"#utility.yul\":1278:1287   */\n      dup6\n        /* \"#utility.yul\":1259:1288   */\n      tag_166\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1249:1288   */\n      swap4\n      pop\n        /* \"#utility.yul\":1335:1337   */\n      0x20\n        /* \"#utility.yul\":1324:1333   */\n      dup6\n        /* \"#utility.yul\":1320:1338   */\n      add\n        /* \"#utility.yul\":1307:1339   */\n      calldataload\n        /* \"#utility.yul\":1297:1339   */\n      swap3\n      pop\n        /* \"#utility.yul\":1386:1388   */\n      0x40\n        /* \"#utility.yul\":1375:1384   */\n      dup6\n        /* \"#utility.yul\":1371:1389   */\n      add\n        /* \"#utility.yul\":1358:1390   */\n      calldataload\n        /* \"#utility.yul\":1348:1390   */\n      swap2\n      pop\n        /* \"#utility.yul\":1441:1443   */\n      0x60\n        /* \"#utility.yul\":1430:1439   */\n      dup6\n        /* \"#utility.yul\":1426:1444   */\n      add\n        /* \"#utility.yul\":1413:1445   */\n      calldataload\n        /* \"#utility.yul\":1468:1486   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1460:1466   */\n      dup2\n        /* \"#utility.yul\":1457:1487   */\n      gt\n        /* \"#utility.yul\":1454:1504   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":1500:1501   */\n      0x00\n        /* \"#utility.yul\":1497:1498   */\n      dup1\n        /* \"#utility.yul\":1490:1502   */\n      revert\n        /* \"#utility.yul\":1454:1504   */\n    tag_184:\n        /* \"#utility.yul\":1523:1572   */\n      tag_185\n        /* \"#utility.yul\":1564:1571   */\n      dup8\n        /* \"#utility.yul\":1555:1561   */\n      dup3\n        /* \"#utility.yul\":1544:1553   */\n      dup9\n        /* \"#utility.yul\":1540:1562   */\n      add\n        /* \"#utility.yul\":1523:1572   */\n      tag_168\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1513:1572   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1047:1578   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1775:1961   */\n    tag_28:\n        /* \"#utility.yul\":1834:1840   */\n      0x00\n        /* \"#utility.yul\":1887:1889   */\n      0x20\n        /* \"#utility.yul\":1875:1884   */\n      dup3\n        /* \"#utility.yul\":1866:1873   */\n      dup5\n        /* \"#utility.yul\":1862:1885   */\n      sub\n        /* \"#utility.yul\":1858:1890   */\n      slt\n        /* \"#utility.yul\":1855:1907   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":1903:1904   */\n      0x00\n        /* \"#utility.yul\":1900:1901   */\n      dup1\n        /* \"#utility.yul\":1893:1905   */\n      revert\n        /* \"#utility.yul\":1855:1907   */\n    tag_188:\n        /* \"#utility.yul\":1926:1955   */\n      tag_189\n        /* \"#utility.yul\":1945:1954   */\n      dup3\n        /* \"#utility.yul\":1926:1955   */\n      tag_166\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1916:1955   */\n      swap4\n        /* \"#utility.yul\":1775:1961   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2174:2562   */\n    tag_50:\n        /* \"#utility.yul\":2251:2257   */\n      0x00\n        /* \"#utility.yul\":2259:2265   */\n      dup1\n        /* \"#utility.yul\":2312:2314   */\n      0x40\n        /* \"#utility.yul\":2300:2309   */\n      dup4\n        /* \"#utility.yul\":2291:2298   */\n      dup6\n        /* \"#utility.yul\":2287:2310   */\n      sub\n        /* \"#utility.yul\":2283:2315   */\n      slt\n        /* \"#utility.yul\":2280:2332   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":2328:2329   */\n      0x00\n        /* \"#utility.yul\":2325:2326   */\n      dup1\n        /* \"#utility.yul\":2318:2330   */\n      revert\n        /* \"#utility.yul\":2280:2332   */\n    tag_192:\n        /* \"#utility.yul\":2364:2373   */\n      dup3\n        /* \"#utility.yul\":2351:2374   */\n      calldataload\n        /* \"#utility.yul\":2341:2374   */\n      swap2\n      pop\n        /* \"#utility.yul\":2425:2427   */\n      0x20\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2410:2428   */\n      add\n        /* \"#utility.yul\":2397:2429   */\n      calldataload\n        /* \"#utility.yul\":2452:2470   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2444:2450   */\n      dup2\n        /* \"#utility.yul\":2441:2471   */\n      gt\n        /* \"#utility.yul\":2438:2488   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2481:2482   */\n      dup1\n        /* \"#utility.yul\":2474:2486   */\n      revert\n        /* \"#utility.yul\":2438:2488   */\n    tag_193:\n        /* \"#utility.yul\":2507:2556   */\n      tag_194\n        /* \"#utility.yul\":2548:2555   */\n      dup6\n        /* \"#utility.yul\":2539:2545   */\n      dup3\n        /* \"#utility.yul\":2528:2537   */\n      dup7\n        /* \"#utility.yul\":2524:2546   */\n      add\n        /* \"#utility.yul\":2507:2556   */\n      tag_168\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2497:2556   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2174:2562   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2887   */\n    tag_55:\n        /* \"#utility.yul\":2635:2641   */\n      0x00\n        /* \"#utility.yul\":2688:2690   */\n      0x20\n        /* \"#utility.yul\":2676:2685   */\n      dup3\n        /* \"#utility.yul\":2667:2674   */\n      dup5\n        /* \"#utility.yul\":2663:2686   */\n      sub\n        /* \"#utility.yul\":2659:2691   */\n      slt\n        /* \"#utility.yul\":2656:2708   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":2704:2705   */\n      0x00\n        /* \"#utility.yul\":2701:2702   */\n      dup1\n        /* \"#utility.yul\":2694:2706   */\n      revert\n        /* \"#utility.yul\":2656:2708   */\n    tag_196:\n        /* \"#utility.yul\":2744:2753   */\n      dup2\n        /* \"#utility.yul\":2731:2754   */\n      calldataload\n        /* \"#utility.yul\":2777:2795   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2769:2775   */\n      dup2\n        /* \"#utility.yul\":2766:2796   */\n      gt\n        /* \"#utility.yul\":2763:2813   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":2809:2810   */\n      0x00\n        /* \"#utility.yul\":2806:2807   */\n      dup1\n        /* \"#utility.yul\":2799:2811   */\n      revert\n        /* \"#utility.yul\":2763:2813   */\n    tag_197:\n        /* \"#utility.yul\":2832:2881   */\n      tag_198\n        /* \"#utility.yul\":2873:2880   */\n      dup5\n        /* \"#utility.yul\":2864:2870   */\n      dup3\n        /* \"#utility.yul\":2853:2862   */\n      dup6\n        /* \"#utility.yul\":2849:2871   */\n      add\n        /* \"#utility.yul\":2832:2881   */\n      tag_168\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2822:2881   */\n      swap5\n        /* \"#utility.yul\":2567:2887   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3223:3545   */\n    tag_64:\n        /* \"#utility.yul\":3300:3306   */\n      0x00\n        /* \"#utility.yul\":3308:3314   */\n      dup1\n        /* \"#utility.yul\":3316:3322   */\n      0x00\n        /* \"#utility.yul\":3369:3371   */\n      0x60\n        /* \"#utility.yul\":3357:3366   */\n      dup5\n        /* \"#utility.yul\":3348:3355   */\n      dup7\n        /* \"#utility.yul\":3344:3367   */\n      sub\n        /* \"#utility.yul\":3340:3372   */\n      slt\n        /* \"#utility.yul\":3337:3389   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":3385:3386   */\n      0x00\n        /* \"#utility.yul\":3382:3383   */\n      dup1\n        /* \"#utility.yul\":3375:3387   */\n      revert\n        /* \"#utility.yul\":3337:3389   */\n    tag_201:\n        /* \"#utility.yul\":3408:3437   */\n      tag_202\n        /* \"#utility.yul\":3427:3436   */\n      dup5\n        /* \"#utility.yul\":3408:3437   */\n      tag_166\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3398:3437   */\n      swap6\n        /* \"#utility.yul\":3484:3486   */\n      0x20\n        /* \"#utility.yul\":3469:3487   */\n      dup6\n      add\n        /* \"#utility.yul\":3456:3488   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3535:3537   */\n      0x40\n        /* \"#utility.yul\":3520:3538   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":3507:3539   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3223:3545   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3732:3912   */\n    tag_73:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3844:3846   */\n      0x20\n        /* \"#utility.yul\":3832:3841   */\n      dup3\n        /* \"#utility.yul\":3823:3830   */\n      dup5\n        /* \"#utility.yul\":3819:3842   */\n      sub\n        /* \"#utility.yul\":3815:3847   */\n      slt\n        /* \"#utility.yul\":3812:3864   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":3860:3861   */\n      0x00\n        /* \"#utility.yul\":3857:3858   */\n      dup1\n        /* \"#utility.yul\":3850:3862   */\n      revert\n        /* \"#utility.yul\":3812:3864   */\n    tag_205:\n      pop\n        /* \"#utility.yul\":3883:3906   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3732:3912   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3917:4273   */\n    tag_86:\n        /* \"#utility.yul\":4119:4121   */\n      0x20\n        /* \"#utility.yul\":4101:4122   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4138:4156   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4131:4161   */\n      mstore\n        /* \"#utility.yul\":4197:4231   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4192:4194   */\n      0x40\n        /* \"#utility.yul\":4177:4195   */\n      dup3\n      add\n        /* \"#utility.yul\":4170:4232   */\n      mstore\n        /* \"#utility.yul\":4264:4266   */\n      0x60\n        /* \"#utility.yul\":4249:4267   */\n      add\n      swap1\n        /* \"#utility.yul\":3917:4273   */\n      jump\t// out\n        /* \"#utility.yul\":4976:5103   */\n    tag_169:\n        /* \"#utility.yul\":5037:5047   */\n      0x4e487b71\n        /* \"#utility.yul\":5032:5035   */\n      0xe0\n        /* \"#utility.yul\":5028:5048   */\n      shl\n        /* \"#utility.yul\":5025:5026   */\n      0x00\n        /* \"#utility.yul\":5018:5049   */\n      mstore\n        /* \"#utility.yul\":5068:5072   */\n      0x11\n        /* \"#utility.yul\":5065:5066   */\n      0x04\n        /* \"#utility.yul\":5058:5073   */\n      mstore\n        /* \"#utility.yul\":5092:5096   */\n      0x24\n        /* \"#utility.yul\":5089:5090   */\n      0x00\n        /* \"#utility.yul\":5082:5097   */\n      revert\n        /* \"#utility.yul\":5108:5236   */\n    tag_98:\n        /* \"#utility.yul\":5148:5151   */\n      0x00\n        /* \"#utility.yul\":5179:5180   */\n      dup3\n        /* \"#utility.yul\":5175:5181   */\n      not\n        /* \"#utility.yul\":5172:5173   */\n      dup3\n        /* \"#utility.yul\":5169:5182   */\n      gt\n        /* \"#utility.yul\":5166:5205   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":5185:5203   */\n      tag_212\n      tag_169\n      jump\t// in\n    tag_212:\n      pop\n        /* \"#utility.yul\":5221:5230   */\n      add\n      swap1\n        /* \"#utility.yul\":5108:5236   */\n      jump\t// out\n        /* \"#utility.yul\":5520:5797   */\n    tag_104:\n        /* \"#utility.yul\":5587:5593   */\n      0x00\n        /* \"#utility.yul\":5640:5642   */\n      0x20\n        /* \"#utility.yul\":5628:5637   */\n      dup3\n        /* \"#utility.yul\":5619:5626   */\n      dup5\n        /* \"#utility.yul\":5615:5638   */\n      sub\n        /* \"#utility.yul\":5611:5643   */\n      slt\n        /* \"#utility.yul\":5608:5660   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":5656:5657   */\n      0x00\n        /* \"#utility.yul\":5653:5654   */\n      dup1\n        /* \"#utility.yul\":5646:5658   */\n      revert\n        /* \"#utility.yul\":5608:5660   */\n    tag_215:\n        /* \"#utility.yul\":5688:5697   */\n      dup2\n        /* \"#utility.yul\":5682:5698   */\n      mload\n        /* \"#utility.yul\":5741:5746   */\n      dup1\n        /* \"#utility.yul\":5734:5747   */\n      iszero\n        /* \"#utility.yul\":5727:5748   */\n      iszero\n        /* \"#utility.yul\":5720:5725   */\n      dup2\n        /* \"#utility.yul\":5717:5749   */\n      eq\n        /* \"#utility.yul\":5707:5767   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":5763:5764   */\n      0x00\n        /* \"#utility.yul\":5760:5761   */\n      dup1\n        /* \"#utility.yul\":5753:5765   */\n      revert\n        /* \"#utility.yul\":5802:6006   */\n    tag_124:\n        /* \"#utility.yul\":5840:5843   */\n      0x00\n        /* \"#utility.yul\":5876:5880   */\n      0xff\n        /* \"#utility.yul\":5873:5874   */\n      dup3\n        /* \"#utility.yul\":5869:5881   */\n      and\n        /* \"#utility.yul\":5908:5912   */\n      0xff\n        /* \"#utility.yul\":5905:5906   */\n      dup5\n        /* \"#utility.yul\":5901:5913   */\n      and\n        /* \"#utility.yul\":5943:5946   */\n      dup1\n        /* \"#utility.yul\":5937:5941   */\n      0xff\n        /* \"#utility.yul\":5933:5947   */\n      sub\n        /* \"#utility.yul\":5928:5931   */\n      dup3\n        /* \"#utility.yul\":5925:5948   */\n      gt\n        /* \"#utility.yul\":5922:5971   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":5951:5969   */\n      tag_219\n      tag_169\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5987:6000   */\n      add\n      swap4\n        /* \"#utility.yul\":5802:6006   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6767:6951   */\n    tag_143:\n        /* \"#utility.yul\":6837:6843   */\n      0x00\n        /* \"#utility.yul\":6890:6892   */\n      0x20\n        /* \"#utility.yul\":6878:6887   */\n      dup3\n        /* \"#utility.yul\":6869:6876   */\n      dup5\n        /* \"#utility.yul\":6865:6888   */\n      sub\n        /* \"#utility.yul\":6861:6893   */\n      slt\n        /* \"#utility.yul\":6858:6910   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6906:6907   */\n      0x00\n        /* \"#utility.yul\":6903:6904   */\n      dup1\n        /* \"#utility.yul\":6896:6908   */\n      revert\n        /* \"#utility.yul\":6858:6910   */\n    tag_223:\n      pop\n        /* \"#utility.yul\":6929:6945   */\n      mload\n      swap2\n        /* \"#utility.yul\":6767:6951   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d31a3a47f1350c7fd843d899218402b384cdbd74c134c13c0db12f6e9ba4af9c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_289": {
									"entryPoint": null,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2602": {
									"entryPoint": null,
									"id": 2602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_369": {
									"entryPoint": 31,
									"id": 369,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ba58061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063c409144311610066578063c4091443146101e5578063d2b0737b146101f8578063f2fde38b14610219578063fa5408011461022c57600080fd5b80638da5cb5b1461019057806397aba7f9146101a1578063a7bb5803146101b457600080fd5b80632ada8a32116100c85780632ada8a32146101515780636c19e78314610164578063715018a6146101775780637ac3c02f1461017f57600080fd5b80630deea608146100ef578063144fa6d71461011757806321df0da71461012c575b600080fd5b6101026100fd366004610959565b61023f565b60405190151581526020015b60405180910390f35b61012a6101253660046109ba565b610288565b005b6003546001600160a01b03165b6040516001600160a01b03909116815260200161010e565b61012a61015f366004610959565b6102dd565b61012a6101723660046109ba565b61047a565b61012a6104c6565b6002546001600160a01b0316610139565b6000546001600160a01b0316610139565b6101396101af3660046109dc565b6104fc565b6101c76101c2366004610a23565b610584565b60408051938452602084019290925260ff169082015260600161010e565b61012a6101f33660046109ba565b6105f8565b61020b610206366004610a60565b61070d565b60405190815260200161010e565b61012a6102273660046109ba565b61075c565b61020b61023a366004610a93565b6107f7565b60008061024d86868661070d565b9050600061025a826107f7565b6002549091506001600160a01b031661027382866104fc565b6001600160a01b031614979650505050505050565b6000546001600160a01b031633146102bb5760405162461bcd60e51b81526004016102b290610aac565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102e98484848461023f565b61032e5760405162461bcd60e51b81526020600482015260166024820152751cda59db985d1d5c99481d995c9a599e4819985a5b1960521b60448201526064016102b2565b6001600160a01b038416600090815260016020526040902054821161038a5760405162461bcd60e51b81526020600482015260126024820152711b9bdb98d9481d995c9a599e4819985a5b1960721b60448201526064016102b2565b6001600160a01b0384166000908152600160208190526040909120546103af91610af7565b6001600160a01b038581166000818152600160205260409081902093909355600354925163a9059cbb60e01b815260048101919091526024810186905291169063a9059cbb906044016020604051808303816000875af1158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190610b0f565b508183856001600160a01b03167f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf760405160405180910390a450505050565b6000546001600160a01b031633146104a45760405162461bcd60e51b81526004016102b290610aac565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104f05760405162461bcd60e51b81526004016102b290610aac565b6104fa600061084a565b565b60008060008061050b85610584565b9194509250905060018661052083601b610b31565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561056f573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146105da5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016102b2565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b031633146106225760405162461bcd60e51b81526004016102b290610aac565b6003546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb923392909116906370a0823190602401602060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a9190610b56565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610b0f565b5050565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052605481018290526000906074016040516020818303038152906040528051906020012090509392505050565b6000546001600160a01b031633146107865760405162461bcd60e51b81526004016102b290610aac565b6001600160a01b0381166107eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b2565b6107f48161084a565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108b157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108dd57600080fd5b813567ffffffffffffffff808211156108f8576108f86108b6565b604051601f8301601f19908116603f01168101908282118183101715610920576109206108b6565b8160405283815286602085880101111561093957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561096f57600080fd5b6109788561089a565b93506020850135925060408501359150606085013567ffffffffffffffff8111156109a257600080fd5b6109ae878288016108cc565b91505092959194509250565b6000602082840312156109cc57600080fd5b6109d58261089a565b9392505050565b600080604083850312156109ef57600080fd5b82359150602083013567ffffffffffffffff811115610a0d57600080fd5b610a19858286016108cc565b9150509250929050565b600060208284031215610a3557600080fd5b813567ffffffffffffffff811115610a4c57600080fd5b610a58848285016108cc565b949350505050565b600080600060608486031215610a7557600080fd5b610a7e8461089a565b95602085013595506040909401359392505050565b600060208284031215610aa557600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b0a57610b0a610ae1565b500190565b600060208284031215610b2157600080fd5b815180151581146109d557600080fd5b600060ff821660ff84168060ff03821115610b4e57610b4e610ae1565b019392505050565b600060208284031215610b6857600080fd5b505191905056fea2646970667358221220d31a3a47f1350c7fd843d899218402b384cdbd74c134c13c0db12f6e9ba4af9c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBA5 DUP1 PUSH2 0x7E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC4091443 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC4091443 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xD2B0737B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2ADA8A32 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x2ADA8A32 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x7AC3C02F EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDEEA608 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x12A PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x12A PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x12A PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x139 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA23 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x12A PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH2 0x20B PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24D DUP7 DUP7 DUP7 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A DUP3 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x273 DUP3 DUP7 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2E9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x23F JUMP JUMPDEST PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1CDA59DB985D1D5C99481D995C9A599E4819985A5B19 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1B9BDB98D9481D995C9A599E4819985A5B19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x3AF SWAP2 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST POP DUP2 DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x4FA PUSH1 0x0 PUSH2 0x84A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x50B DUP6 PUSH2 0x584 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 DUP7 PUSH2 0x520 DUP4 PUSH1 0x1B PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B2 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x84A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F8 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0x8B6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x978 DUP6 PUSH2 0x89A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP8 DUP3 DUP9 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D5 DUP3 PUSH2 0x89A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA19 DUP6 DUP3 DUP7 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA58 DUP5 DUP3 DUP6 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7E DUP5 PUSH2 0x89A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0xAE1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0xB4E JUMPI PUSH2 0xB4E PUSH2 0xAE1 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 BYTE GASPRICE SELFBALANCE CALL CALLDATALOAD 0xC PUSH32 0xD843D899218402B384CDBD74C134C13C0DB12F6E9BA4AF9C64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "250:3449:0:-:0;;;;;;;;;;;;-1:-1:-1;921:32:1;719:10:10;921:18:1;:32::i;:::-;250:3449:0;;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;250:3449:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_2602": {
									"entryPoint": null,
									"id": 2602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_369": {
									"entryPoint": 2122,
									"id": 369,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_199": {
									"entryPoint": 733,
									"id": 199,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@getEthSignedMessageHash_59": {
									"entryPoint": 2039,
									"id": 59,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMessageHash_43": {
									"entryPoint": 1805,
									"id": 43,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getSigner_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getToken_264": {
									"entryPoint": null,
									"id": 264,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_298": {
									"entryPoint": null,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recoverSigner_88": {
									"entryPoint": 1276,
									"id": 88,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_326": {
									"entryPoint": 1222,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setSigner_211": {
									"entryPoint": 1146,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setToken_223": {
									"entryPoint": 648,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@splitSignature_144": {
									"entryPoint": 1412,
									"id": 144,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@transferOwnership_349": {
									"entryPoint": 1884,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@urgentWithdraw_248": {
									"entryPoint": 1528,
									"id": 248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verify_123": {
									"entryPoint": 575,
									"id": 123,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes_memory_ptr": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_228faa340c352fb4fed8f5a62a022fd926f4a67ea68ee5039c0431e831ca65d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_860c9c7d46565f5e90fa37fbbb354cb64576cca33d51ac8e0708a8fb369bfae9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8109:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "248:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "253:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "244:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "244:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "234:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "234:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "284:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "274:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "305:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "298:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "192:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:666:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "425:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "434:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "437:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "427:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "427:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "427:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "404:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "412:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "400:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "400:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "419:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "396:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "396:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "389:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:35:13"
															},
															"nodeType": "YulIf",
															"src": "386:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "450:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "460:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "454:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "489:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "499:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "493:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "540:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "542:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "542:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "532:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "536:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "529:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:10:13"
															},
															"nodeType": "YulIf",
															"src": "526:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "571:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "581:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "581:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "575:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "597:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "617:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "611:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "601:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "629:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "651:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "675:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "679:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "671:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "671:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "686:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "667:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "667:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "691:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "663:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "663:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "696:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "659:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "659:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "647:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "633:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "761:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "718:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "730:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "715:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "738:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "735:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "735:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "712:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "712:46:13"
															},
															"nodeType": "YulIf",
															"src": "709:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "797:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "801:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "790:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "790:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "836:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "821:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "821:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "887:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "899:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "889:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "889:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "889:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "862:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "870:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "858:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "858:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "875:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "882:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "851:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:35:13"
															},
															"nodeType": "YulIf",
															"src": "848:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "937:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "925:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "948:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "956:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "944:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "944:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "963:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "912:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "912:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "912:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "990:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "998:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "986:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "986:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1003:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "982:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "982:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "975:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "975:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1021:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1030:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1021:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "350:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "358:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "366:5:13",
														"type": ""
													}
												],
												"src": "324:718:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:401:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1224:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1233:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1236:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1226:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1198:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1219:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1190:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:33:13"
															},
															"nodeType": "YulIf",
															"src": "1187:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1249:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1278:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1259:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1297:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1307:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1297:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1348:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1375:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1386:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1358:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1399:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1441:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1413:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1403:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1488:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1497:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1500:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1490:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1490:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1490:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1468:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1457:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:30:13"
															},
															"nodeType": "YulIf",
															"src": "1454:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1513:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1544:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1555:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1564:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1523:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1523:49:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1119:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1130:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1142:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1150:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1158:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1166:6:13",
														"type": ""
													}
												],
												"src": "1047:531:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1678:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1688:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1711:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1688:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1730:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1755:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1748:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1748:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1741:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1741:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1723:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1723:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1647:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1658:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1669:4:13",
														"type": ""
													}
												],
												"src": "1583:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1845:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1891:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1900:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1893:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1893:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1893:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1866:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1875:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1887:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:32:13"
															},
															"nodeType": "YulIf",
															"src": "1855:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1916:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1945:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1926:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1811:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1822:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1834:6:13",
														"type": ""
													}
												],
												"src": "1775:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2067:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2077:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2089:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2100:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2085:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2150:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2155:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2146:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2146:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2159:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2142:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2142:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2130:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2036:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2047:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2058:4:13",
														"type": ""
													}
												],
												"src": "1966:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2270:292:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2316:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2325:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2318:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2318:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2318:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2291:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2300:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2287:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2283:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:32:13"
															},
															"nodeType": "YulIf",
															"src": "2280:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2364:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2351:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2383:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2425:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2397:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2387:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2472:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2481:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2484:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2474:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2474:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2474:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2444:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2452:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2441:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:30:13"
															},
															"nodeType": "YulIf",
															"src": "2438:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2497:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2528:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2539:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2548:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2507:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:49:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2251:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2259:6:13",
														"type": ""
													}
												],
												"src": "2174:388:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2692:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2694:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2694:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2667:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2676:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2663:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2688:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2659:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:32:13"
															},
															"nodeType": "YulIf",
															"src": "2656:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2717:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2744:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2731:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2721:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2797:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2806:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2809:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2799:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2799:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2799:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2769:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2766:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:30:13"
															},
															"nodeType": "YulIf",
															"src": "2763:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2822:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2853:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2864:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2873:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2832:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:49:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2623:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2635:6:13",
														"type": ""
													}
												],
												"src": "2567:320:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3045:173:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3055:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3067:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3078:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3063:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3055:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3097:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3108:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3135:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3146:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3124:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3124:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3189:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3198:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3206:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3194:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3194:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3167:45:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2998:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3009:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3017:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3025:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3036:4:13",
														"type": ""
													}
												],
												"src": "2892:326:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:218:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3373:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3382:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3385:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3375:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3375:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3375:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3348:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3344:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3344:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3369:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:32:13"
															},
															"nodeType": "YulIf",
															"src": "3337:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3398:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3427:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3408:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3398:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3446:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3456:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3535:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3520:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3507:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3277:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3288:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3300:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3308:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3316:6:13",
														"type": ""
													}
												],
												"src": "3223:322:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3651:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3661:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3673:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3684:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3669:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3669:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3661:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3703:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3714:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3696:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3620:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3631:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3642:4:13",
														"type": ""
													}
												],
												"src": "3550:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3802:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3848:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3857:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3860:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3850:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3850:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3850:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3823:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3819:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:32:13"
															},
															"nodeType": "YulIf",
															"src": "3812:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3873:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3896:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3883:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3768:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3779:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3791:6:13",
														"type": ""
													}
												],
												"src": "3732:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4091:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4108:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4119:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4101:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4142:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4153:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4138:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4138:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4131:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4181:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4192:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4177:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4177:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4197:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4170:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4170:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4241:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4253:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4264:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4249:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4249:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4241:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4068:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4082:4:13",
														"type": ""
													}
												],
												"src": "3917:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4469:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4480:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4462:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4462:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4503:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4514:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4499:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4499:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4519:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4492:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4492:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4542:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4553:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4538:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4538:18:13"
																	},
																	{
																		"hexValue": "7369676e617475726520766572696679206661696c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4558:24:13",
																		"type": "",
																		"value": "signature verify faild"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4531:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4592:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4604:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4615:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4600:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4592:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_228faa340c352fb4fed8f5a62a022fd926f4a67ea68ee5039c0431e831ca65d7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4429:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4443:4:13",
														"type": ""
													}
												],
												"src": "4278:346:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4803:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4813:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4813:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4854:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4865:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4850:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4870:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4843:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4893:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4904:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:18:13"
																	},
																	{
																		"hexValue": "6e6f6e636520766572696679206661696c64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4909:20:13",
																		"type": "",
																		"value": "nonce verify faild"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4882:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4939:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4951:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4939:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_860c9c7d46565f5e90fa37fbbb354cb64576cca33d51ac8e0708a8fb369bfae9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4780:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4794:4:13",
														"type": ""
													}
												],
												"src": "4629:342:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5008:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5032:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5037:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5028:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5018:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5018:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5065:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5068:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5058:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5058:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5058:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5092:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5082:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5082:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4976:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5183:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5185:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5185:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5185:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5172:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5179:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5175:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5169:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:13:13"
															},
															"nodeType": "YulIf",
															"src": "5166:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5214:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5225:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5228:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5221:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5214:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5139:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5142:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5148:3:13",
														"type": ""
													}
												],
												"src": "5108:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5370:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5380:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5392:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5388:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5388:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5380:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5422:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5437:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5453:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5458:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5449:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5449:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5462:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5445:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5445:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5415:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5486:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5497:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5482:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5482:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5475:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5475:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5475:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5331:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5342:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5350:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5361:4:13",
														"type": ""
													}
												],
												"src": "5241:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5598:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5644:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5653:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5656:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5646:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5646:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5646:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5619:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5628:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5615:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5640:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5611:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:32:13"
															},
															"nodeType": "YulIf",
															"src": "5608:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5669:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5688:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5682:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5682:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5673:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5751:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5760:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5763:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5753:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5753:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5753:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5720:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5741:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5734:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5734:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5727:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5727:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5717:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5717:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5710:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:40:13"
															},
															"nodeType": "YulIf",
															"src": "5707:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5776:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5786:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5564:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5575:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5587:6:13",
														"type": ""
													}
												],
												"src": "5520:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5848:158:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5858:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5873:1:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5876:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5869:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:12:13"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "5862:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5890:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5905:1:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5908:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5901:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:12:13"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "5894:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5949:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5951:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5951:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5951:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "5928:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5937:4:13",
																				"type": "",
																				"value": "0xff"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "5943:3:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5933:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5933:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5925:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:23:13"
															},
															"nodeType": "YulIf",
															"src": "5922:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5980:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "5991:3:13"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "5996:3:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5987:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5987:13:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5980:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5831:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5834:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5840:3:13",
														"type": ""
													}
												],
												"src": "5802:204:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6192:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6202:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6214:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6225:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6202:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6245:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6256:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6238:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6238:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6283:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6294:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6279:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6303:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6311:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6299:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6272:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6272:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6337:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6348:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6333:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6353:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6326:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6326:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6380:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6391:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6376:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6376:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6369:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6369:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6369:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6137:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6148:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6156:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6164:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6172:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6183:4:13",
														"type": ""
													}
												],
												"src": "6011:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6588:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6605:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6616:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6598:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6598:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6639:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6650:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6635:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6655:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6628:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6628:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6678:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6689:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6674:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6674:18:13"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6694:26:13",
																		"type": "",
																		"value": "invalid signature length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6667:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6667:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6730:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6742:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6753:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6730:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6565:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6579:4:13",
														"type": ""
													}
												],
												"src": "6414:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6848:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6894:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6903:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6906:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6896:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6896:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6896:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6869:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6878:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6865:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6865:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6861:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6861:32:13"
															},
															"nodeType": "YulIf",
															"src": "6858:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6919:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6935:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6929:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6929:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6814:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6825:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6837:6:13",
														"type": ""
													}
												],
												"src": "6767:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7131:184:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7148:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7161:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7165:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7157:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7157:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7178:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7174:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7174:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7141:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7141:66:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7227:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7232:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7223:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7223:12:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7237:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7216:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7216:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7216:28:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7264:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7269:2:13",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7260:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7260:12:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7253:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7253:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7253:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7290:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7301:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7306:2:13",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7297:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7297:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7290:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7091:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7096:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7104:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7112:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7123:3:13",
														"type": ""
													}
												],
												"src": "6956:359:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7494:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7511:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7504:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7504:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7556:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7541:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7534:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7534:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7595:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7580:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7580:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7600:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7573:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7573:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7655:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7666:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7651:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7671:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7644:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7644:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7689:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7701:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7712:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7697:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7689:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7471:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7485:4:13",
														"type": ""
													}
												],
												"src": "7320:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7947:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7964:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7969:66:13",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7957:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7957:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7957:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8056:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8061:2:13",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8052:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8052:12:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8066:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8045:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8082:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8093:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8098:2:13",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8089:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7923:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7928:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7939:3:13",
														"type": ""
													}
												],
												"src": "7727:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_uint8__to_t_bytes32_t_bytes32_t_uint8__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_228faa340c352fb4fed8f5a62a022fd926f4a67ea68ee5039c0431e831ca65d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"signature verify faild\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_860c9c7d46565f5e90fa37fbbb354cb64576cca33d51ac8e0708a8fb369bfae9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"nonce verify faild\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        let x_1 := and(x, 0xff)\n        let y_1 := and(y, 0xff)\n        if gt(x_1, sub(0xff, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063c409144311610066578063c4091443146101e5578063d2b0737b146101f8578063f2fde38b14610219578063fa5408011461022c57600080fd5b80638da5cb5b1461019057806397aba7f9146101a1578063a7bb5803146101b457600080fd5b80632ada8a32116100c85780632ada8a32146101515780636c19e78314610164578063715018a6146101775780637ac3c02f1461017f57600080fd5b80630deea608146100ef578063144fa6d71461011757806321df0da71461012c575b600080fd5b6101026100fd366004610959565b61023f565b60405190151581526020015b60405180910390f35b61012a6101253660046109ba565b610288565b005b6003546001600160a01b03165b6040516001600160a01b03909116815260200161010e565b61012a61015f366004610959565b6102dd565b61012a6101723660046109ba565b61047a565b61012a6104c6565b6002546001600160a01b0316610139565b6000546001600160a01b0316610139565b6101396101af3660046109dc565b6104fc565b6101c76101c2366004610a23565b610584565b60408051938452602084019290925260ff169082015260600161010e565b61012a6101f33660046109ba565b6105f8565b61020b610206366004610a60565b61070d565b60405190815260200161010e565b61012a6102273660046109ba565b61075c565b61020b61023a366004610a93565b6107f7565b60008061024d86868661070d565b9050600061025a826107f7565b6002549091506001600160a01b031661027382866104fc565b6001600160a01b031614979650505050505050565b6000546001600160a01b031633146102bb5760405162461bcd60e51b81526004016102b290610aac565b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6102e98484848461023f565b61032e5760405162461bcd60e51b81526020600482015260166024820152751cda59db985d1d5c99481d995c9a599e4819985a5b1960521b60448201526064016102b2565b6001600160a01b038416600090815260016020526040902054821161038a5760405162461bcd60e51b81526020600482015260126024820152711b9bdb98d9481d995c9a599e4819985a5b1960721b60448201526064016102b2565b6001600160a01b0384166000908152600160208190526040909120546103af91610af7565b6001600160a01b038581166000818152600160205260409081902093909355600354925163a9059cbb60e01b815260048101919091526024810186905291169063a9059cbb906044016020604051808303816000875af1158015610417573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043b9190610b0f565b508183856001600160a01b03167f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf760405160405180910390a450505050565b6000546001600160a01b031633146104a45760405162461bcd60e51b81526004016102b290610aac565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104f05760405162461bcd60e51b81526004016102b290610aac565b6104fa600061084a565b565b60008060008061050b85610584565b9194509250905060018661052083601b610b31565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561056f573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600083516041146105da5760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016102b2565b50505060208101516040820151606090920151909260009190911a90565b6000546001600160a01b031633146106225760405162461bcd60e51b81526004016102b290610aac565b6003546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb923392909116906370a0823190602401602060405180830381865afa158015610676573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069a9190610b56565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190610b0f565b5050565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052605481018290526000906074016040516020818303038152906040528051906020012090509392505050565b6000546001600160a01b031633146107865760405162461bcd60e51b81526004016102b290610aac565b6001600160a01b0381166107eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b2565b6107f48161084a565b50565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108b157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126108dd57600080fd5b813567ffffffffffffffff808211156108f8576108f86108b6565b604051601f8301601f19908116603f01168101908282118183101715610920576109206108b6565b8160405283815286602085880101111561093957600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561096f57600080fd5b6109788561089a565b93506020850135925060408501359150606085013567ffffffffffffffff8111156109a257600080fd5b6109ae878288016108cc565b91505092959194509250565b6000602082840312156109cc57600080fd5b6109d58261089a565b9392505050565b600080604083850312156109ef57600080fd5b82359150602083013567ffffffffffffffff811115610a0d57600080fd5b610a19858286016108cc565b9150509250929050565b600060208284031215610a3557600080fd5b813567ffffffffffffffff811115610a4c57600080fd5b610a58848285016108cc565b949350505050565b600080600060608486031215610a7557600080fd5b610a7e8461089a565b95602085013595506040909401359392505050565b600060208284031215610aa557600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b0a57610b0a610ae1565b500190565b600060208284031215610b2157600080fd5b815180151581146109d557600080fd5b600060ff821660ff84168060ff03821115610b4e57610b4e610ae1565b019392505050565b600060208284031215610b6857600080fd5b505191905056fea2646970667358221220d31a3a47f1350c7fd843d899218402b384cdbd74c134c13c0db12f6e9ba4af9c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xC4091443 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC4091443 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xD2B0737B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xFA540801 EQ PUSH2 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x97ABA7F9 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xA7BB5803 EQ PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2ADA8A32 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x2ADA8A32 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x7AC3C02F EQ PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDEEA608 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x144FA6D7 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x21DF0DA7 EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x23F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x288 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x12A PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0x959 JUMP JUMPDEST PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x12A PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x12A PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x139 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x139 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xA23 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x12A PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x20B PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0xA60 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x12A PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH2 0x20B PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0xA93 JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x24D DUP7 DUP7 DUP7 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x25A DUP3 PUSH2 0x7F7 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x273 DUP3 DUP7 PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2E9 DUP5 DUP5 DUP5 DUP5 PUSH2 0x23F JUMP JUMPDEST PUSH2 0x32E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1CDA59DB985D1D5C99481D995C9A599E4819985A5B19 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1B9BDB98D9481D995C9A599E4819985A5B19 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x3AF SWAP2 PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD SWAP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST POP DUP2 DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH2 0x4FA PUSH1 0x0 PUSH2 0x84A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x50B DUP6 PUSH2 0x584 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 DUP7 PUSH2 0x520 DUP4 PUSH1 0x1B PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 EQ PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E76616C6964207369676E6174757265206C656E6774680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B2 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 SWAP1 SWAP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x0 SWAP2 SWAP1 SWAP2 BYTE SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x622 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP3 PUSH4 0xA9059CBB SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x676 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x709 SWAP2 SWAP1 PUSH2 0xB0F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B2 SWAP1 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B2 JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x84A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F8 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0x8B6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x978 DUP6 PUSH2 0x89A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9AE DUP8 DUP3 DUP9 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D5 DUP3 PUSH2 0x89A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA19 DUP6 DUP3 DUP7 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA58 DUP5 DUP3 DUP6 ADD PUSH2 0x8CC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7E DUP5 PUSH2 0x89A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB0A JUMPI PUSH2 0xB0A PUSH2 0xAE1 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 PUSH1 0xFF SUB DUP3 GT ISZERO PUSH2 0xB4E JUMPI PUSH2 0xB4E PUSH2 0xAE1 JUMP JUMPDEST ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 BYTE GASPRICE SELFBALANCE CALL CALLDATALOAD 0xC PUSH32 0xD843D899218402B384CDBD74C134C13C0DB12F6E9BA4AF9C64736F6C63430008 0xD STOP CALLER ",
							"sourceMap": "250:3449:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1416:384;;;;;;:::i;:::-;;:::i;:::-;;;1748:14:13;;1741:22;1723:41;;1711:2;1696:18;1416:384:0;;;;;;;;3257:88;;;;;;:::i;:::-;;:::i;:::-;;3608:86;3677:9;;-1:-1:-1;;;;;3677:9:0;3608:86;;;-1:-1:-1;;;;;2130:32:13;;;2112:51;;2100:2;2085:18;3608:86:0;1966:203:13;2713:440:0;;;;;;:::i;:::-;;:::i;3161:88::-;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;3517:83:0:-;3586:6;;-1:-1:-1;;;;;3586:6:0;3517:83;;1036:85:1;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;1122:286:0;;;;;;:::i;:::-;;:::i;1810:891::-;;;;;;:::i;:::-;;:::i;:::-;;;;3090:25:13;;;3146:2;3131:18;;3124:34;;;;3206:4;3194:17;3174:18;;;3167:45;3078:2;3063:18;1810:891:0;2892:326:13;3353:156:0;;;;;;:::i;:::-;;:::i;467:206::-;;;;;;:::i;:::-;;:::i;:::-;;;3696:25:13;;;3684:2;3669:18;467:206:0;3550:177:13;1918:198:1;;;;;;:::i;:::-;;:::i;681:433:0:-;;;;;;:::i;:::-;;:::i;1416:384::-;1563:4;1580:19;1602:36;1617:3;1622:7;1631:6;1602:14;:36::i;:::-;1580:58;;1649:28;1680:36;1704:11;1680:23;:36::i;:::-;1786:6;;1649:67;;-1:-1:-1;;;;;;1786:6:0;1736:46;1649:67;1772:9;1736:13;:46::i;:::-;-1:-1:-1;;;;;1736:56:0;;;1416:384;-1:-1:-1;;;;;;;1416:384:0:o;3257:88::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:10;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;3319:9:0::1;:18:::0;;-1:-1:-1;;;;;;3319:18:0::1;-1:-1:-1::0;;;;;3319:18:0;;;::::1;::::0;;;::::1;::::0;;3257:88::o;2713:440::-;2872:39;2879:3;2884:7;2893:6;2901:9;2872:6;:39::i;:::-;2864:74;;;;-1:-1:-1;;;2864:74:0;;4480:2:13;2864:74:0;;;4462:21:13;4519:2;4499:18;;;4492:30;-1:-1:-1;;;4538:18:13;;;4531:52;4600:18;;2864:74:0;4278:346:13;2864:74:0;-1:-1:-1;;;;;2957:14:0;;;;;;:9;:14;;;;;;:23;-1:-1:-1;2949:54:0;;;;-1:-1:-1;;;2949:54:0;;4831:2:13;2949:54:0;;;4813:21:13;4870:2;4850:18;;;4843:30;-1:-1:-1;;;4889:18:13;;;4882:48;4947:18;;2949:54:0;4629:342:13;2949:54:0;-1:-1:-1;;;;;3031:14:0;;;;;;:9;:14;;;;;;;;;:18;;;:::i;:::-;-1:-1:-1;;;;;3014:14:0;;;;;;;:9;:14;;;;;;;:35;;;;3069:9;;3062:40;;-1:-1:-1;;;3062:40:0;;;;;5415:51:13;;;;5482:18;;;5475:34;;;3069:9:0;;;3062:26;;5388:18:13;;3062:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3138:6;3129:7;3124:3;-1:-1:-1;;;;;3118:27:0;;;;;;;;;;;2713:440;;;;:::o;3161:88::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:10;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;3225:6:0::1;:16:::0;;-1:-1:-1;;;;;;3225:16:0::1;-1:-1:-1::0;;;;;3225:16:0;;;::::1;::::0;;;::::1;::::0;;3161:88::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:10;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1122:286:0:-;1249:7;1275:9;1286;1297:7;1308:26;1323:10;1308:14;:26::i;:::-;1274:60;;-1:-1:-1;1274:60:0;-1:-1:-1;1274:60:0;-1:-1:-1;1354:46:0;1364:21;1387:6;1274:60;1391:2;1387:6;:::i;:::-;1354:46;;;;;;;;;;;;6238:25:13;;;;6311:4;6299:17;;;6279:18;;;6272:45;6333:18;;;6326:34;;;6376:18;;;6369:34;;;6210:19;;1354:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1354:46:0;;-1:-1:-1;;1354:46:0;;;1122:286;-1:-1:-1;;;;;;;1122:286:0:o;1810:891::-;1914:9;1938;1962:7;2005:3;:10;2019:2;2005:16;1997:53;;;;-1:-1:-1;;;1997:53:0;;6616:2:13;1997:53:0;;;6598:21:13;6655:2;6635:18;;;6628:30;6694:26;6674:18;;;6667:54;6738:18;;1997:53:0;6414:348:13;1997:53:0;-1:-1:-1;;;2459:2:0;2450:12;;2444:19;2529:2;2520:12;;2514:19;2636:2;2627:12;;;2621:19;2444;;2618:1;2613:28;;;;;1810:891::o;3353:156::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:10;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;3465:9:0::1;::::0;3458:42:::1;::::0;-1:-1:-1;;;3458:42:0;;3494:4:::1;3458:42;::::0;::::1;2112:51:13::0;-1:-1:-1;;;;;3421:23:0;;::::1;::::0;::::1;::::0;3446:10:::1;::::0;3465:9;;::::1;::::0;3458:27:::1;::::0;2085:18:13;;3458:42:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3421:80;::::0;-1:-1:-1;;;;;;3421:80:0::1;::::0;;;;;;-1:-1:-1;;;;;5433:32:13;;;3421:80:0::1;::::0;::::1;5415:51:13::0;5482:18;;;5475:34;5388:18;;3421:80:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3353:156:::0;:::o;467:206::-;626:38;;-1:-1:-1;;7161:2:13;7157:15;;;7153:53;626:38:0;;;7141:66:13;7223:12;;;7216:28;;;7260:12;;;7253:28;;;589:7:0;;7297:12:13;;626:38:0;;;;;;;;;;;;616:49;;;;;;609:56;;467:206;;;;;:::o;1918:198:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:10;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;7522:2:13;1998:73:1::1;::::0;::::1;7504:21:13::0;7561:2;7541:18;;;7534:30;7600:34;7580:18;;;7573:62;-1:-1:-1;;;7651:18:13;;;7644:36;7697:19;;1998:73:1::1;7320:402:13::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;681:433:0:-;1025:66;;7969::13;1025::0;;;7957:79:13;8052:12;;;8045:28;;;784:7:0;;8089:12:13;;1025:66:0;;;;;;;;;;;;997:109;;;;;;977:129;;681:433;;;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:718;366:5;419:3;412:4;404:6;400:17;396:27;386:55;;437:1;434;427:12;386:55;473:6;460:20;499:18;536:2;532;529:10;526:36;;;542:18;;:::i;:::-;617:2;611:9;585:2;671:13;;-1:-1:-1;;667:22:13;;;691:2;663:31;659:40;647:53;;;715:18;;;735:22;;;712:46;709:72;;;761:18;;:::i;:::-;801:10;797:2;790:22;836:2;828:6;821:18;882:3;875:4;870:2;862:6;858:15;854:26;851:35;848:55;;;899:1;896;889:12;848:55;963:2;956:4;948:6;944:17;937:4;929:6;925:17;912:54;1010:1;1003:4;998:2;990:6;986:15;982:26;975:37;1030:6;1021:15;;;;;;324:718;;;;:::o;1047:531::-;1142:6;1150;1158;1166;1219:3;1207:9;1198:7;1194:23;1190:33;1187:53;;;1236:1;1233;1226:12;1187:53;1259:29;1278:9;1259:29;:::i;:::-;1249:39;;1335:2;1324:9;1320:18;1307:32;1297:42;;1386:2;1375:9;1371:18;1358:32;1348:42;;1441:2;1430:9;1426:18;1413:32;1468:18;1460:6;1457:30;1454:50;;;1500:1;1497;1490:12;1454:50;1523:49;1564:7;1555:6;1544:9;1540:22;1523:49;:::i;:::-;1513:59;;;1047:531;;;;;;;:::o;1775:186::-;1834:6;1887:2;1875:9;1866:7;1862:23;1858:32;1855:52;;;1903:1;1900;1893:12;1855:52;1926:29;1945:9;1926:29;:::i;:::-;1916:39;1775:186;-1:-1:-1;;;1775:186:13:o;2174:388::-;2251:6;2259;2312:2;2300:9;2291:7;2287:23;2283:32;2280:52;;;2328:1;2325;2318:12;2280:52;2364:9;2351:23;2341:33;;2425:2;2414:9;2410:18;2397:32;2452:18;2444:6;2441:30;2438:50;;;2484:1;2481;2474:12;2438:50;2507:49;2548:7;2539:6;2528:9;2524:22;2507:49;:::i;:::-;2497:59;;;2174:388;;;;;:::o;2567:320::-;2635:6;2688:2;2676:9;2667:7;2663:23;2659:32;2656:52;;;2704:1;2701;2694:12;2656:52;2744:9;2731:23;2777:18;2769:6;2766:30;2763:50;;;2809:1;2806;2799:12;2763:50;2832:49;2873:7;2864:6;2853:9;2849:22;2832:49;:::i;:::-;2822:59;2567:320;-1:-1:-1;;;;2567:320:13:o;3223:322::-;3300:6;3308;3316;3369:2;3357:9;3348:7;3344:23;3340:32;3337:52;;;3385:1;3382;3375:12;3337:52;3408:29;3427:9;3408:29;:::i;:::-;3398:39;3484:2;3469:18;;3456:32;;-1:-1:-1;3535:2:13;3520:18;;;3507:32;;3223:322;-1:-1:-1;;;3223:322:13:o;3732:180::-;3791:6;3844:2;3832:9;3823:7;3819:23;3815:32;3812:52;;;3860:1;3857;3850:12;3812:52;-1:-1:-1;3883:23:13;;3732:180;-1:-1:-1;3732:180:13:o;3917:356::-;4119:2;4101:21;;;4138:18;;;4131:30;4197:34;4192:2;4177:18;;4170:62;4264:2;4249:18;;3917:356::o;4976:127::-;5037:10;5032:3;5028:20;5025:1;5018:31;5068:4;5065:1;5058:15;5092:4;5089:1;5082:15;5108:128;5148:3;5179:1;5175:6;5172:1;5169:13;5166:39;;;5185:18;;:::i;:::-;-1:-1:-1;5221:9:13;;5108:128::o;5520:277::-;5587:6;5640:2;5628:9;5619:7;5615:23;5611:32;5608:52;;;5656:1;5653;5646:12;5608:52;5688:9;5682:16;5741:5;5734:13;5727:21;5720:5;5717:32;5707:60;;5763:1;5760;5753:12;5802:204;5840:3;5876:4;5873:1;5869:12;5908:4;5905:1;5901:12;5943:3;5937:4;5933:14;5928:3;5925:23;5922:49;;;5951:18;;:::i;:::-;5987:13;;5802:204;-1:-1:-1;;;5802:204:13:o;6767:184::-;6837:6;6890:2;6878:9;6869:7;6865:23;6861:32;6858:52;;;6906:1;6903;6896:12;6858:52;-1:-1:-1;6929:16:13;;6767:184;-1:-1:-1;6767:184:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "596200",
								"executionCost": "26473",
								"totalCost": "622673"
							},
							"external": {
								"claim(address,uint256,uint256,bytes)": "infinite",
								"getEthSignedMessageHash(bytes32)": "532",
								"getMessageHash(address,uint256,uint256)": "659",
								"getSigner()": "2420",
								"getToken()": "2388",
								"owner()": "2354",
								"recoverSigner(bytes32,bytes)": "infinite",
								"renounceOwnership()": "28181",
								"setSigner(address)": "26756",
								"setToken(address)": "26757",
								"splitSignature(bytes)": "infinite",
								"transferOwnership(address)": "28375",
								"urgentWithdraw(address)": "infinite",
								"verify(address,uint256,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 3699,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d31a3a47f1350c7fd843d899218402b384cdbd74c134c13c0db12f6e9ba4af9c64736f6c634300080d0033",
									".code": [
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "D2B0737B"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "FA540801"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "97ABA7F9"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "A7BB5803"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "2ADA8A32"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "2ADA8A32"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "6C19E783"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "7AC3C02F"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "DEEA608"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "144FA6D7"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "21DF0DA7"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 3699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1762,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1762,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1763,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1764,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1764,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3608,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1966,
											"end": 2169,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 3600,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3517,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3517,
											"end": 3600,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3115,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3115,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3090,
											"end": 3115,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3210,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3192,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3174,
											"end": 3192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3212,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3078,
											"end": 3080,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3063,
											"end": 3081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2892,
											"end": 3218,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3721,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3686,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 467,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3550,
											"end": 3727,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1622,
											"end": 1629,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1602,
											"end": 1638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1602,
											"end": 1638,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1602,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1580,
											"end": 1638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1704,
											"end": 1715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1680,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1680,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1649,
											"end": 1716,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1736,
											"end": 1782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1736,
											"end": 1782,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1736,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1792,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1792,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1416,
											"end": 1800,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3328,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3337,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 3345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2893,
											"end": 2899,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2872,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4480,
											"end": 4482,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4462,
											"end": 4483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4519,
											"end": 4521,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4522,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CDA59DB985D1D5C99481D995C9A599E4819985A5B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4531,
											"end": 4583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4278,
											"end": 4624,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2864,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4831,
											"end": 4833,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 4834,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4870,
											"end": 4872,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9BDB98D9481D995C9A599E4819985A5B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4889,
											"end": 4907,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4882,
											"end": 4930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4947,
											"end": 4965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4629,
											"end": 4971,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2949,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5509,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3069,
											"end": 3078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3062,
											"end": 3088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5388,
											"end": 5406,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5388,
											"end": 5406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3124,
											"end": 3127,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3145,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 3153,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3241,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3249,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1286,
											"end": 1295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1323,
											"end": 1333,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1308,
											"end": 1334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1334,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1308,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1274,
											"end": 1334,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1334,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1364,
											"end": 1385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1274,
											"end": 1334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 6263,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6263,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6263,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6238,
											"end": 6263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6316,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6272,
											"end": 6317,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6360,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6403,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6403,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6403,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6210,
											"end": 6229,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6210,
											"end": 6229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1400,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1122,
											"end": 1408,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2005,
											"end": 2021,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6657,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6635,
											"end": 6653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6658,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6694,
											"end": 6720,
											"name": "PUSH",
											"source": 13,
											"value": "696E76616C6964207369676E6174757265206C656E6774680000000000000000"
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6674,
											"end": 6692,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6721,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6414,
											"end": 6762,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1997,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2636,
											"end": 2638,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2463,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2701,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3498,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3421,
											"end": 3444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3485,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3458,
											"end": 3485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2085,
											"end": 2103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3458,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5433,
											"end": 5465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5465,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5465,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5509,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5388,
											"end": 5406,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5388,
											"end": 5406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3421,
											"end": 3501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7161,
											"end": 7163,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7153,
											"end": 7206,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7141,
											"end": 7207,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7223,
											"end": 7235,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 7223,
											"end": 7235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7223,
											"end": 7235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7244,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7244,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7281,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 589,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7309,
											"name": "PUSH",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 7297,
											"end": 7309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 626,
											"end": 664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 616,
											"end": 665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 665,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 616,
											"end": 665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 616,
											"end": 665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 609,
											"end": 665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 609,
											"end": 665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 467,
											"end": 673,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7504,
											"end": 7525,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 7541,
											"end": 7559,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7541,
											"end": 7559,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7541,
											"end": 7559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7534,
											"end": 7564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7573,
											"end": 7635,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7644,
											"end": 7680,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7697,
											"end": 7716,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 7697,
											"end": 7716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7320,
											"end": 7722,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7969,
											"end": 8035,
											"name": "PUSH",
											"source": 13,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7957,
											"end": 8036,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8045,
											"end": 8073,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8045,
											"end": 8073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8045,
											"end": 8073,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 784,
											"end": 791,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8089,
											"end": 8101,
											"name": "PUSH",
											"source": 13,
											"value": "5C"
										},
										{
											"begin": 8089,
											"end": 8101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 977,
											"end": 1106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 681,
											"end": 1114,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 319,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 192,
											"end": 319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 253,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 284,
											"end": 288,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 313,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 366,
											"end": 371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 412,
											"end": 416,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 400,
											"end": 417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 396,
											"end": 423,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 386,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 386,
											"end": 441,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 437,
											"end": 438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 435,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 427,
											"end": 439,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 386,
											"end": 441,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 386,
											"end": 441,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 473,
											"end": 479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 460,
											"end": 480,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 499,
											"end": 517,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 536,
											"end": 538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 532,
											"end": 534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 529,
											"end": 539,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 526,
											"end": 562,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 526,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 526,
											"end": 562,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 542,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 542,
											"end": 560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 617,
											"end": 619,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 611,
											"end": 620,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 671,
											"end": 684,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 671,
											"end": 684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 667,
											"end": 689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 667,
											"end": 689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 667,
											"end": 689,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 691,
											"end": 693,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 663,
											"end": 694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 659,
											"end": 699,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 647,
											"end": 700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 647,
											"end": 700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 647,
											"end": 700,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 715,
											"end": 733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 715,
											"end": 733,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 735,
											"end": 757,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 735,
											"end": 757,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 735,
											"end": 757,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 712,
											"end": 758,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 709,
											"end": 781,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 709,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 709,
											"end": 781,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 761,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 761,
											"end": 779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 801,
											"end": 811,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 797,
											"end": 799,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 836,
											"end": 838,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 821,
											"end": 839,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 882,
											"end": 885,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 875,
											"end": 879,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 872,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 862,
											"end": 868,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 858,
											"end": 873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 854,
											"end": 880,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 851,
											"end": 886,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 848,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 848,
											"end": 903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 899,
											"end": 900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 897,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 889,
											"end": 901,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 903,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 848,
											"end": 903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 963,
											"end": 965,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 956,
											"end": 960,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 954,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 944,
											"end": 961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 937,
											"end": 941,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 935,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 925,
											"end": 942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 912,
											"end": 966,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1007,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 990,
											"end": 996,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 986,
											"end": 1001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 975,
											"end": 1012,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1036,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1021,
											"end": 1036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 324,
											"end": 1042,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1156,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1219,
											"end": 1222,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1198,
											"end": 1205,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1194,
											"end": 1217,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1190,
											"end": 1223,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1240,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1187,
											"end": 1240,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1226,
											"end": 1238,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1240,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1187,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1259,
											"end": 1288,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1288,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1259,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1249,
											"end": 1288,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1249,
											"end": 1288,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1337,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1339,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1297,
											"end": 1339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1388,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1375,
											"end": 1384,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1443,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1487,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1504,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1454,
											"end": 1504,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1490,
											"end": 1502,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1504,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1454,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1523,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1564,
											"end": 1571,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1540,
											"end": 1562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1523,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1523,
											"end": 1572,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1523,
											"end": 1572,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1523,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1513,
											"end": 1572,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1513,
											"end": 1572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1513,
											"end": 1572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1047,
											"end": 1578,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1775,
											"end": 1961,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1775,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1885,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1905,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1945,
											"end": 1954,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1926,
											"end": 1955,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1955,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 1926,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1916,
											"end": 1955,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1961,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1961,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2265,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2309,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2298,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2287,
											"end": 2310,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2315,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 2280,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2341,
											"end": 2374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2410,
											"end": 2428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2397,
											"end": 2429,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2470,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2444,
											"end": 2450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2471,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2438,
											"end": 2488,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2438,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 2438,
											"end": 2488,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2486,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2438,
											"end": 2488,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 2438,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2524,
											"end": 2546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2174,
											"end": 2562,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2567,
											"end": 2887,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 2567,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2690,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2663,
											"end": 2686,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2659,
											"end": 2691,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2708,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 2656,
											"end": 2708,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2704,
											"end": 2705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2708,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 2656,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 2795,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2769,
											"end": 2775,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2796,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2813,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 2763,
											"end": 2813,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2809,
											"end": 2810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2799,
											"end": 2811,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2813,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 2763,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2832,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2873,
											"end": 2880,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2862,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2832,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 2832,
											"end": 2881,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2832,
											"end": 2881,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2832,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2822,
											"end": 2881,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2887,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2567,
											"end": 2887,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3223,
											"end": 3545,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3223,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3371,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3355,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3367,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3340,
											"end": 3372,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3383,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3387,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3337,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3408,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3398,
											"end": 3437,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3456,
											"end": 3488,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3535,
											"end": 3537,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3507,
											"end": 3539,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3545,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3223,
											"end": 3545,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3732,
											"end": 3912,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3732,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3830,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 3847,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3912,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3917,
											"end": 4273,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3917,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4122,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4131,
											"end": 4161,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4231,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4170,
											"end": 4232,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4266,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 4273,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4976,
											"end": 5103,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4976,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5047,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 5032,
											"end": 5035,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5028,
											"end": 5048,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5025,
											"end": 5026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5049,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5068,
											"end": 5072,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5058,
											"end": 5073,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5092,
											"end": 5096,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5097,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5236,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5108,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5151,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5175,
											"end": 5181,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5182,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5205,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5166,
											"end": 5205,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5185,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5236,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5520,
											"end": 5797,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 5520,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5642,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5628,
											"end": 5637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5626,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5638,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5611,
											"end": 5643,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5660,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5608,
											"end": 5660,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5657,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5658,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5660,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5608,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5698,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5747,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5748,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5720,
											"end": 5725,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5717,
											"end": 5749,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5707,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5707,
											"end": 5767,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5761,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5765,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5802,
											"end": 6006,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5802,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5843,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5873,
											"end": 5874,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5869,
											"end": 5881,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5905,
											"end": 5906,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5901,
											"end": 5913,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5943,
											"end": 5946,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 5941,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5933,
											"end": 5947,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 5931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5925,
											"end": 5948,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5971,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5922,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 5922,
											"end": 5971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 5951,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5987,
											"end": 6000,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5802,
											"end": 6006,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5802,
											"end": 6006,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6767,
											"end": 6951,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6767,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6837,
											"end": 6843,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6878,
											"end": 6887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6869,
											"end": 6876,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6865,
											"end": 6888,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6861,
											"end": 6893,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6910,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6858,
											"end": 6910,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6896,
											"end": 6908,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6858,
											"end": 6910,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 6858,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6767,
											"end": 6951,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6767,
											"end": 6951,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claim(address,uint256,uint256,bytes)": "2ada8a32",
							"getEthSignedMessageHash(bytes32)": "fa540801",
							"getMessageHash(address,uint256,uint256)": "d2b0737b",
							"getSigner()": "7ac3c02f",
							"getToken()": "21df0da7",
							"owner()": "8da5cb5b",
							"recoverSigner(bytes32,bytes)": "97aba7f9",
							"renounceOwnership()": "715018a6",
							"setSigner(address)": "6c19e783",
							"setToken(address)": "144fa6d7",
							"splitSignature(bytes)": "a7bb5803",
							"transferOwnership(address)": "f2fde38b",
							"urgentWithdraw(address)": "c4091443",
							"verify(address,uint256,uint256,bytes)": "0deea608"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_messageHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"splitSignature\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"urgentWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/SignatureWithdrawERC20.sol\":\"ClaimERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/SignatureWithdrawERC20.sol\":{\"keccak256\":\"0x8dc5490690111fbccdf1b98aa6b2eb1d2ac16182d2528fd14bcaa6d4cbfec241\",\"urls\":[\"bzz-raw://3653defb2c51c1e7a2bec90a81583965a08799fd7d42ac111056f12a51db3059\",\"dweb:/ipfs/QmYBPWgwNJcsdrfNWwiUhWVACUiwLMUKgEyLSS8Jzb2UPV\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 273,
								"contract": "nft/SignatureWithdrawERC20.sol:ClaimERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 10,
								"contract": "nft/SignatureWithdrawERC20.sol:ClaimERC20",
								"label": "userNonce",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 12,
								"contract": "nft/SignatureWithdrawERC20.sol:ClaimERC20",
								"label": "signer",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 14,
								"contract": "nft/SignatureWithdrawERC20.sol:ClaimERC20",
								"label": "erc20mint",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 273,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  tag_6\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1142:1146  uri_ */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1141  _setURI */\n  tag_7\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1134:1147  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1092:1154  constructor(string memory uri_) {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_24)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  dup1\n  mload\n  tag_10\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8006  _uri */\n  0x02\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8002:8015  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7936:8022  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_15\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_18)\ntag_15:\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_21)\n    /* \"#utility.yul\":14:141   */\ntag_23:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1233   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_27:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_28:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_29:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_31\n  tag_23\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_33\n  tag_23\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_34:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_35:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_35)\ntag_37:\n    /* \"#utility.yul\":1131:1133   */\n  dup3\n    /* \"#utility.yul\":1128:1129   */\n  dup5\n    /* \"#utility.yul\":1125:1134   */\n  gt\n    /* \"#utility.yul\":1122:1202   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1190:1191   */\n  0x00\n    /* \"#utility.yul\":1185:1187   */\n  dup7\n    /* \"#utility.yul\":1180:1182   */\n  dup5\n    /* \"#utility.yul\":1172:1178   */\n  dup4\n    /* \"#utility.yul\":1168:1183   */\n  add\n    /* \"#utility.yul\":1164:1188   */\n  add\n    /* \"#utility.yul\":1157:1192   */\n  mstore\n    /* \"#utility.yul\":1122:1202   */\ntag_38:\n    /* \"#utility.yul\":1221:1227   */\n  swap9\n    /* \"#utility.yul\":146:1233   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1238:1618   */\ntag_13:\n    /* \"#utility.yul\":1317:1318   */\n  0x01\n    /* \"#utility.yul\":1313:1325   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1360:1372   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1381:1442   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1435:1439   */\n  0x7f\n    /* \"#utility.yul\":1427:1433   */\n  dup3\n    /* \"#utility.yul\":1423:1440   */\n  and\n    /* \"#utility.yul\":1413:1440   */\n  swap2\n  pop\n    /* \"#utility.yul\":1381:1442   */\ntag_40:\n    /* \"#utility.yul\":1488:1490   */\n  0x20\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1477:1491   */\n  lt\n    /* \"#utility.yul\":1457:1475   */\n  dup2\n    /* \"#utility.yul\":1454:1492   */\n  sub\n    /* \"#utility.yul\":1451:1612   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1534:1544   */\n  0x4e487b71\n    /* \"#utility.yul\":1529:1532   */\n  0xe0\n    /* \"#utility.yul\":1525:1545   */\n  shl\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1515:1546   */\n  mstore\n    /* \"#utility.yul\":1569:1573   */\n  0x22\n    /* \"#utility.yul\":1566:1567   */\n  0x04\n    /* \"#utility.yul\":1559:1574   */\n  mstore\n    /* \"#utility.yul\":1597:1601   */\n  0x24\n    /* \"#utility.yul\":1594:1595   */\n  0x00\n    /* \"#utility.yul\":1587:1602   */\n  revert\n    /* \"#utility.yul\":1451:1612   */\ntag_41:\n  pop\n    /* \"#utility.yul\":1238:1618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_24:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":555:15275  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3450:3454  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3491  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3500  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3510  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2256:2263  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2283:2304  account != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8258:8260   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8240:8261   */\n      mstore\n        /* \"#utility.yul\":8297:8299   */\n      0x2b\n        /* \"#utility.yul\":8277:8295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8270:8300   */\n      mstore\n        /* \"#utility.yul\":8336:8370   */\n      0x455243313135353a2062616c616e636520717565727920666f7220746865207a\n        /* \"#utility.yul\":8316:8334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8309:8371   */\n      mstore\n      shl(0xa8, 0x65726f2061646472657373)\n        /* \"#utility.yul\":8387:8405   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8380:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8457   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2275:2352  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2378  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2382  _balances[id] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2369:2391  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2170:2398  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1323:1327  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1399  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1415:1467  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1467  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1358:1519  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_60\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1483:1519  super.supportsInterface(interfaceId) */\n    tag_60:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1339:1519  return... */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1221:1526  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1985:1998  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2017:2021  _uri */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2010:2021  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1925:2028  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4290  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4330  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4311:4315  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4294:4330  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9055:9057   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9037:9058   */\n      mstore\n        /* \"#utility.yul\":9094:9096   */\n      0x32\n        /* \"#utility.yul\":9074:9092   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9067:9097   */\n      mstore\n        /* \"#utility.yul\":9133:9167   */\n      0x455243313135353a207472616e736665722063616c6c6572206973206e6f7420\n        /* \"#utility.yul\":9113:9131   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9106:9168   */\n      mstore\n      shl(0x72, 0x1bdddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9184:9202   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9177:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n      tag_55\n        /* \"#utility.yul\":8853:9267   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4249:4406  require(... */\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4439:4443  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4445:4447  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4449:4452  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4454:4461  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4463:4467  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4438  _safeBatchTransferFrom */\n      tag_79\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4416:4468  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4045:4475  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n    tag_37:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2706:2722  uint256[] memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2768  ids */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2765:2775  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2754  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2761  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2746:2775  accounts.length == ids.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x29\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9635   */\n      mstore\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9272:9677   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2738:2821  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2862  uint256[] memory batchBalances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2887  accounts */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2879:2894  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2865:2895  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2832:2895  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2911:2920  uint256 i */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2938  accounts */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2930:2945  accounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2927  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2926:2945  i < accounts.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3003  accounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3004:3005  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2995:3006  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3011  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3012:3013  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3008:3014  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:2994  balanceOf */\n      tag_15\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2985:3015  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2979  batchBalances */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2980:2981  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:2982  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2966:3015  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2947:2950  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2906:3026  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3043:3056  batchBalances */\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2555:3063  function balanceOfBatch(address[] memory accounts, uint256[] memory ids)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3258:3266  operator */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3268:3276  approved */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3243  _setApprovalForAll */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3225:3277  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3131:3284  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3584:3973  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3804  from == _msgSender() */\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3784:3844  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3825:3829  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3351:3517  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3808:3844  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10288:10290   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10270:10291   */\n      mstore\n        /* \"#utility.yul\":10327:10329   */\n      0x29\n        /* \"#utility.yul\":10307:10325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10300:10330   */\n      mstore\n        /* \"#utility.yul\":10366:10400   */\n      0x455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72\n        /* \"#utility.yul\":10346:10364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10339:10401   */\n      mstore\n      shl(0xba, 0x08185c1c1c9bdd9959)\n        /* \"#utility.yul\":10417:10435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10410:10449   */\n      mstore\n        /* \"#utility.yul\":10466:10485   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n      tag_55\n        /* \"#utility.yul\":10086:10491   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3763:3911  require(... */\n    tag_111:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3939:3943  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3945:3947  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3949:3951  id */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3953:3959  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3961:3965  data */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3938  _safeTransferFrom */\n      tag_115\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3921:3966  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6295  amounts */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6288:6302  amounts.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6277  ids */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6284  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6274:6302  ids.length == amounts.length */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10698:10700   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10680:10701   */\n      mstore\n        /* \"#utility.yul\":10737:10739   */\n      0x28\n        /* \"#utility.yul\":10717:10735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10710:10740   */\n      mstore\n        /* \"#utility.yul\":10776:10810   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10756:10774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10749:10811   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10827:10845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10820:10858   */\n      mstore\n        /* \"#utility.yul\":10875:10894   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10496:10900   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6266:6347  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6365:6381  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6357:6423  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_122:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6434:6450  address operator */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_128:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6574  ids */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6571:6581  ids.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6568  i */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6567:6581  i < ids.length */\n      lt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6612  uint256 id */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6618  ids */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6619:6620  i */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6615:6621  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_132\n      tag_94\n      jump\t// in\n    tag_132:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6602:6621  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6635:6649  uint256 amount */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6659  amounts */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6660:6661  i */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_134\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6677:6696  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6712  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6699:6718  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6652:6662  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6740:6761  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6732:6808  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6863  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6869  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6892  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6937  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6850:6859  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_138\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6872:6892  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6920:6947  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6588:6958  {... */\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6583:6586  ++i */\n      dup1\n      tag_140\n      swap1\n      tag_100\n      jump\t// in\n    tag_140:\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6547:6958  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7003:7005  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6997:7001  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6987:6995  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7007:7010  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7012:7019  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6973:7020  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_143\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7067:7075  operator */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7077:7081  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7083:7085  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7087:7090  ids */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7092:7099  amounts */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7101:7105  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7066  _doSafeBatchTransferAcceptanceCheck */\n      tag_144\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7031:7106  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6256:7113  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6068:7113  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n    tag_104:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12224:12232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12215:12232  owner != operator */\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12527:12529   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12509:12530   */\n      mstore\n        /* \"#utility.yul\":12566:12568   */\n      0x29\n        /* \"#utility.yul\":12546:12564   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12539:12569   */\n      mstore\n        /* \"#utility.yul\":12605:12639   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12585:12603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12578:12640   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12656:12674   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12649:12688   */\n      mstore\n        /* \"#utility.yul\":12705:12724   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":12325:12730   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12207:12278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12306  _operatorApprovals */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12288:12334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12349:12390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12074:12397  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5106:5122  to != address(0) */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5098:5164  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_154\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5248:5252  from */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5254:5256  to */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      tag_155\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5276:5278  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5275  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5258:5279  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5299:5305  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5298  _asSingletonArray */\n      tag_156\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5281:5306  _asSingletonArray(amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5217:5313  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5324:5343  uint256 fromBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5359  _balances[id] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5346:5365  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5383:5404  fromBalance >= amount */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5375:5451  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5498  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5504  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup8\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5527  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5564  _balances[id][to] */\n      swap1\n      dup9\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup7\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5494  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_160\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5507:5527  fromBalance - amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5547:5574  _balances[id][to] += amount */\n      tag_139\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12909:12934   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup2\n      add\n        /* \"#utility.yul\":12943:12977   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup10\n      and\n      swap3\n      dup11\n      dup3\n      and\n      swap3\n      swap2\n      dup7\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5590:5636  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_163\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5678:5686  operator */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5688:5692  from */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5694:5696  to */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5698:5700  id */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5702:5708  amount */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5710:5714  data */\n      dup9\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5677  _doSafeTransferAcceptanceCheck */\n      tag_164\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5647:5715  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_163:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5088:5722  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4925:5722  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14282:15074  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14514:14527  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14510:15068  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14592  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_170\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14593:14601  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14603:14607  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14609:14612  ids */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14614:14621  amounts */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14623:14627  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14549:14628  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_172\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_173\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      0x01\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_175\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      dup1\n      0x08c379a0\n      sub\n      tag_178\n      jumpi\n      pop\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      tag_183\n      jumpi\n      pop\n      jump(tag_177)\n    tag_183:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14934:14940  reason */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14927:14941  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      pop\n    tag_177:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15136:15138   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15118:15139   */\n      mstore\n        /* \"#utility.yul\":15175:15177   */\n      0x34\n        /* \"#utility.yul\":15155:15173   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15148:15178   */\n      mstore\n        /* \"#utility.yul\":15214:15248   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2045524331313535\n        /* \"#utility.yul\":15194:15212   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15187:15249   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15265:15283   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15258:15308   */\n      mstore\n        /* \"#utility.yul\":15325:15344   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14981:15043  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14934:15350   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14545:15058  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_175:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14707:14767  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14703:14860  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14791:14841  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15213:15214  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15146:15162  uint256[] memory */\n      0x60\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15196  uint256[] memory array */\n      0x00\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15199:15215  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15174:15215  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15243  element */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15230  array */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15231:15232  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15233  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_196\n      tag_94\n      jump\t// in\n    tag_196:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15225:15243  array[0] = element */\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15261:15266  array */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15080:15273  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13551:14276  function _doSafeTransferAcceptanceCheck(... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13758:13771  to.isContract */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1133:1141  size > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13754:14270  if (to.isContract()) {... */\n      tag_143\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13831  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_200\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13832:13840  operator */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13842:13846  from */\n      dup10\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13848:13850  id */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13852:13858  amount */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13860:13864  data */\n      dup9\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13793:13865  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_203\n      swap2\n      dup2\n      add\n      swap1\n      tag_174\n      jump\t// in\n    tag_203:\n      0x01\n    tag_202:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13789:14260  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_204\n      jumpi\n      tag_179\n      tag_180\n      jump\t// in\n    tag_204:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13914:13969  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13910:14062  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_163\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13993:14043  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_190\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_217:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_228:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_230:\n        /* \"#utility.yul\":360:389   */\n      tag_231\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_217\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_218:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_234\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_234:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_236:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_237\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_218\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1868   */\n    tag_219:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_242:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_242)\n    tag_244:\n        /* \"#utility.yul\":1718:1724   */\n      dup2\n        /* \"#utility.yul\":1715:1716   */\n      dup2\n        /* \"#utility.yul\":1712:1725   */\n      gt\n        /* \"#utility.yul\":1709:1796   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":1784:1785   */\n      0x00\n        /* \"#utility.yul\":1777:1781   */\n      0x20\n        /* \"#utility.yul\":1768:1774   */\n      dup4\n        /* \"#utility.yul\":1763:1766   */\n      dup8\n        /* \"#utility.yul\":1759:1775   */\n      add\n        /* \"#utility.yul\":1755:1782   */\n      add\n        /* \"#utility.yul\":1748:1786   */\n      mstore\n        /* \"#utility.yul\":1709:1796   */\n    tag_245:\n      pop\n        /* \"#utility.yul\":1850:1852   */\n      0x1f\n        /* \"#utility.yul\":1829:1844   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1825:1854   */\n      and\n        /* \"#utility.yul\":1816:1855   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1812:1862   */\n      add\n      swap3\n        /* \"#utility.yul\":1396:1868   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1873:2093   */\n    tag_29:\n        /* \"#utility.yul\":2022:2024   */\n      0x20\n        /* \"#utility.yul\":2011:2020   */\n      dup2\n        /* \"#utility.yul\":2004:2025   */\n      mstore\n        /* \"#utility.yul\":1985:1989   */\n      0x00\n        /* \"#utility.yul\":2042:2087   */\n      tag_237\n        /* \"#utility.yul\":2083:2085   */\n      0x20\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2068:2086   */\n      add\n        /* \"#utility.yul\":2060:2066   */\n      dup5\n        /* \"#utility.yul\":2042:2087   */\n      tag_219\n      jump\t// in\n        /* \"#utility.yul\":2098:2225   */\n    tag_86:\n        /* \"#utility.yul\":2159:2169   */\n      0x4e487b71\n        /* \"#utility.yul\":2154:2157   */\n      0xe0\n        /* \"#utility.yul\":2150:2170   */\n      shl\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2140:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x41\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2230:2479   */\n    tag_220:\n        /* \"#utility.yul\":2340:2342   */\n      0x1f\n        /* \"#utility.yul\":2321:2334   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2317:2344   */\n      and\n        /* \"#utility.yul\":2305:2345   */\n      dup2\n      add\n        /* \"#utility.yul\":2375:2393   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2360:2394   */\n      dup2\n      gt\n        /* \"#utility.yul\":2396:2418   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2357:2419   */\n      or\n        /* \"#utility.yul\":2354:2442   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2422:2440   */\n      tag_251\n      tag_86\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2458:2460   */\n      0x40\n        /* \"#utility.yul\":2451:2473   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2230:2479   */\n      jump\t// out\n        /* \"#utility.yul\":2484:2667   */\n    tag_221:\n        /* \"#utility.yul\":2544:2548   */\n      0x00\n        /* \"#utility.yul\":2577:2595   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2566:2596   */\n      gt\n        /* \"#utility.yul\":2563:2619   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2599:2617   */\n      tag_254\n      tag_86\n      jump\t// in\n    tag_254:\n      pop\n        /* \"#utility.yul\":2644:2645   */\n      0x05\n        /* \"#utility.yul\":2640:2654   */\n      shl\n        /* \"#utility.yul\":2656:2660   */\n      0x20\n        /* \"#utility.yul\":2636:2661   */\n      add\n      swap1\n        /* \"#utility.yul\":2484:2667   */\n      jump\t// out\n        /* \"#utility.yul\":2672:3396   */\n    tag_222:\n        /* \"#utility.yul\":2726:2731   */\n      0x00\n        /* \"#utility.yul\":2779:2782   */\n      dup3\n        /* \"#utility.yul\":2772:2776   */\n      0x1f\n        /* \"#utility.yul\":2764:2770   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2756:2783   */\n      slt\n        /* \"#utility.yul\":2746:2801   */\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2797:2798   */\n      0x00\n        /* \"#utility.yul\":2794:2795   */\n      dup1\n        /* \"#utility.yul\":2787:2799   */\n      revert\n        /* \"#utility.yul\":2746:2801   */\n    tag_256:\n        /* \"#utility.yul\":2833:2839   */\n      dup2\n        /* \"#utility.yul\":2820:2840   */\n      calldataload\n        /* \"#utility.yul\":2859:2863   */\n      0x20\n        /* \"#utility.yul\":2882:2925   */\n      tag_257\n        /* \"#utility.yul\":2922:2924   */\n      dup3\n        /* \"#utility.yul\":2882:2925   */\n      tag_221\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2954:2956   */\n      0x40\n        /* \"#utility.yul\":2948:2957   */\n      mload\n        /* \"#utility.yul\":2966:2997   */\n      tag_258\n        /* \"#utility.yul\":2994:2996   */\n      dup3\n        /* \"#utility.yul\":2986:2992   */\n      dup3\n        /* \"#utility.yul\":2966:2997   */\n      tag_220\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3032:3050   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3124:3125   */\n      0x05\n        /* \"#utility.yul\":3120:3130   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3108:3131   */\n      dup6\n      add\n        /* \"#utility.yul\":3104:3136   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3066:3081   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3148:3163   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3145:3180   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3176:3177   */\n      0x00\n        /* \"#utility.yul\":3173:3174   */\n      dup1\n        /* \"#utility.yul\":3166:3178   */\n      revert\n        /* \"#utility.yul\":3145:3180   */\n    tag_259:\n        /* \"#utility.yul\":3212:3214   */\n      dup3\n        /* \"#utility.yul\":3204:3210   */\n      dup7\n        /* \"#utility.yul\":3200:3215   */\n      add\n        /* \"#utility.yul\":3224:3366   */\n    tag_260:\n        /* \"#utility.yul\":3240:3246   */\n      dup5\n        /* \"#utility.yul\":3235:3238   */\n      dup2\n        /* \"#utility.yul\":3232:3247   */\n      lt\n        /* \"#utility.yul\":3224:3366   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3306:3323   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3294:3324   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3344:3356   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3257:3269   */\n      dup4\n      add\n        /* \"#utility.yul\":3224:3366   */\n      jump(tag_260)\n    tag_262:\n      pop\n        /* \"#utility.yul\":3384:3390   */\n      swap7\n        /* \"#utility.yul\":2672:3396   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3401:3956   */\n    tag_223:\n        /* \"#utility.yul\":3443:3448   */\n      0x00\n        /* \"#utility.yul\":3496:3499   */\n      dup3\n        /* \"#utility.yul\":3489:3493   */\n      0x1f\n        /* \"#utility.yul\":3481:3487   */\n      dup4\n        /* \"#utility.yul\":3477:3494   */\n      add\n        /* \"#utility.yul\":3473:3500   */\n      slt\n        /* \"#utility.yul\":3463:3518   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3514:3515   */\n      0x00\n        /* \"#utility.yul\":3511:3512   */\n      dup1\n        /* \"#utility.yul\":3504:3516   */\n      revert\n        /* \"#utility.yul\":3463:3518   */\n    tag_264:\n        /* \"#utility.yul\":3550:3556   */\n      dup2\n        /* \"#utility.yul\":3537:3557   */\n      calldataload\n        /* \"#utility.yul\":3576:3594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3574   */\n      dup2\n        /* \"#utility.yul\":3569:3595   */\n      gt\n        /* \"#utility.yul\":3566:3618   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3598:3616   */\n      tag_266\n      tag_86\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3647:3649   */\n      0x40\n        /* \"#utility.yul\":3641:3650   */\n      mload\n        /* \"#utility.yul\":3659:3726   */\n      tag_267\n        /* \"#utility.yul\":3714:3716   */\n      0x1f\n        /* \"#utility.yul\":3695:3708   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3691:3718   */\n      and\n        /* \"#utility.yul\":3720:3724   */\n      0x20\n        /* \"#utility.yul\":3687:3725   */\n      add\n        /* \"#utility.yul\":3641:3650   */\n      dup3\n        /* \"#utility.yul\":3659:3726   */\n      tag_220\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3750:3752   */\n      dup2\n        /* \"#utility.yul\":3742:3748   */\n      dup2\n        /* \"#utility.yul\":3735:3753   */\n      mstore\n        /* \"#utility.yul\":3796:3799   */\n      dup5\n        /* \"#utility.yul\":3789:3793   */\n      0x20\n        /* \"#utility.yul\":3784:3786   */\n      dup4\n        /* \"#utility.yul\":3776:3782   */\n      dup7\n        /* \"#utility.yul\":3772:3787   */\n      add\n        /* \"#utility.yul\":3768:3794   */\n      add\n        /* \"#utility.yul\":3765:3800   */\n      gt\n        /* \"#utility.yul\":3762:3817   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3762:3817   */\n    tag_268:\n        /* \"#utility.yul\":3877:3879   */\n      dup2\n        /* \"#utility.yul\":3870:3874   */\n      0x20\n        /* \"#utility.yul\":3862:3868   */\n      dup6\n        /* \"#utility.yul\":3858:3875   */\n      add\n        /* \"#utility.yul\":3851:3855   */\n      0x20\n        /* \"#utility.yul\":3843:3849   */\n      dup4\n        /* \"#utility.yul\":3839:3856   */\n      add\n        /* \"#utility.yul\":3826:3880   */\n      calldatacopy\n        /* \"#utility.yul\":3924:3925   */\n      0x00\n        /* \"#utility.yul\":3900:3915   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3917:3921   */\n      0x20\n        /* \"#utility.yul\":3896:3922   */\n      add\n        /* \"#utility.yul\":3889:3926   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3904:3910   */\n      swap4\n        /* \"#utility.yul\":3401:3956   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3961:4904   */\n    tag_32:\n        /* \"#utility.yul\":4115:4121   */\n      0x00\n        /* \"#utility.yul\":4123:4129   */\n      dup1\n        /* \"#utility.yul\":4131:4137   */\n      0x00\n        /* \"#utility.yul\":4139:4145   */\n      dup1\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4200:4203   */\n      0xa0\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4179:4186   */\n      dup9\n        /* \"#utility.yul\":4175:4198   */\n      sub\n        /* \"#utility.yul\":4171:4204   */\n      slt\n        /* \"#utility.yul\":4168:4221   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4217:4218   */\n      0x00\n        /* \"#utility.yul\":4214:4215   */\n      dup1\n        /* \"#utility.yul\":4207:4219   */\n      revert\n        /* \"#utility.yul\":4168:4221   */\n    tag_270:\n        /* \"#utility.yul\":4240:4269   */\n      tag_271\n        /* \"#utility.yul\":4259:4268   */\n      dup7\n        /* \"#utility.yul\":4240:4269   */\n      tag_217\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4230:4269   */\n      swap5\n      pop\n        /* \"#utility.yul\":4288:4326   */\n      tag_272\n        /* \"#utility.yul\":4322:4324   */\n      0x20\n        /* \"#utility.yul\":4311:4320   */\n      dup8\n        /* \"#utility.yul\":4307:4325   */\n      add\n        /* \"#utility.yul\":4288:4326   */\n      tag_217\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4278:4326   */\n      swap4\n      pop\n        /* \"#utility.yul\":4377:4379   */\n      0x40\n        /* \"#utility.yul\":4366:4375   */\n      dup7\n        /* \"#utility.yul\":4362:4380   */\n      add\n        /* \"#utility.yul\":4349:4381   */\n      calldataload\n        /* \"#utility.yul\":4400:4418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4441:4443   */\n      dup1\n        /* \"#utility.yul\":4433:4439   */\n      dup3\n        /* \"#utility.yul\":4430:4444   */\n      gt\n        /* \"#utility.yul\":4427:4461   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4454:4455   */\n      dup1\n        /* \"#utility.yul\":4447:4459   */\n      revert\n        /* \"#utility.yul\":4427:4461   */\n    tag_273:\n        /* \"#utility.yul\":4480:4541   */\n      tag_274\n        /* \"#utility.yul\":4533:4540   */\n      dup10\n        /* \"#utility.yul\":4524:4530   */\n      dup4\n        /* \"#utility.yul\":4513:4522   */\n      dup11\n        /* \"#utility.yul\":4509:4531   */\n      add\n        /* \"#utility.yul\":4480:4541   */\n      tag_222\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4470:4541   */\n      swap5\n      pop\n        /* \"#utility.yul\":4594:4596   */\n      0x60\n        /* \"#utility.yul\":4583:4592   */\n      dup9\n        /* \"#utility.yul\":4579:4597   */\n      add\n        /* \"#utility.yul\":4566:4598   */\n      calldataload\n        /* \"#utility.yul\":4550:4598   */\n      swap2\n      pop\n        /* \"#utility.yul\":4623:4625   */\n      dup1\n        /* \"#utility.yul\":4613:4621   */\n      dup3\n        /* \"#utility.yul\":4610:4626   */\n      gt\n        /* \"#utility.yul\":4607:4643   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4607:4643   */\n    tag_275:\n        /* \"#utility.yul\":4662:4725   */\n      tag_276\n        /* \"#utility.yul\":4717:4724   */\n      dup10\n        /* \"#utility.yul\":4706:4714   */\n      dup4\n        /* \"#utility.yul\":4695:4704   */\n      dup11\n        /* \"#utility.yul\":4691:4715   */\n      add\n        /* \"#utility.yul\":4662:4725   */\n      tag_222\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4652:4725   */\n      swap4\n      pop\n        /* \"#utility.yul\":4778:4781   */\n      0x80\n        /* \"#utility.yul\":4767:4776   */\n      dup9\n        /* \"#utility.yul\":4763:4782   */\n      add\n        /* \"#utility.yul\":4750:4783   */\n      calldataload\n        /* \"#utility.yul\":4734:4783   */\n      swap2\n      pop\n        /* \"#utility.yul\":4808:4810   */\n      dup1\n        /* \"#utility.yul\":4798:4806   */\n      dup3\n        /* \"#utility.yul\":4795:4811   */\n      gt\n        /* \"#utility.yul\":4792:4828   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4824:4825   */\n      0x00\n        /* \"#utility.yul\":4821:4822   */\n      dup1\n        /* \"#utility.yul\":4814:4826   */\n      revert\n        /* \"#utility.yul\":4792:4828   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":4847:4898   */\n      tag_278\n        /* \"#utility.yul\":4890:4897   */\n      dup9\n        /* \"#utility.yul\":4879:4887   */\n      dup3\n        /* \"#utility.yul\":4868:4877   */\n      dup10\n        /* \"#utility.yul\":4864:4888   */\n      add\n        /* \"#utility.yul\":4847:4898   */\n      tag_223\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4837:4898   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3961:4904   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4909:6117   */\n    tag_36:\n        /* \"#utility.yul\":5027:5033   */\n      0x00\n        /* \"#utility.yul\":5035:5041   */\n      dup1\n        /* \"#utility.yul\":5088:5090   */\n      0x40\n        /* \"#utility.yul\":5076:5085   */\n      dup4\n        /* \"#utility.yul\":5067:5074   */\n      dup6\n        /* \"#utility.yul\":5063:5086   */\n      sub\n        /* \"#utility.yul\":5059:5091   */\n      slt\n        /* \"#utility.yul\":5056:5108   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5104:5105   */\n      0x00\n        /* \"#utility.yul\":5101:5102   */\n      dup1\n        /* \"#utility.yul\":5094:5106   */\n      revert\n        /* \"#utility.yul\":5056:5108   */\n    tag_280:\n        /* \"#utility.yul\":5144:5153   */\n      dup3\n        /* \"#utility.yul\":5131:5154   */\n      calldataload\n        /* \"#utility.yul\":5173:5191   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5214:5216   */\n      dup1\n        /* \"#utility.yul\":5206:5212   */\n      dup3\n        /* \"#utility.yul\":5203:5217   */\n      gt\n        /* \"#utility.yul\":5200:5234   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5227:5228   */\n      dup1\n        /* \"#utility.yul\":5220:5232   */\n      revert\n        /* \"#utility.yul\":5200:5234   */\n    tag_281:\n        /* \"#utility.yul\":5268:5274   */\n      dup2\n        /* \"#utility.yul\":5257:5266   */\n      dup6\n        /* \"#utility.yul\":5253:5275   */\n      add\n        /* \"#utility.yul\":5243:5275   */\n      swap2\n      pop\n        /* \"#utility.yul\":5313:5320   */\n      dup6\n        /* \"#utility.yul\":5306:5310   */\n      0x1f\n        /* \"#utility.yul\":5302:5304   */\n      dup4\n        /* \"#utility.yul\":5298:5311   */\n      add\n        /* \"#utility.yul\":5294:5321   */\n      slt\n        /* \"#utility.yul\":5284:5339   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5335:5336   */\n      0x00\n        /* \"#utility.yul\":5332:5333   */\n      dup1\n        /* \"#utility.yul\":5325:5337   */\n      revert\n        /* \"#utility.yul\":5284:5339   */\n    tag_282:\n        /* \"#utility.yul\":5371:5373   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      calldataload\n        /* \"#utility.yul\":5393:5397   */\n      0x20\n        /* \"#utility.yul\":5416:5459   */\n      tag_283\n        /* \"#utility.yul\":5456:5458   */\n      dup3\n        /* \"#utility.yul\":5416:5459   */\n      tag_221\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5488:5490   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      mload\n        /* \"#utility.yul\":5500:5531   */\n      tag_284\n        /* \"#utility.yul\":5528:5530   */\n      dup3\n        /* \"#utility.yul\":5520:5526   */\n      dup3\n        /* \"#utility.yul\":5500:5531   */\n      tag_220\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":5566:5584   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5654:5655   */\n      0x05\n        /* \"#utility.yul\":5650:5660   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5642:5661   */\n      dup6\n      add\n        /* \"#utility.yul\":5638:5666   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5600:5615   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5678:5697   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5675:5714   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5710:5711   */\n      0x00\n        /* \"#utility.yul\":5707:5708   */\n      dup1\n        /* \"#utility.yul\":5700:5712   */\n      revert\n        /* \"#utility.yul\":5675:5714   */\n    tag_285:\n        /* \"#utility.yul\":5734:5745   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5754:5902   */\n    tag_286:\n        /* \"#utility.yul\":5770:5776   */\n      dup4\n        /* \"#utility.yul\":5765:5768   */\n      dup7\n        /* \"#utility.yul\":5762:5777   */\n      lt\n        /* \"#utility.yul\":5754:5902   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":5836:5859   */\n      tag_289\n        /* \"#utility.yul\":5855:5858   */\n      dup7\n        /* \"#utility.yul\":5836:5859   */\n      tag_217\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5824:5860   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5787:5799   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5880:5892   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5754:5902   */\n      jump(tag_286)\n    tag_288:\n        /* \"#utility.yul\":5921:5927   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5965:5983   */\n      dup7\n      add\n        /* \"#utility.yul\":5952:5984   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5996:6012   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5993:6029   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":6025:6026   */\n      0x00\n        /* \"#utility.yul\":6022:6023   */\n      dup1\n        /* \"#utility.yul\":6015:6027   */\n      revert\n        /* \"#utility.yul\":5993:6029   */\n    tag_290:\n      pop\n        /* \"#utility.yul\":6048:6111   */\n      tag_291\n        /* \"#utility.yul\":6103:6110   */\n      dup6\n        /* \"#utility.yul\":6092:6100   */\n      dup3\n        /* \"#utility.yul\":6081:6090   */\n      dup7\n        /* \"#utility.yul\":6077:6101   */\n      add\n        /* \"#utility.yul\":6048:6111   */\n      tag_222\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6038:6111   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4909:6117   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6122:6557   */\n    tag_224:\n        /* \"#utility.yul\":6175:6178   */\n      0x00\n        /* \"#utility.yul\":6213:6218   */\n      dup2\n        /* \"#utility.yul\":6207:6219   */\n      mload\n        /* \"#utility.yul\":6240:6246   */\n      dup1\n        /* \"#utility.yul\":6235:6238   */\n      dup5\n        /* \"#utility.yul\":6228:6247   */\n      mstore\n        /* \"#utility.yul\":6266:6270   */\n      0x20\n        /* \"#utility.yul\":6295:6297   */\n      dup1\n        /* \"#utility.yul\":6290:6293   */\n      dup6\n        /* \"#utility.yul\":6286:6298   */\n      add\n        /* \"#utility.yul\":6279:6298   */\n      swap5\n      pop\n        /* \"#utility.yul\":6332:6334   */\n      dup1\n        /* \"#utility.yul\":6325:6330   */\n      dup5\n        /* \"#utility.yul\":6321:6335   */\n      add\n        /* \"#utility.yul\":6353:6354   */\n      0x00\n        /* \"#utility.yul\":6363:6532   */\n    tag_293:\n        /* \"#utility.yul\":6377:6383   */\n      dup4\n        /* \"#utility.yul\":6374:6375   */\n      dup2\n        /* \"#utility.yul\":6371:6384   */\n      lt\n        /* \"#utility.yul\":6363:6532   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":6438:6451   */\n      dup2\n      mload\n        /* \"#utility.yul\":6426:6452   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6472:6484   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6507:6522   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6399:6400   */\n      0x01\n        /* \"#utility.yul\":6392:6401   */\n      add\n        /* \"#utility.yul\":6363:6532   */\n      jump(tag_293)\n    tag_295:\n      pop\n        /* \"#utility.yul\":6548:6551   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6122:6557   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6823   */\n    tag_39:\n        /* \"#utility.yul\":6741:6743   */\n      0x20\n        /* \"#utility.yul\":6730:6739   */\n      dup2\n        /* \"#utility.yul\":6723:6744   */\n      mstore\n        /* \"#utility.yul\":6704:6708   */\n      0x00\n        /* \"#utility.yul\":6761:6817   */\n      tag_237\n        /* \"#utility.yul\":6813:6815   */\n      0x20\n        /* \"#utility.yul\":6802:6811   */\n      dup4\n        /* \"#utility.yul\":6798:6816   */\n      add\n        /* \"#utility.yul\":6790:6796   */\n      dup5\n        /* \"#utility.yul\":6761:6817   */\n      tag_224\n      jump\t// in\n        /* \"#utility.yul\":6828:7175   */\n    tag_42:\n        /* \"#utility.yul\":6893:6899   */\n      0x00\n        /* \"#utility.yul\":6901:6907   */\n      dup1\n        /* \"#utility.yul\":6954:6956   */\n      0x40\n        /* \"#utility.yul\":6942:6951   */\n      dup4\n        /* \"#utility.yul\":6933:6940   */\n      dup6\n        /* \"#utility.yul\":6929:6952   */\n      sub\n        /* \"#utility.yul\":6925:6957   */\n      slt\n        /* \"#utility.yul\":6922:6974   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":6922:6974   */\n    tag_299:\n        /* \"#utility.yul\":6993:7022   */\n      tag_300\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":6993:7022   */\n      tag_217\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6983:7022   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7074   */\n      0x20\n        /* \"#utility.yul\":7061:7070   */\n      dup4\n        /* \"#utility.yul\":7057:7075   */\n      add\n        /* \"#utility.yul\":7044:7076   */\n      calldataload\n        /* \"#utility.yul\":7119:7124   */\n      dup1\n        /* \"#utility.yul\":7112:7125   */\n      iszero\n        /* \"#utility.yul\":7105:7126   */\n      iszero\n        /* \"#utility.yul\":7098:7103   */\n      dup2\n        /* \"#utility.yul\":7095:7127   */\n      eq\n        /* \"#utility.yul\":7085:7145   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":7141:7142   */\n      0x00\n        /* \"#utility.yul\":7138:7139   */\n      dup1\n        /* \"#utility.yul\":7131:7143   */\n      revert\n        /* \"#utility.yul\":7085:7145   */\n    tag_301:\n        /* \"#utility.yul\":7164:7169   */\n      dup1\n        /* \"#utility.yul\":7154:7169   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6828:7175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7180:7440   */\n    tag_46:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_303:\n        /* \"#utility.yul\":7348:7377   */\n      tag_304\n        /* \"#utility.yul\":7367:7376   */\n      dup4\n        /* \"#utility.yul\":7348:7377   */\n      tag_217\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7338:7377   */\n      swap2\n      pop\n        /* \"#utility.yul\":7396:7434   */\n      tag_305\n        /* \"#utility.yul\":7430:7432   */\n      0x20\n        /* \"#utility.yul\":7419:7428   */\n      dup5\n        /* \"#utility.yul\":7415:7433   */\n      add\n        /* \"#utility.yul\":7396:7434   */\n      tag_217\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7386:7434   */\n      swap1\n      pop\n        /* \"#utility.yul\":7180:7440   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7445:8051   */\n    tag_51:\n        /* \"#utility.yul\":7549:7555   */\n      0x00\n        /* \"#utility.yul\":7557:7563   */\n      dup1\n        /* \"#utility.yul\":7565:7571   */\n      0x00\n        /* \"#utility.yul\":7573:7579   */\n      dup1\n        /* \"#utility.yul\":7581:7587   */\n      0x00\n        /* \"#utility.yul\":7634:7637   */\n      0xa0\n        /* \"#utility.yul\":7622:7631   */\n      dup7\n        /* \"#utility.yul\":7613:7620   */\n      dup9\n        /* \"#utility.yul\":7609:7632   */\n      sub\n        /* \"#utility.yul\":7605:7638   */\n      slt\n        /* \"#utility.yul\":7602:7655   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7648:7649   */\n      dup1\n        /* \"#utility.yul\":7641:7653   */\n      revert\n        /* \"#utility.yul\":7602:7655   */\n    tag_307:\n        /* \"#utility.yul\":7674:7703   */\n      tag_308\n        /* \"#utility.yul\":7693:7702   */\n      dup7\n        /* \"#utility.yul\":7674:7703   */\n      tag_217\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7664:7703   */\n      swap5\n      pop\n        /* \"#utility.yul\":7722:7760   */\n      tag_309\n        /* \"#utility.yul\":7756:7758   */\n      0x20\n        /* \"#utility.yul\":7745:7754   */\n      dup8\n        /* \"#utility.yul\":7741:7759   */\n      add\n        /* \"#utility.yul\":7722:7760   */\n      tag_217\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7712:7760   */\n      swap4\n      pop\n        /* \"#utility.yul\":7807:7809   */\n      0x40\n        /* \"#utility.yul\":7796:7805   */\n      dup7\n        /* \"#utility.yul\":7792:7810   */\n      add\n        /* \"#utility.yul\":7779:7811   */\n      calldataload\n        /* \"#utility.yul\":7769:7811   */\n      swap3\n      pop\n        /* \"#utility.yul\":7858:7860   */\n      0x60\n        /* \"#utility.yul\":7847:7856   */\n      dup7\n        /* \"#utility.yul\":7843:7861   */\n      add\n        /* \"#utility.yul\":7830:7862   */\n      calldataload\n        /* \"#utility.yul\":7820:7862   */\n      swap2\n      pop\n        /* \"#utility.yul\":7913:7916   */\n      0x80\n        /* \"#utility.yul\":7902:7911   */\n      dup7\n        /* \"#utility.yul\":7898:7917   */\n      add\n        /* \"#utility.yul\":7885:7918   */\n      calldataload\n        /* \"#utility.yul\":7941:7959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7933:7939   */\n      dup2\n        /* \"#utility.yul\":7930:7960   */\n      gt\n        /* \"#utility.yul\":7927:7977   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7970:7971   */\n      dup1\n        /* \"#utility.yul\":7963:7975   */\n      revert\n        /* \"#utility.yul\":7927:7977   */\n    tag_310:\n        /* \"#utility.yul\":7996:8045   */\n      tag_278\n        /* \"#utility.yul\":8037:8044   */\n      dup9\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8017:8026   */\n      dup10\n        /* \"#utility.yul\":8013:8035   */\n      add\n        /* \"#utility.yul\":7996:8045   */\n      tag_223\n      jump\t// in\n        /* \"#utility.yul\":8468:8848   */\n    tag_64:\n        /* \"#utility.yul\":8547:8548   */\n      0x01\n        /* \"#utility.yul\":8543:8555   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8590:8602   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8611:8672   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8665:8669   */\n      0x7f\n        /* \"#utility.yul\":8657:8663   */\n      dup3\n        /* \"#utility.yul\":8653:8670   */\n      and\n        /* \"#utility.yul\":8643:8670   */\n      swap2\n      pop\n        /* \"#utility.yul\":8611:8672   */\n    tag_314:\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8707:8721   */\n      lt\n        /* \"#utility.yul\":8687:8705   */\n      dup2\n        /* \"#utility.yul\":8684:8722   */\n      sub\n        /* \"#utility.yul\":8681:8842   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":8764:8774   */\n      0x4e487b71\n        /* \"#utility.yul\":8759:8762   */\n      0xe0\n        /* \"#utility.yul\":8755:8775   */\n      shl\n        /* \"#utility.yul\":8752:8753   */\n      0x00\n        /* \"#utility.yul\":8745:8776   */\n      mstore\n        /* \"#utility.yul\":8799:8803   */\n      0x22\n        /* \"#utility.yul\":8796:8797   */\n      0x04\n        /* \"#utility.yul\":8789:8804   */\n      mstore\n        /* \"#utility.yul\":8827:8831   */\n      0x24\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8817:8832   */\n      revert\n        /* \"#utility.yul\":8681:8842   */\n    tag_315:\n      pop\n        /* \"#utility.yul\":8468:8848   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9809   */\n    tag_94:\n        /* \"#utility.yul\":9743:9753   */\n      0x4e487b71\n        /* \"#utility.yul\":9738:9741   */\n      0xe0\n        /* \"#utility.yul\":9734:9754   */\n      shl\n        /* \"#utility.yul\":9731:9732   */\n      0x00\n        /* \"#utility.yul\":9724:9755   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x32\n        /* \"#utility.yul\":9771:9772   */\n      0x04\n        /* \"#utility.yul\":9764:9779   */\n      mstore\n        /* \"#utility.yul\":9798:9802   */\n      0x24\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9803   */\n      revert\n        /* \"#utility.yul\":9814:9941   */\n    tag_225:\n        /* \"#utility.yul\":9875:9885   */\n      0x4e487b71\n        /* \"#utility.yul\":9870:9873   */\n      0xe0\n        /* \"#utility.yul\":9866:9886   */\n      shl\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9887   */\n      mstore\n        /* \"#utility.yul\":9906:9910   */\n      0x11\n        /* \"#utility.yul\":9903:9904   */\n      0x04\n        /* \"#utility.yul\":9896:9911   */\n      mstore\n        /* \"#utility.yul\":9930:9934   */\n      0x24\n        /* \"#utility.yul\":9927:9928   */\n      0x00\n        /* \"#utility.yul\":9920:9935   */\n      revert\n        /* \"#utility.yul\":9946:10081   */\n    tag_100:\n        /* \"#utility.yul\":9985:9988   */\n      0x00\n        /* \"#utility.yul\":10006:10023   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10003:10046   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":10026:10044   */\n      tag_322\n      tag_225\n      jump\t// in\n    tag_322:\n      pop\n        /* \"#utility.yul\":10073:10074   */\n      0x01\n        /* \"#utility.yul\":10062:10075   */\n      add\n      swap1\n        /* \"#utility.yul\":9946:10081   */\n      jump\t// out\n        /* \"#utility.yul\":10905:11306   */\n    tag_124:\n        /* \"#utility.yul\":11107:11109   */\n      0x20\n        /* \"#utility.yul\":11089:11110   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11146:11148   */\n      0x25\n        /* \"#utility.yul\":11126:11144   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11119:11149   */\n      mstore\n        /* \"#utility.yul\":11185:11219   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":11180:11182   */\n      0x40\n        /* \"#utility.yul\":11165:11183   */\n      dup3\n      add\n        /* \"#utility.yul\":11158:11220   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11251:11253   */\n      0x60\n        /* \"#utility.yul\":11236:11254   */\n      dup3\n      add\n        /* \"#utility.yul\":11229:11264   */\n      mstore\n        /* \"#utility.yul\":11296:11299   */\n      0x80\n        /* \"#utility.yul\":11281:11300   */\n      add\n      swap1\n        /* \"#utility.yul\":10905:11306   */\n      jump\t// out\n        /* \"#utility.yul\":11311:11717   */\n    tag_137:\n        /* \"#utility.yul\":11513:11515   */\n      0x20\n        /* \"#utility.yul\":11495:11516   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11552:11554   */\n      0x2a\n        /* \"#utility.yul\":11532:11550   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11525:11555   */\n      mstore\n        /* \"#utility.yul\":11591:11625   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11586:11588   */\n      0x40\n        /* \"#utility.yul\":11571:11589   */\n      dup3\n      add\n        /* \"#utility.yul\":11564:11626   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11657:11659   */\n      0x60\n        /* \"#utility.yul\":11642:11660   */\n      dup3\n      add\n        /* \"#utility.yul\":11635:11675   */\n      mstore\n        /* \"#utility.yul\":11707:11710   */\n      0x80\n        /* \"#utility.yul\":11692:11711   */\n      add\n      swap1\n        /* \"#utility.yul\":11311:11717   */\n      jump\t// out\n        /* \"#utility.yul\":11722:11850   */\n    tag_139:\n        /* \"#utility.yul\":11762:11765   */\n      0x00\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11789:11795   */\n      not\n        /* \"#utility.yul\":11786:11787   */\n      dup3\n        /* \"#utility.yul\":11783:11796   */\n      gt\n        /* \"#utility.yul\":11780:11819   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11799:11817   */\n      tag_329\n      tag_225\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      add\n      swap1\n        /* \"#utility.yul\":11722:11850   */\n      jump\t// out\n        /* \"#utility.yul\":11855:12320   */\n    tag_142:\n        /* \"#utility.yul\":12112:12114   */\n      0x40\n        /* \"#utility.yul\":12101:12110   */\n      dup2\n        /* \"#utility.yul\":12094:12115   */\n      mstore\n        /* \"#utility.yul\":12075:12079   */\n      0x00\n        /* \"#utility.yul\":12138:12194   */\n      tag_331\n        /* \"#utility.yul\":12190:12192   */\n      0x40\n        /* \"#utility.yul\":12179:12188   */\n      dup4\n        /* \"#utility.yul\":12175:12193   */\n      add\n        /* \"#utility.yul\":12167:12173   */\n      dup6\n        /* \"#utility.yul\":12138:12194   */\n      tag_224\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12242:12251   */\n      dup3\n        /* \"#utility.yul\":12234:12240   */\n      dup2\n        /* \"#utility.yul\":12230:12252   */\n      sub\n        /* \"#utility.yul\":12225:12227   */\n      0x20\n        /* \"#utility.yul\":12214:12223   */\n      dup5\n        /* \"#utility.yul\":12210:12228   */\n      add\n        /* \"#utility.yul\":12203:12253   */\n      mstore\n        /* \"#utility.yul\":12270:12314   */\n      tag_332\n        /* \"#utility.yul\":12307:12313   */\n      dup2\n        /* \"#utility.yul\":12299:12305   */\n      dup6\n        /* \"#utility.yul\":12270:12314   */\n      tag_224\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12262:12314   */\n      swap6\n        /* \"#utility.yul\":11855:12320   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12988:13815   */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13385:13400   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":13367:13401   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13437:13452   */\n      dup6\n      and\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13417:13435   */\n      dup3\n      add\n        /* \"#utility.yul\":13410:13453   */\n      mstore\n        /* \"#utility.yul\":13347:13350   */\n      0xa0\n        /* \"#utility.yul\":13484:13486   */\n      0x40\n        /* \"#utility.yul\":13469:13487   */\n      dup3\n      add\n        /* \"#utility.yul\":13462:13493   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13310:13314   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13516:13573   */\n      tag_336\n      swap1\n        /* \"#utility.yul\":13553:13572   */\n      dup4\n      add\n        /* \"#utility.yul\":13545:13551   */\n      dup7\n        /* \"#utility.yul\":13516:13573   */\n      tag_224\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":13621:13630   */\n      dup3\n        /* \"#utility.yul\":13613:13619   */\n      dup2\n        /* \"#utility.yul\":13609:13631   */\n      sub\n        /* \"#utility.yul\":13604:13606   */\n      0x60\n        /* \"#utility.yul\":13593:13602   */\n      dup5\n        /* \"#utility.yul\":13589:13607   */\n      add\n        /* \"#utility.yul\":13582:13632   */\n      mstore\n        /* \"#utility.yul\":13655:13699   */\n      tag_337\n        /* \"#utility.yul\":13692:13698   */\n      dup2\n        /* \"#utility.yul\":13684:13690   */\n      dup7\n        /* \"#utility.yul\":13655:13699   */\n      tag_224\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13641:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13748:13757   */\n      dup3\n        /* \"#utility.yul\":13740:13746   */\n      dup2\n        /* \"#utility.yul\":13736:13758   */\n      sub\n        /* \"#utility.yul\":13730:13733   */\n      0x80\n        /* \"#utility.yul\":13719:13728   */\n      dup5\n        /* \"#utility.yul\":13715:13734   */\n      add\n        /* \"#utility.yul\":13708:13759   */\n      mstore\n        /* \"#utility.yul\":13776:13809   */\n      tag_338\n        /* \"#utility.yul\":13802:13808   */\n      dup2\n        /* \"#utility.yul\":13794:13800   */\n      dup6\n        /* \"#utility.yul\":13776:13809   */\n      tag_219\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13768:13809   */\n      swap9\n        /* \"#utility.yul\":12988:13815   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14069   */\n    tag_174:\n        /* \"#utility.yul\":13889:13895   */\n      0x00\n        /* \"#utility.yul\":13942:13944   */\n      0x20\n        /* \"#utility.yul\":13930:13939   */\n      dup3\n        /* \"#utility.yul\":13921:13928   */\n      dup5\n        /* \"#utility.yul\":13917:13940   */\n      sub\n        /* \"#utility.yul\":13913:13945   */\n      slt\n        /* \"#utility.yul\":13910:13962   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":13958:13959   */\n      0x00\n        /* \"#utility.yul\":13955:13956   */\n      dup1\n        /* \"#utility.yul\":13948:13960   */\n      revert\n        /* \"#utility.yul\":13910:13962   */\n    tag_340:\n        /* \"#utility.yul\":13990:13999   */\n      dup2\n        /* \"#utility.yul\":13984:14000   */\n      mload\n        /* \"#utility.yul\":14009:14039   */\n      tag_237\n        /* \"#utility.yul\":14033:14038   */\n      dup2\n        /* \"#utility.yul\":14009:14039   */\n      tag_218\n      jump\t// in\n        /* \"#utility.yul\":14074:14253   */\n    tag_180:\n        /* \"#utility.yul\":14109:14112   */\n      0x00\n        /* \"#utility.yul\":14151:14152   */\n      0x03\n        /* \"#utility.yul\":14133:14149   */\n      returndatasize\n        /* \"#utility.yul\":14130:14153   */\n      gt\n        /* \"#utility.yul\":14127:14247   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":14197:14198   */\n      0x04\n        /* \"#utility.yul\":14194:14195   */\n      0x00\n        /* \"#utility.yul\":14191:14192   */\n      dup1\n        /* \"#utility.yul\":14176:14199   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":14234:14235   */\n      0x00\n        /* \"#utility.yul\":14228:14236   */\n      mload\n        /* \"#utility.yul\":14223:14226   */\n      0xe0\n        /* \"#utility.yul\":14219:14237   */\n      shr\n        /* \"#utility.yul\":14127:14247   */\n    tag_343:\n        /* \"#utility.yul\":14074:14253   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14258:14929   */\n    tag_182:\n        /* \"#utility.yul\":14297:14300   */\n      0x00\n        /* \"#utility.yul\":14339:14343   */\n      0x44\n        /* \"#utility.yul\":14321:14337   */\n      returndatasize\n        /* \"#utility.yul\":14318:14344   */\n      lt\n        /* \"#utility.yul\":14315:14354   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14315:14354   */\n    tag_345:\n        /* \"#utility.yul\":14381:14383   */\n      0x40\n        /* \"#utility.yul\":14375:14384   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":14446:14462   */\n      returndatasize\n        /* \"#utility.yul\":14442:14467   */\n      dup2\n      add\n        /* \"#utility.yul\":14439:14440   */\n      0x04\n        /* \"#utility.yul\":14375:14384   */\n      dup4\n        /* \"#utility.yul\":14418:14468   */\n      returndatacopy\n        /* \"#utility.yul\":14497:14501   */\n      dup2\n        /* \"#utility.yul\":14491:14502   */\n      mload\n        /* \"#utility.yul\":14521:14537   */\n      returndatasize\n        /* \"#utility.yul\":14556:14574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14627:14629   */\n      dup2\n        /* \"#utility.yul\":14620:14624   */\n      0x24\n        /* \"#utility.yul\":14612:14618   */\n      dup5\n        /* \"#utility.yul\":14608:14625   */\n      add\n        /* \"#utility.yul\":14605:14630   */\n      gt\n        /* \"#utility.yul\":14600:14602   */\n      dup2\n        /* \"#utility.yul\":14592:14598   */\n      dup5\n        /* \"#utility.yul\":14589:14603   */\n      gt\n        /* \"#utility.yul\":14586:14631   */\n      or\n        /* \"#utility.yul\":14583:14641   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":14634:14639   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14583:14641   */\n    tag_346:\n        /* \"#utility.yul\":14671:14677   */\n      dup3\n        /* \"#utility.yul\":14665:14669   */\n      dup6\n        /* \"#utility.yul\":14661:14678   */\n      add\n        /* \"#utility.yul\":14650:14678   */\n      swap2\n      pop\n        /* \"#utility.yul\":14707:14710   */\n      dup2\n        /* \"#utility.yul\":14701:14711   */\n      mload\n        /* \"#utility.yul\":14734:14736   */\n      dup2\n        /* \"#utility.yul\":14726:14732   */\n      dup2\n        /* \"#utility.yul\":14723:14737   */\n      gt\n        /* \"#utility.yul\":14720:14747   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14740:14745   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14720:14747   */\n    tag_347:\n        /* \"#utility.yul\":14824:14826   */\n      dup5\n        /* \"#utility.yul\":14805:14821   */\n      returndatasize\n        /* \"#utility.yul\":14799:14803   */\n      dup8\n        /* \"#utility.yul\":14795:14822   */\n      add\n        /* \"#utility.yul\":14791:14827   */\n      add\n        /* \"#utility.yul\":14784:14788   */\n      0x20\n        /* \"#utility.yul\":14775:14781   */\n      dup3\n        /* \"#utility.yul\":14770:14773   */\n      dup6\n        /* \"#utility.yul\":14766:14782   */\n      add\n        /* \"#utility.yul\":14762:14789   */\n      add\n        /* \"#utility.yul\":14759:14828   */\n      gt\n        /* \"#utility.yul\":14756:14838   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":14831:14836   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14258:14929   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14756:14838   */\n    tag_348:\n        /* \"#utility.yul\":14847:14904   */\n      tag_349\n        /* \"#utility.yul\":14898:14902   */\n      0x20\n        /* \"#utility.yul\":14889:14895   */\n      dup3\n        /* \"#utility.yul\":14881:14887   */\n      dup7\n        /* \"#utility.yul\":14877:14896   */\n      add\n        /* \"#utility.yul\":14873:14903   */\n      add\n        /* \"#utility.yul\":14867:14871   */\n      dup8\n        /* \"#utility.yul\":14847:14904   */\n      tag_220\n      jump\t// in\n    tag_349:\n      pop\n        /* \"#utility.yul\":14920:14923   */\n      swap1\n      swap6\n        /* \"#utility.yul\":14258:14929   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15355:15759   */\n    tag_190:\n        /* \"#utility.yul\":15557:15559   */\n      0x20\n        /* \"#utility.yul\":15539:15560   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15596:15598   */\n      0x28\n        /* \"#utility.yul\":15576:15594   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15569:15599   */\n      mstore\n        /* \"#utility.yul\":15635:15669   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15630:15632   */\n      0x40\n        /* \"#utility.yul\":15615:15633   */\n      dup3\n      add\n        /* \"#utility.yul\":15608:15670   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15701:15703   */\n      0x60\n        /* \"#utility.yul\":15686:15704   */\n      dup3\n      add\n        /* \"#utility.yul\":15679:15717   */\n      mstore\n        /* \"#utility.yul\":15749:15752   */\n      0x80\n        /* \"#utility.yul\":15734:15753   */\n      add\n      swap1\n        /* \"#utility.yul\":15355:15759   */\n      jump\t// out\n        /* \"#utility.yul\":15764:16325   */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16061:16076   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":16043:16077   */\n      dup3\n      mstore\n        /* \"#utility.yul\":16113:16128   */\n      dup6\n      and\n        /* \"#utility.yul\":16108:16110   */\n      0x20\n        /* \"#utility.yul\":16093:16111   */\n      dup3\n      add\n        /* \"#utility.yul\":16086:16129   */\n      mstore\n        /* \"#utility.yul\":16160:16162   */\n      0x40\n        /* \"#utility.yul\":16145:16163   */\n      dup2\n      add\n        /* \"#utility.yul\":16138:16172   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":16203:16205   */\n      0x60\n        /* \"#utility.yul\":16188:16206   */\n      dup2\n      add\n        /* \"#utility.yul\":16181:16215   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":16023:16026   */\n      0xa0\n        /* \"#utility.yul\":16246:16249   */\n      0x80\n        /* \"#utility.yul\":16231:16250   */\n      dup3\n      add\n        /* \"#utility.yul\":16224:16256   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15986:15990   */\n      0x00\n      swap1\n        /* \"#utility.yul\":16273:16319   */\n      tag_353\n      swap1\n        /* \"#utility.yul\":16299:16318   */\n      dup4\n      add\n        /* \"#utility.yul\":16291:16297   */\n      dup5\n        /* \"#utility.yul\":16273:16319   */\n      tag_219\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":16265:16319   */\n      swap8\n        /* \"#utility.yul\":15764:16325   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208971ed53abbc59e4191c224cf13110c5e955438df8999f67913d7ae954a3581764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_415": {
									"entryPoint": null,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_894": {
									"entryPoint": 70,
									"id": 894,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1620:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:996:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:13"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:13"
															},
															"nodeType": "YulIf",
															"src": "268:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:13"
															},
															"nodeType": "YulIf",
															"src": "405:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:13"
															},
															"nodeType": "YulIf",
															"src": "489:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:13"
															},
															"nodeType": "YulIf",
															"src": "581:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:13"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:13"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:13"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:13"
															},
															"nodeType": "YulIf",
															"src": "764:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:13"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:13"
															},
															"nodeType": "YulIf",
															"src": "903:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:13"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:13",
																"statements": []
															},
															"src": "984:129:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1143:59:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:13"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1180:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1168:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1168:15:13"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1185:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1164:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:24:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:35:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:35:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1128:1:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1125:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1125:9:13"
															},
															"nodeType": "YulIf",
															"src": "1122:80:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1211:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1221:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:13",
														"type": ""
													}
												],
												"src": "146:1087:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1317:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1320:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1313:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1334:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1364:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1370:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1360:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1338:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1411:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1413:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1427:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1435:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1423:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1413:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1391:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1384:26:13"
															},
															"nodeType": "YulIf",
															"src": "1381:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1501:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1529:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1534:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1525:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1525:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1569:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1559:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1559:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1597:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1587:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1457:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1480:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1488:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1477:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1477:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:38:13"
															},
															"nodeType": "YulIf",
															"src": "1451:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1273:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1282:6:13",
														"type": ""
													}
												],
												"src": "1238:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), 0)\n        }\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620015fe380380620015fe83398101604081905262000034916200011b565b6200003f8162000046565b5062000233565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b6020821081036200022d57634e487b7160e01b600052602260045260246000fd5b50919050565b6113bb80620002436000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc0565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c03565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c27565b610275565b6040516100a99190610c8d565b610108610103366004610dec565b610309565b005b61011d610118366004610e96565b6103a0565b6040516100a99190610f9c565b610108610138366004610faf565b6104ca565b6100c561014b366004610feb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461101e565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611083565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611083565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110bd565b6020026020010151858381518110610488576104886110bd565b602002602001015161018c565b8282815181106104a7576104a76110bd565b60209081029190910101526104bb816110e9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611102565b3360005b84518110156106cf576000858281518110610609576106096110bd565b602002602001015190506000858381518110610627576106276110bd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611147565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611191565b92505081905550505050806106c8906110e9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111a9565b60405180910390a4610735818787878787610943565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f490611102565b3361085c81878761085388610a9e565b61039988610a9e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089d5760405162461bcd60e51b81526004016101f490611147565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108da908490611191565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093a828888888888610ae9565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098790899089908890889088906004016111d7565b6020604051808303816000875af19250505080156109c2575060408051601f3d908101601f191682019092526109bf91810190611235565b60015b610a6e576109ce611252565b806308c379a003610a0757506109e261126e565b806109ed5750610a09565b8060405162461bcd60e51b81526004016101f49190610c8d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad857610ad86110bd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2d9089908990889088908890600401611340565b6020604051808303816000875af1925050508015610b68575060408051601f3d908101601f19168201909252610b6591810190611235565b60015b610b74576109ce611252565b6001600160e01b0319811663f23a6e6160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b80356001600160a01b0381168114610bbb57600080fd5b919050565b60008060408385031215610bd357600080fd5b610bdc83610ba4565b946020939093013593505050565b6001600160e01b031981168114610c0057600080fd5b50565b600060208284031215610c1557600080fd5b8135610c2081610bea565b9392505050565b600060208284031215610c3957600080fd5b5035919050565b6000815180845260005b81811015610c6657602081850181015186830182015201610c4a565b81811115610c78576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c206020830184610c40565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610ca0565b6040525050565b600067ffffffffffffffff821115610cfd57610cfd610ca0565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2582610ce3565b604051610d328282610cb6565b83815260059390931b8501820192828101915086841115610d5257600080fd5b8286015b84811015610d6d5780358352918301918301610d56565b509695505050505050565b600082601f830112610d8957600080fd5b813567ffffffffffffffff811115610da357610da3610ca0565b604051610dba601f8301601f191660200182610cb6565b818152846020838601011115610dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0457600080fd5b610e0d86610ba4565b9450610e1b60208701610ba4565b9350604086013567ffffffffffffffff80821115610e3857600080fd5b610e4489838a01610d07565b94506060880135915080821115610e5a57600080fd5b610e6689838a01610d07565b93506080880135915080821115610e7c57600080fd5b50610e8988828901610d78565b9150509295509295909350565b60008060408385031215610ea957600080fd5b823567ffffffffffffffff80821115610ec157600080fd5b818501915085601f830112610ed557600080fd5b81356020610ee282610ce3565b604051610eef8282610cb6565b83815260059390931b8501820192828101915089841115610f0f57600080fd5b948201945b83861015610f3457610f2586610ba4565b82529482019490820190610f14565b96505086013592505080821115610f4a57600080fd5b50610f5785828601610d07565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9157815187529582019590820190600101610f75565b509495945050505050565b602081526000610c206020830184610f61565b60008060408385031215610fc257600080fd5b610fcb83610ba4565b915060208301358015158114610fe057600080fd5b809150509250929050565b60008060408385031215610ffe57600080fd5b61100783610ba4565b915061101560208401610ba4565b90509250929050565b600080600080600060a0868803121561103657600080fd5b61103f86610ba4565b945061104d60208701610ba4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107757600080fd5b610e8988828901610d78565b600181811c9082168061109757607f821691505b6020821081036110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110fb576110fb6110d3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a4576111a46110d3565b500190565b6040815260006111bc6040830185610f61565b82810360208401526111ce8185610f61565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120390830186610f61565b82810360608401526112158186610f61565b905082810360808401526112298185610c40565b98975050505050505050565b60006020828403121561124757600080fd5b8151610c2081610bea565b600060033d111561126b5760046000803e5060005160e01c5b90565b600060443d101561127c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112ac57505050505090565b82850191508151818111156112c45750505050505090565b843d87010160208285010111156112de5750505050505090565b6112ed60208286010187610cb6565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137a90830184610c40565b97965050505050505056fea26469706673582212208971ed53abbc59e4191c224cf13110c5e955438df8999f67913d7ae954a3581764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x15FE CODESIZE SUB DUP1 PUSH3 0x15FE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11B JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x233 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x5B SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x5F JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x6D SWAP1 PUSH3 0x1F7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x91 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xAC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xDC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xDC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xDC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xBF JUMP JUMPDEST POP PUSH3 0xEA SWAP3 SWAP2 POP PUSH3 0xEE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xEA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xEF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x171 JUMPI PUSH3 0x171 PUSH3 0x105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x19C JUMPI PUSH3 0x19C PUSH3 0x105 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x1D9 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x1BA JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x1EB JUMPI PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BB DUP1 PUSH3 0x243 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x853 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DA SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x987 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6E JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA07 JUMPI POP PUSH2 0x9E2 PUSH2 0x126E JUMP JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH2 0xA09 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB74 JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDC PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD25 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD32 DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD56 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA3 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBA PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0D DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1B PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE44 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE2 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEF DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF25 DUP7 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF57 DUP6 DUP3 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 PUSH1 0x20 DUP5 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103F DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0x104D PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1097 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x10D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10D3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0xC40 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x126B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x127C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137A SWAP1 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH18 0xED53ABBC59E4191C224CF13110C5E955438D 0xF8 SWAP10 SWAP16 PUSH8 0x913D7AE954A35817 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "555:14720:2:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:14720:2;;;-1:-1:-1;555:14720:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:13;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:13;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:13:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;555:14720:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArray_1465": {
									"entryPoint": 2718,
									"id": 1465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1309": {
									"entryPoint": null,
									"id": 1309,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1437": {
									"entryPoint": 2371,
									"id": 1437,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1372": {
									"entryPoint": 2793,
									"id": 1372,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_2602": {
									"entryPoint": null,
									"id": 2602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_883": {
									"entryPoint": 1376,
									"id": 883,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_757": {
									"entryPoint": 2077,
									"id": 757,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1290": {
									"entryPoint": 1853,
									"id": 1290,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_550": {
									"entryPoint": 928,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_486": {
									"entryPoint": 396,
									"id": 486,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_2313": {
									"entryPoint": null,
									"id": 2313,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_663": {
									"entryPoint": 777,
									"id": 663,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_623": {
									"entryPoint": 1241,
									"id": 623,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_567": {
									"entryPoint": 1226,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2635": {
									"entryPoint": null,
									"id": 2635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_446": {
									"entryPoint": 547,
									"id": 446,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_458": {
									"entryPoint": 629,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4567,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4928,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16327:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:13"
															},
															"nodeType": "YulIf",
															"src": "111:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:13",
														"type": ""
													}
												],
												"src": "14:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:13"
															},
															"nodeType": "YulIf",
															"src": "289:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:13",
														"type": ""
													}
												],
												"src": "192:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:13",
														"type": ""
													}
												],
												"src": "451:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:13"
															},
															"nodeType": "YulIf",
															"src": "687:71:13"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:13",
														"type": ""
													}
												],
												"src": "633:131:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:13"
															},
															"nodeType": "YulIf",
															"src": "848:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:13",
														"type": ""
													}
												],
												"src": "769:245:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:13",
														"type": ""
													}
												],
												"src": "1019:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:13"
															},
															"nodeType": "YulIf",
															"src": "1291:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:13",
														"type": ""
													}
												],
												"src": "1211:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:422:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:13",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:13"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:13",
																"statements": []
															},
															"src": "1538:162:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:62:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1763:3:13"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1768:6:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1759:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1759:16:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1777:4:13",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1755:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1755:27:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1784:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:38:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:38:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1715:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1712:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:13:13"
															},
															"nodeType": "YulIf",
															"src": "1709:87:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1805:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1833:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1841:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1829:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1829:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1850:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1846:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1846:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1816:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1816:39:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:13",
														"type": ""
													}
												],
												"src": "1396:472:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2011:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2022:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2060:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2083:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2068:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2068:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2042:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2042:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2034:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:13",
														"type": ""
													}
												],
												"src": "1873:220:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2154:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2150:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2140:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2098:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:202:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2309:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2325:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2331:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2321:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2321:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2340:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2336:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2336:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2305:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2305:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2291:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2420:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2422:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2422:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2422:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2363:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2375:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2360:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2399:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2396:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:62:13"
															},
															"nodeType": "YulIf",
															"src": "2354:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2458:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2462:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2259:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2267:4:13",
														"type": ""
													}
												],
												"src": "2230:249:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2553:114:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2597:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2599:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2599:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2599:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2577:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:30:13"
															},
															"nodeType": "YulIf",
															"src": "2563:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2644:1:13",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:14:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2656:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2636:25:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2628:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2544:4:13",
														"type": ""
													}
												],
												"src": "2484:183:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:660:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2785:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2797:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2787:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2787:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2787:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2764:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2772:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2760:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2779:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2756:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2756:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:35:13"
															},
															"nodeType": "YulIf",
															"src": "2746:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2810:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2820:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2820:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2814:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2849:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2859:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2853:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2922:2:13"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2882:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2882:43:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2876:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2934:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2954:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2994:2:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2966:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2966:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3006:17:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3017:6:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3010:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3039:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3047:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3032:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:18:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3059:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3070:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3078:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3066:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:15:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3090:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3112:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3124:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3127:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:23:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3104:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:32:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3094:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3164:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3173:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3176:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3166:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3166:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3166:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3151:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:15:13"
															},
															"nodeType": "YulIf",
															"src": "3145:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3189:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3212:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3193:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3280:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3301:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3319:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3306:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3294:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3294:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3294:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3337:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3353:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3344:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3337:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3235:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3240:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3232:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3248:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3250:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3261:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3266:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3257:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3228:3:13",
																"statements": []
															},
															"src": "3224:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3384:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3375:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2710:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2718:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2726:5:13",
														"type": ""
													}
												],
												"src": "2672:724:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3453:503:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3502:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3511:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3504:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3504:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3504:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3481:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3489:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3477:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3477:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3496:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3473:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3466:35:13"
															},
															"nodeType": "YulIf",
															"src": "3463:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3527:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3550:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3537:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3531:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3596:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3598:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3598:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3598:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3572:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:26:13"
															},
															"nodeType": "YulIf",
															"src": "3566:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3627:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3641:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3631:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3679:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3699:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3703:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3695:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3695:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3714:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3710:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3710:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3691:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3691:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3687:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:38:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3659:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:67:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3742:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3750:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3735:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3735:18:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3776:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3784:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3772:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3772:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3789:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3768:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3768:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3765:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:35:13"
															},
															"nodeType": "YulIf",
															"src": "3762:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3843:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3858:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3877:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3826:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3826:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3826:54:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3912:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3900:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3900:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3896:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3896:26:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3924:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3889:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3889:37:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3935:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3944:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3935:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3427:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3443:5:13",
														"type": ""
													}
												],
												"src": "3401:555:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4158:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4205:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4214:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4217:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4207:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4207:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4207:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4179:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4188:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4175:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:13"
															},
															"nodeType": "YulIf",
															"src": "4168:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4230:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4240:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4230:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4278:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4288:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4335:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4366:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4377:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4349:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4349:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4339:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4390:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4400:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4394:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4445:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4454:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4447:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4447:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4447:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4430:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:14:13"
															},
															"nodeType": "YulIf",
															"src": "4427:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4513:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4524:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4533:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4480:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4470:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4550:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4583:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4594:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4566:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4554:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4613:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4623:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4610:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:16:13"
															},
															"nodeType": "YulIf",
															"src": "4607:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4652:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4706:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4717:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4662:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4652:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4734:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4750:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4738:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4812:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4821:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4824:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4814:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4814:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4814:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4808:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4795:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4795:16:13"
															},
															"nodeType": "YulIf",
															"src": "4792:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4837:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4879:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4890:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4847:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4092:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4103:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4123:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4131:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4139:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4147:6:13",
														"type": ""
													}
												],
												"src": "3961:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:1071:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5092:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5104:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5094:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5076:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5063:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5063:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5088:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:32:13"
															},
															"nodeType": "YulIf",
															"src": "5056:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5117:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5144:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5131:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5121:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5163:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5173:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5167:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5218:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5206:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5214:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5203:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:14:13"
															},
															"nodeType": "YulIf",
															"src": "5200:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5243:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5257:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5268:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5247:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5323:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5332:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5325:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5325:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5325:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5302:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5306:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5298:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5298:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5313:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:35:13"
															},
															"nodeType": "YulIf",
															"src": "5284:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5348:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5371:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5358:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5352:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5393:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5387:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5406:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5456:2:13"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5416:39:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:43:13"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5410:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5468:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5488:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5482:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5472:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5520:6:13"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5528:2:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5500:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5500:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5500:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5540:17:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5551:6:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5544:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5581:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5566:18:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5593:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5612:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:15:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5624:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5646:2:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5654:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5657:2:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5650:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5650:10:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:19:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5663:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5638:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5638:28:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5628:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5681:6:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5689:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5678:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:19:13"
															},
															"nodeType": "YulIf",
															"src": "5675:39:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5738:2:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5742:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:11:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5727:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5810:92:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5831:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5855:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5836:18:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5836:23:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5824:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5824:36:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5824:36:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5873:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5889:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5880:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5880:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5873:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5765:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5770:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5762:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5778:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5780:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5791:3:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5796:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5787:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5787:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5780:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5758:3:13",
																"statements": []
															},
															"src": "5754:148:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5911:16:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5921:6:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5936:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5980:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5952:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5940:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6013:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6022:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6025:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6015:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6015:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6015:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5999:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6009:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5996:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5996:16:13"
															},
															"nodeType": "YulIf",
															"src": "5993:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6103:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6048:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6038:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5004:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5015:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5027:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5035:6:13",
														"type": ""
													}
												],
												"src": "4909:1208:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6183:374:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6193:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6213:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6207:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6207:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6197:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6228:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6228:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6256:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6266:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6260:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6286:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6279:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6307:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6325:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6332:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6321:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6321:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6311:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6344:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6353:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6348:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6412:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6433:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6444:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6438:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6438:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6426:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6426:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6465:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6476:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6481:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6472:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6472:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6465:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6497:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6511:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6519:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6507:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6497:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6377:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6371:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6385:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6387:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6396:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6399:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6392:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6387:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6367:3:13",
																"statements": []
															},
															"src": "6363:169:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6541:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6548:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6160:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6167:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6175:3:13",
														"type": ""
													}
												],
												"src": "6122:435:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6713:110:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6741:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6753:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6790:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6813:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6798:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6798:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6761:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6753:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6682:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6693:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6704:4:13",
														"type": ""
													}
												],
												"src": "6562:261:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6912:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6958:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6967:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6970:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6960:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6960:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6960:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6933:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6942:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6929:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6929:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6954:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:32:13"
															},
															"nodeType": "YulIf",
															"src": "6922:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6983:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7012:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6993:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6993:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7031:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7044:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7044:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7035:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7098:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7119:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7112:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7112:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7105:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7105:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7095:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7095:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7088:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7088:40:13"
															},
															"nodeType": "YulIf",
															"src": "7085:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7154:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7164:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6870:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6881:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6893:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6901:6:13",
														"type": ""
													}
												],
												"src": "6828:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:13"
															},
															"nodeType": "YulIf",
															"src": "7277:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7367:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7348:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7386:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7419:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7430:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7396:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:13",
														"type": ""
													}
												],
												"src": "7180:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7651:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7641:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7613:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7622:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7634:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:33:13"
															},
															"nodeType": "YulIf",
															"src": "7602:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7664:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7674:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7674:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7712:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7745:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7756:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7741:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7741:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7722:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7712:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7769:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7796:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7807:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7779:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7779:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7820:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7847:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7858:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7830:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7820:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7871:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7902:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7913:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7898:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7898:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7885:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7875:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7961:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7970:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7973:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7963:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7963:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7963:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7941:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7930:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7930:30:13"
															},
															"nodeType": "YulIf",
															"src": "7927:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7986:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8017:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8028:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8013:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8013:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8037:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7996:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7996:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7526:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7537:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7549:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7557:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7565:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7573:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7581:6:13",
														"type": ""
													}
												],
												"src": "7445:606:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8230:233:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8247:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8258:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8281:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8292:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8277:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8277:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8297:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8270:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8320:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8331:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8316:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8316:18:13"
																	},
																	{
																		"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8336:34:13",
																		"type": "",
																		"value": "ERC1155: balance query for the z"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8309:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8309:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8309:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8391:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8402:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8387:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8387:18:13"
																	},
																	{
																		"hexValue": "65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8407:13:13",
																		"type": "",
																		"value": "ero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8430:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8442:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8453:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8438:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8438:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8207:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8221:4:13",
														"type": ""
													}
												],
												"src": "8056:407:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8523:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8533:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8547:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8550:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8543:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8543:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8564:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8594:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8590:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8568:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8641:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8643:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8657:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8665:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8653:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8653:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8643:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8621:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8614:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8614:26:13"
															},
															"nodeType": "YulIf",
															"src": "8611:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8731:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8752:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8759:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8764:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8755:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8755:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8745:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8745:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8796:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8799:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8789:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8789:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8824:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8827:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8817:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8817:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8817:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8687:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8707:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8707:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:38:13"
															},
															"nodeType": "YulIf",
															"src": "8681:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8503:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8512:6:13",
														"type": ""
													}
												],
												"src": "8468:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9027:240:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9044:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9037:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9037:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9037:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9078:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9089:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9074:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9074:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9094:2:13",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9067:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9067:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9117:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9128:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9113:18:13"
																	},
																	{
																		"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9133:34:13",
																		"type": "",
																		"value": "ERC1155: transfer caller is not "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9106:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9106:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9106:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9199:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9184:18:13"
																	},
																	{
																		"hexValue": "6f776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9204:20:13",
																		"type": "",
																		"value": "owner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9177:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9004:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9018:4:13",
														"type": ""
													}
												],
												"src": "8853:414:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:231:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:13"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:13",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:13"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:11:13",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9644:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9667:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:13",
														"type": ""
													}
												],
												"src": "9272:405:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9714:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9738:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9734:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9724:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9724:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9795:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9682:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9846:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9866:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9866:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9903:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9906:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9930:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9920:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9920:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9814:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10024:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10026:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10026:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10026:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10009:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10020:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10006:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10006:17:13"
															},
															"nodeType": "YulIf",
															"src": "10003:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10055:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10066:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10062:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10062:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10055:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9975:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9985:3:13",
														"type": ""
													}
												],
												"src": "9946:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10260:231:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10277:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10288:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10270:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10270:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10311:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10322:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10307:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10300:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10300:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10350:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10361:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10346:18:13"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10366:34:13",
																		"type": "",
																		"value": "ERC1155: caller is not owner nor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10421:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:18:13"
																	},
																	{
																		"hexValue": "20617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10437:11:13",
																		"type": "",
																		"value": " approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10410:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10410:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10410:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10458:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10470:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10481:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10466:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10458:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10237:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10251:4:13",
														"type": ""
													}
												],
												"src": "10086:405:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10687:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10698:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10680:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10680:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10737:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10760:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10771:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:18:13"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10776:34:13",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10749:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10749:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10831:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10842:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:18:13"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10847:10:13",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10820:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10820:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10867:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10879:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10890:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10875:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10875:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10867:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10647:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10661:4:13",
														"type": ""
													}
												],
												"src": "10496:404:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11079:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11096:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11089:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11089:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11130:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11141:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11146:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11119:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11119:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11119:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11169:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11180:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11165:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11165:18:13"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11185:34:13",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11158:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11158:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11158:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11240:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11251:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11236:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11236:18:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11256:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11229:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11273:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11296:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11281:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11056:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11070:4:13",
														"type": ""
													}
												],
												"src": "10905:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11485:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11502:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11513:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11547:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11532:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11532:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11552:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11575:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11586:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11571:18:13"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11591:34:13",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11564:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11564:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11646:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11657:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11642:18:13"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11662:12:13",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11635:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11635:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11684:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11707:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11692:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11692:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11684:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11462:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11476:4:13",
														"type": ""
													}
												],
												"src": "11311:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11770:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11797:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11799:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11799:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11799:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11786:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11793:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11789:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11789:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11783:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11783:13:13"
															},
															"nodeType": "YulIf",
															"src": "11780:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11828:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11839:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11828:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11753:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11756:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11762:3:13",
														"type": ""
													}
												],
												"src": "11722:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12084:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12101:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12094:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12094:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12094:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12124:70:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12167:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12179:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12190:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12175:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12138:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12138:56:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12128:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12242:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12299:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12270:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12270:44:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12045:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12064:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12075:4:13",
														"type": ""
													}
												],
												"src": "11855:465:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12499:231:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12516:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12509:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12509:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12509:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12550:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12561:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12546:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12546:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12566:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12539:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12539:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12539:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12589:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12600:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:18:13"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12605:34:13",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12578:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12578:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12578:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12660:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12671:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12656:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12656:18:13"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:11:13",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12649:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12649:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12649:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12697:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12709:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12720:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12705:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12697:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12476:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12490:4:13",
														"type": ""
													}
												],
												"src": "12325:405:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12864:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12874:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12882:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12916:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12927:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12909:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12909:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12909:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12970:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12825:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12836:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12844:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12855:4:13",
														"type": ""
													}
												],
												"src": "12735:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13319:496:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13329:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13347:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13352:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13343:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13343:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13339:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13333:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13374:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13389:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13397:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13385:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13385:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13367:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13367:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13367:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13421:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13417:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13417:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13441:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13449:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13437:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13437:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13410:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13410:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13473:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13469:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13469:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13462:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13462:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13462:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13502:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13545:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13516:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13516:57:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13506:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13593:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13604:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13589:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13613:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13621:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13609:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13609:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13582:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13641:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13684:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13692:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13655:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13655:44:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13645:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13719:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13730:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13715:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13715:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13740:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13748:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13736:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13736:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13708:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13708:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13768:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13794:6:13"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13802:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13776:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:33:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13768:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13256:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13267:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13275:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13283:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13291:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13299:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13310:4:13",
														"type": ""
													}
												],
												"src": "12988:827:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13900:169:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13946:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13955:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13958:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13948:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13948:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13921:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13930:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13917:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13917:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13913:32:13"
															},
															"nodeType": "YulIf",
															"src": "13910:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13971:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13990:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13984:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13975:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14033:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14009:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14009:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14048:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14058:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14048:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13866:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13877:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13889:6:13",
														"type": ""
													}
												],
												"src": "13820:249:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14117:136:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14162:85:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14191:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14194:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14197:1:13",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "14176:14:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14176:23:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14176:23:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14212:25:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14223:3:13",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14234:1:13",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14228:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14228:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "14219:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14219:18:13"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "14212:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14133:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14133:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14151:1:13",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14130:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14130:23:13"
															},
															"nodeType": "YulIf",
															"src": "14127:120:13"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "14109:3:13",
														"type": ""
													}
												],
												"src": "14074:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14305:624:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14345:9:13",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14347:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "14321:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14339:4:13",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14318:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:26:13"
															},
															"nodeType": "YulIf",
															"src": "14315:39:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14363:21:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14381:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14375:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14375:9:13"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "14367:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14393:16:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14407:1:13",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14403:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14403:6:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14397:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14433:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "14446:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14446:16:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14464:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14442:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14442:25:13"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "14418:14:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14418:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14418:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14477:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14497:4:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14491:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:11:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14481:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14511:26:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14521:14:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14521:16:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14515:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14546:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14556:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14550:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14632:9:13",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14634:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14592:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14600:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14589:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14589:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14612:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14620:4:13",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14608:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14608:17:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14627:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14605:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14605:25:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14586:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14586:45:13"
															},
															"nodeType": "YulIf",
															"src": "14583:58:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14650:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14665:4:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14671:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14661:17:13"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14654:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14687:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14707:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14701:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14701:10:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14691:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14738:9:13",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14740:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14726:6:13"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14734:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14723:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14723:14:13"
															},
															"nodeType": "YulIf",
															"src": "14720:27:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14829:9:13",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14831:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14770:3:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14775:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14766:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14766:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14784:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:27:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14799:4:13"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14805:14:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14805:16:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14795:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14795:27:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14824:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14791:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14791:36:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14759:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14759:69:13"
															},
															"nodeType": "YulIf",
															"src": "14756:82:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14867:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14881:6:13"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14889:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14877:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14877:19:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14898:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14873:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14873:30:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14847:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14847:57:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14847:57:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14913:10:13",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14920:3:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14913:3:13"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14297:3:13",
														"type": ""
													}
												],
												"src": "14258:671:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15108:242:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15125:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15136:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15118:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15118:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15118:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15159:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15170:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15155:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15155:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15175:2:13",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15148:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15148:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15148:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15198:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15209:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15194:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15194:18:13"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15214:34:13",
																		"type": "",
																		"value": "ERC1155: transfer to non ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15187:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15187:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15269:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15280:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15265:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15265:18:13"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15285:22:13",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15258:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15258:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15258:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15317:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15329:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15340:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15325:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15317:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15085:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15099:4:13",
														"type": ""
													}
												],
												"src": "14934:416:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15529:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15546:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15557:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15539:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15539:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15539:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15580:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15591:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15576:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15576:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15596:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15569:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15569:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15569:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15619:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15630:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15615:18:13"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15635:34:13",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15608:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15608:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15608:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15690:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15701:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15686:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15686:18:13"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15706:10:13",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15679:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15679:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15726:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15749:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15734:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15506:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15520:4:13",
														"type": ""
													}
												],
												"src": "15355:404:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15995:330:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16005:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16023:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16028:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16019:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16019:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16032:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16015:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16015:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16009:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16050:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16065:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16073:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16061:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16061:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16043:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16043:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16097:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16108:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16093:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16093:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16117:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16125:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16113:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16113:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16086:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16086:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16149:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16160:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16145:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16145:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16165:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16138:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16138:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16138:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16192:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16203:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16188:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16188:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16208:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16181:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16181:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16246:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16231:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16252:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16224:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16224:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16224:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16265:54:13",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "16291:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16303:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16314:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16299:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16299:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "16273:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16273:46:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16265:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15932:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15943:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15951:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15959:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15967:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15975:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15986:4:13",
														"type": ""
													}
												],
												"src": "15764:561:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC1155: balance query for the z\")\n        mstore(add(headStart, 96), \"ero address\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC1155: transfer caller is not \")\n        mstore(add(headStart, 96), \"owner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: caller is not owner nor\")\n        mstore(add(headStart, 96), \" approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc0565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c03565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c27565b610275565b6040516100a99190610c8d565b610108610103366004610dec565b610309565b005b61011d610118366004610e96565b6103a0565b6040516100a99190610f9c565b610108610138366004610faf565b6104ca565b6100c561014b366004610feb565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b61010861018736600461101e565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611083565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611083565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca0565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110bd565b6020026020010151858381518110610488576104886110bd565b602002602001015161018c565b8282815181106104a7576104a76110bd565b60209081029190910101526104bb816110e9565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081d565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611102565b3360005b84518110156106cf576000858281518110610609576106096110bd565b602002602001015190506000858381518110610627576106276110bd565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f490611147565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611191565b92505081905550505050806106c8906110e9565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111a9565b60405180910390a4610735818787878787610943565b505050505050565b816001600160a01b0316836001600160a01b0316036107b05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108435760405162461bcd60e51b81526004016101f490611102565b3361085c81878761085388610a9e565b61039988610a9e565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089d5760405162461bcd60e51b81526004016101f490611147565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108da908490611191565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093a828888888888610ae9565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098790899089908890889088906004016111d7565b6020604051808303816000875af19250505080156109c2575060408051601f3d908101601f191682019092526109bf91810190611235565b60015b610a6e576109ce611252565b806308c379a003610a0757506109e261126e565b806109ed5750610a09565b8060405162461bcd60e51b81526004016101f49190610c8d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ad857610ad86110bd565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2d9089908990889088908890600401611340565b6020604051808303816000875af1925050508015610b68575060408051601f3d908101601f19168201909252610b6591810190611235565b60015b610b74576109ce611252565b6001600160e01b0319811663f23a6e6160e01b1461093a5760405162461bcd60e51b81526004016101f4906112f8565b80356001600160a01b0381168114610bbb57600080fd5b919050565b60008060408385031215610bd357600080fd5b610bdc83610ba4565b946020939093013593505050565b6001600160e01b031981168114610c0057600080fd5b50565b600060208284031215610c1557600080fd5b8135610c2081610bea565b9392505050565b600060208284031215610c3957600080fd5b5035919050565b6000815180845260005b81811015610c6657602081850181015186830182015201610c4a565b81811115610c78576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c206020830184610c40565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cdc57610cdc610ca0565b6040525050565b600067ffffffffffffffff821115610cfd57610cfd610ca0565b5060051b60200190565b600082601f830112610d1857600080fd5b81356020610d2582610ce3565b604051610d328282610cb6565b83815260059390931b8501820192828101915086841115610d5257600080fd5b8286015b84811015610d6d5780358352918301918301610d56565b509695505050505050565b600082601f830112610d8957600080fd5b813567ffffffffffffffff811115610da357610da3610ca0565b604051610dba601f8301601f191660200182610cb6565b818152846020838601011115610dcf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0457600080fd5b610e0d86610ba4565b9450610e1b60208701610ba4565b9350604086013567ffffffffffffffff80821115610e3857600080fd5b610e4489838a01610d07565b94506060880135915080821115610e5a57600080fd5b610e6689838a01610d07565b93506080880135915080821115610e7c57600080fd5b50610e8988828901610d78565b9150509295509295909350565b60008060408385031215610ea957600080fd5b823567ffffffffffffffff80821115610ec157600080fd5b818501915085601f830112610ed557600080fd5b81356020610ee282610ce3565b604051610eef8282610cb6565b83815260059390931b8501820192828101915089841115610f0f57600080fd5b948201945b83861015610f3457610f2586610ba4565b82529482019490820190610f14565b96505086013592505080821115610f4a57600080fd5b50610f5785828601610d07565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9157815187529582019590820190600101610f75565b509495945050505050565b602081526000610c206020830184610f61565b60008060408385031215610fc257600080fd5b610fcb83610ba4565b915060208301358015158114610fe057600080fd5b809150509250929050565b60008060408385031215610ffe57600080fd5b61100783610ba4565b915061101560208401610ba4565b90509250929050565b600080600080600060a0868803121561103657600080fd5b61103f86610ba4565b945061104d60208701610ba4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107757600080fd5b610e8988828901610d78565b600181811c9082168061109757607f821691505b6020821081036110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110fb576110fb6110d3565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a4576111a46110d3565b500190565b6040815260006111bc6040830185610f61565b82810360208401526111ce8185610f61565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120390830186610f61565b82810360608401526112158186610f61565b905082810360808401526112298185610c40565b98975050505050505050565b60006020828403121561124757600080fd5b8151610c2081610bea565b600060033d111561126b5760046000803e5060005160e01c5b90565b600060443d101561127c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112ac57505050505090565b82850191508151818111156112c45750505050505090565b843d87010160208285010111156112de5750505050505090565b6112ed60208286010187610cb6565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137a90830184610c40565b97965050505050505056fea26469706673582212208971ed53abbc59e4191c224cf13110c5e955438df8999f67913d7ae954a3581764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC0 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC27 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1083 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81D JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10E9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x943 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x843 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1102 JUMP JUMPDEST CALLER PUSH2 0x85C DUP2 DUP8 DUP8 PUSH2 0x853 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xA9E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DA SWAP1 DUP5 SWAP1 PUSH2 0x1191 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93A DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAE9 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x987 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11D7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9BF SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6E JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0xA07 JUMPI POP PUSH2 0x9E2 PUSH2 0x126E JUMP JUMPDEST DUP1 PUSH2 0x9ED JUMPI POP PUSH2 0xA09 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xAD8 JUMPI PUSH2 0xAD8 PUSH2 0x10BD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1340 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB68 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB65 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1235 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB74 JUMPI PUSH2 0x9CE PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12F8 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDC DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC78 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDC PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0xCA0 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD25 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD32 DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6D JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD56 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA3 JUMPI PUSH2 0xDA3 PUSH2 0xCA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBA PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0D DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1B PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE44 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE66 DUP10 DUP4 DUP11 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE2 DUP3 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEEF DUP3 DUP3 PUSH2 0xCB6 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF25 DUP7 PUSH2 0xBA4 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF14 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF57 DUP6 DUP3 DUP7 ADD PUSH2 0xD07 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF91 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF75 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC20 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCB DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1007 DUP4 PUSH2 0xBA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1015 PUSH1 0x20 DUP5 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103F DUP7 PUSH2 0xBA4 JUMP JUMPDEST SWAP5 POP PUSH2 0x104D PUSH1 0x20 DUP8 ADD PUSH2 0xBA4 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE89 DUP9 DUP3 DUP10 ADD PUSH2 0xD78 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1097 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10FB JUMPI PUSH2 0x10FB PUSH2 0x10D3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH2 0x11A4 PUSH2 0x10D3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11CE DUP2 DUP6 PUSH2 0xF61 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1203 SWAP1 DUP4 ADD DUP7 PUSH2 0xF61 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1215 DUP2 DUP7 PUSH2 0xF61 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1229 DUP2 DUP6 PUSH2 0xC40 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC20 DUP2 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x126B JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x127C JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12AC JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C4 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12DE JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12ED PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB6 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137A SWAP1 DUP4 ADD DUP5 PUSH2 0xC40 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH18 0xED53ABBC59E4191C224CF13110C5E955438D 0xF8 SWAP10 SWAP16 PUSH8 0x913D7AE954A35817 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "555:14720:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:13;;;585:2;570:18;2170:228:2;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:13;;1177:22;1159:41;;1147:2;1132:18;1221:305:2;1019:187:13;1925:103:2;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:2;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:2;;2275:77;;;;-1:-1:-1;;;2275:77:2;;8258:2:13;2275:77:2;;;8240:21:13;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:13;;;8380:41;8438:19;;2275:77:2;;;;;;;;;-1:-1:-1;2369:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:2;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:2;;-1:-1:-1;;;1358:41:2;;:109;;-1:-1:-1;;;;;;;1415:52:2;;-1:-1:-1;;;1415:52:2;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1483:36:2;1339:180;1221:305;-1:-1:-1;;1221:305:2:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:2;;719:10:10;4270:20:2;;:60;;-1:-1:-1;4294:36:2;4311:4;719:10:10;3351:166:2;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:2;;9055:2:13;4249:157:2;;;9037:21:13;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:13;;;9177:48;9242:19;;4249:157:2;8853:414:13;4249:157:2;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:2;;9474:2:13;2738:83:2;;;9456:21:13;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:13;;;9596:39;9652:19;;2738:83:2;9272:405:13;2738:83:2;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:2;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:2;2555:508;-1:-1:-1;;;2555:508:2:o;3131:153::-;3225:52;719:10:10;3258:8:2;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:2;;719:10:10;3784:20:2;;:60;;-1:-1:-1;3808:36:2;3825:4;719:10:10;3351:166:2;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:2;;10288:2:13;3763:148:2;;;10270:21:13;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:13;;;10410:39;10466:19;;3763:148:2;10086:405:13;3763:148:2;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:2;;10698:2:13;6266:81:2;;;10680:21:13;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:13;;;10820:38;10875:19;;6266:81:2;10496:404:13;6266:81:2;-1:-1:-1;;;;;6365:16:2;;6357:66;;;;-1:-1:-1;;;6357:66:2;;;;;;;:::i;:::-;719:10:10;6434:16:2;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:2;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:2;;;;6732:76;;;;-1:-1:-1;;;6732:76:2;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:2;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:2;6997:4;-1:-1:-1;;;;;6973:47:2;6987:8;-1:-1:-1;;;;;6973:47:2;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:2;:5;-1:-1:-1;;;;;12215:17:2;;12207:71;;;;-1:-1:-1;;;12207:71:2;;12527:2:13;12207:71:2;;;12509:21:13;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:13;;;12649:39;12705:19;;12207:71:2;12325:405:13;12207:71:2;-1:-1:-1;;;;;12288:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:2;;;;;;;;;;12349:41;;1159::13;;;12349::2;;1132:18:13;12349:41:2;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:2;;5098:66;;;;-1:-1:-1;;;5098:66:2;;;;;;;:::i;:::-;719:10:10;5217:96:2;719:10:10;5248:4:2;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:2;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:2;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:2;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:2;;;12909:25:13;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5590:46:2;;;;;;;;;;;;;;12882:18:13;5590:46:2;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:2;;1087:20:9;1133:8;14510:558:2;;14549:79;;-1:-1:-1;;;14549:79:2;;-1:-1:-1;;;;;14549:43:2;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:2;;;;;;;;-1:-1:-1;;14549:79:2;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:2;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:2;;15136:2:13;14981:62:2;;;15118:21:13;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:13;;;15258:50;15325:19;;14981:62:2;14934:416:13;14545:513:2;-1:-1:-1;;;;;;14707:60:2;;-1:-1:-1;;;14707:60:2;14703:157;;14791:50;;-1:-1:-1;;;14791:50:2;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:2;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:2:o;13551:725::-;-1:-1:-1;;;;;13758:13:2;;1087:20:9;1133:8;13754:516:2;;13793:72;;-1:-1:-1;;;13793:72:2;;-1:-1:-1;;;;;13793:38:2;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:2;;;;;;;;-1:-1:-1;;13793:72:2;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:2;;-1:-1:-1;;;13914:55:2;13910:152;;13993:50;;-1:-1:-1;;;13993:50:2;;;;;;;:::i;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:13:o;633:131::-;-1:-1:-1;;;;;;707:32:13;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:13:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:13;;1211:180;-1:-1:-1;1211:180:13:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:13;1829:15;-1:-1:-1;;1825:29:13;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:13:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:13;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:13:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:13;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:13;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:13;2672:724;-1:-1:-1;;;;;;2672:724:13:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:13;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:13:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:13;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:13;;5952:32;;-1:-1:-1;;5996:16:13;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:13;;6122:435;-1:-1:-1;;;;;6122:435:13:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;10006:17;;;10003:43;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:13;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:13;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:13;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:13;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:13:o;12988:827::-;-1:-1:-1;;;;;13385:15:13;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:13:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:13;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:13;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:13;;14258:671;-1:-1:-1;;;;;14258:671:13:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:13;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:13;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1010200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2672",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "544",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1142,
									"end": 1146,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1134,
									"end": 1141,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1092,
									"end": 1154,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8002,
									"end": 8006,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8002,
									"end": 8015,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7936,
									"end": 8022,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1131,
									"end": 1133,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1128,
									"end": 1129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1125,
									"end": 1134,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1190,
									"end": 1191,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1185,
									"end": 1187,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1172,
									"end": 1178,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1183,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1188,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1157,
									"end": 1192,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1122,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1221,
									"end": 1227,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1233,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1317,
									"end": 1318,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1313,
									"end": 1325,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1372,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1435,
									"end": 1439,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1427,
									"end": 1433,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1423,
									"end": 1440,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1413,
									"end": 1440,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1488,
									"end": 1490,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1491,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1457,
									"end": 1475,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1454,
									"end": 1492,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1534,
									"end": 1544,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1529,
									"end": 1532,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1525,
									"end": 1545,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1515,
									"end": 1546,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1569,
									"end": 1573,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1559,
									"end": 1574,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1597,
									"end": 1601,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1594,
									"end": 1595,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1602,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1612,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1238,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 555,
									"end": 15275,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208971ed53abbc59e4191c224cf13110c5e955438df8999f67913d7ae954a3581764736f6c634300080d0033",
									".code": [
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "4E1273F4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "F242432A"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "FDD58E"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "2EB2C2D6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 15275,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3510,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8258,
											"end": 8260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8240,
											"end": 8261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8297,
											"end": 8299,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8277,
											"end": 8295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8300,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8336,
											"end": 8370,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A2062616C616E636520717565727920666F7220746865207A"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8387,
											"end": 8405,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8438,
											"end": 8457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2275,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2170,
											"end": 2398,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1415,
											"end": 1467,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1358,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1358,
											"end": 1519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1483,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1519,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1221,
											"end": 1526,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1985,
											"end": 1998,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2010,
											"end": 2021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1925,
											"end": 2028,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4290,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4270,
											"end": 4330,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4311,
											"end": 4315,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4294,
											"end": 4330,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9055,
											"end": 9057,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9037,
											"end": 9058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9094,
											"end": 9096,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9133,
											"end": 9167,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9113,
											"end": 9131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9106,
											"end": 9168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDDDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9202,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9177,
											"end": 9225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 8853,
											"end": 9267,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4249,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4439,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4045,
											"end": 4475,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2761,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 9272,
											"end": 9677,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2738,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2865,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2938,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2945,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2945,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2995,
											"end": 3003,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3006,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3011,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2985,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 2981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 2982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2966,
											"end": 3015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2906,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3043,
											"end": 3056,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 3063,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3268,
											"end": 3276,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3225,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3284,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3584,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3784,
											"end": 3844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3351,
											"end": 3517,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3808,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10288,
											"end": 10290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10270,
											"end": 10291,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10307,
											"end": 10325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10300,
											"end": 10330,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10366,
											"end": 10400,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10410,
											"end": 10449,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10466,
											"end": 10485,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10086,
											"end": 10491,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3763,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3961,
											"end": 3965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3921,
											"end": 3966,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6302,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6274,
											"end": 6302,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10698,
											"end": 10700,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10680,
											"end": 10701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10739,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10710,
											"end": 10740,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10776,
											"end": 10810,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10756,
											"end": 10774,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 10811,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10827,
											"end": 10845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10820,
											"end": 10858,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10875,
											"end": 10894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 10496,
											"end": 10900,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 6266,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6365,
											"end": 6381,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 6357,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6450,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6581,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6567,
											"end": 6581,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6618,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6635,
											"end": 6649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6659,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6677,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6712,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6718,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6740,
											"end": 6761,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 6732,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6869,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6872,
											"end": 6892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6920,
											"end": 6947,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6583,
											"end": 6586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6547,
											"end": 6958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7003,
											"end": 7005,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 6995,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 7007,
											"end": 7010,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7019,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6973,
											"end": 7020,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7067,
											"end": 7075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7085,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7105,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7031,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6256,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6068,
											"end": 7113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12224,
											"end": 12232,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12215,
											"end": 12232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12527,
											"end": 12529,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12509,
											"end": 12530,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12566,
											"end": 12568,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12546,
											"end": 12564,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12539,
											"end": 12569,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12605,
											"end": 12639,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12578,
											"end": 12640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12649,
											"end": 12688,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12705,
											"end": 12724,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12325,
											"end": 12730,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 12207,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12306,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12323,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12288,
											"end": 12334,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12349,
											"end": 12390,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12074,
											"end": 12397,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5122,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5098,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5256,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5258,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5258,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5281,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5281,
											"end": 5306,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5217,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5324,
											"end": 5343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5346,
											"end": 5365,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5383,
											"end": 5404,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5375,
											"end": 5451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5498,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5564,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5507,
											"end": 5527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5547,
											"end": 5574,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12909,
											"end": 12934,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12943,
											"end": 12977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5590,
											"end": 5636,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5678,
											"end": 5686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5698,
											"end": 5700,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5710,
											"end": 5714,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5647,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5647,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5088,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4925,
											"end": 5722,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 14282,
											"end": 15074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14514,
											"end": 14527,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 14510,
											"end": 15068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 14549,
											"end": 14592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14593,
											"end": 14601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14603,
											"end": 14607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14609,
											"end": 14612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14614,
											"end": 14621,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A0"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14934,
											"end": 14940,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 14927,
											"end": 14941,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15136,
											"end": 15138,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15139,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15175,
											"end": 15177,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15155,
											"end": 15173,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15148,
											"end": 15178,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15214,
											"end": 15248,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15212,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15187,
											"end": 15249,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15265,
											"end": 15283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15258,
											"end": 15308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 15325,
											"end": 15344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14981,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14934,
											"end": 15350,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 14545,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14707,
											"end": 14767,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 14703,
											"end": 14860,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15213,
											"end": 15214,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15146,
											"end": 15162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15174,
											"end": 15196,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15174,
											"end": 15215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15236,
											"end": 15243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15231,
											"end": 15232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15243,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15261,
											"end": 15266,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15273,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 13551,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13758,
											"end": 13771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 1133,
											"end": 1141,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 13754,
											"end": 14270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 13793,
											"end": 13831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13846,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13848,
											"end": 13850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13852,
											"end": 13858,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 13793,
											"end": 13865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 13789,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13914,
											"end": 13969,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 13910,
											"end": 14062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 13993,
											"end": 14043,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1725,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1781,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1763,
											"end": 1766,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1775,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1755,
											"end": 1782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1786,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 1709,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1850,
											"end": 1852,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1829,
											"end": 1844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1854,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1816,
											"end": 1855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1862,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1396,
											"end": 1868,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1873,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2004,
											"end": 2025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1985,
											"end": 1989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2083,
											"end": 2085,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 2042,
											"end": 2087,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2098,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2169,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2340,
											"end": 2342,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2344,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2305,
											"end": 2345,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2394,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2418,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2357,
											"end": 2419,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2354,
											"end": 2442,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2422,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2460,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2230,
											"end": 2479,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2595,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2596,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2563,
											"end": 2619,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2654,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2636,
											"end": 2661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2667,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2782,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2783,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2787,
											"end": 2799,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2746,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2820,
											"end": 2840,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2882,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2956,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 2957,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2966,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3120,
											"end": 3130,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3108,
											"end": 3131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3104,
											"end": 3136,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3081,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3148,
											"end": 3163,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3174,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3145,
											"end": 3180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3212,
											"end": 3214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3240,
											"end": 3246,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3235,
											"end": 3238,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3323,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3224,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3390,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 3396,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3477,
											"end": 3494,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3463,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3550,
											"end": 3556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3537,
											"end": 3557,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3594,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3574,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3595,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3566,
											"end": 3618,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3691,
											"end": 3718,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3724,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3659,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3742,
											"end": 3748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 3753,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3796,
											"end": 3799,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3789,
											"end": 3793,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3784,
											"end": 3786,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3772,
											"end": 3787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3768,
											"end": 3794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3800,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 3762,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3879,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3855,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3839,
											"end": 3856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3880,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3921,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3889,
											"end": 3926,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3910,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3401,
											"end": 3956,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4129,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4131,
											"end": 4137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4186,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4218,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4215,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 4168,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4240,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4288,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 4380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4400,
											"end": 4418,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4443,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4444,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4455,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4459,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4427,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4480,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4470,
											"end": 4541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4594,
											"end": 4596,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4583,
											"end": 4592,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4566,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4550,
											"end": 4598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4607,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 4717,
											"end": 4724,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4714,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4704,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4715,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 4662,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4652,
											"end": 4725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4750,
											"end": 4783,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4795,
											"end": 4811,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4824,
											"end": 4825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 4847,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 4904,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5090,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5085,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5063,
											"end": 5086,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5059,
											"end": 5091,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5056,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5131,
											"end": 5154,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5191,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5200,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5268,
											"end": 5274,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5253,
											"end": 5275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5243,
											"end": 5275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5298,
											"end": 5311,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5294,
											"end": 5321,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5325,
											"end": 5337,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5284,
											"end": 5339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5371,
											"end": 5373,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 5416,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 5500,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5566,
											"end": 5584,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5654,
											"end": 5655,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5642,
											"end": 5661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5666,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5600,
											"end": 5615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5697,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5700,
											"end": 5712,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5675,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5745,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5765,
											"end": 5768,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5777,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 5855,
											"end": 5858,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 5836,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5824,
											"end": 5860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5799,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5880,
											"end": 5892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5754,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5965,
											"end": 5983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5952,
											"end": 5984,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6012,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6027,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5993,
											"end": 6029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6103,
											"end": 6110,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6077,
											"end": 6101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 6048,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 6117,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6218,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6207,
											"end": 6219,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6228,
											"end": 6247,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6266,
											"end": 6270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6286,
											"end": 6298,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6298,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6330,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6321,
											"end": 6335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6371,
											"end": 6384,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6451,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6484,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6399,
											"end": 6400,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6392,
											"end": 6401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 6363,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6548,
											"end": 6551,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6122,
											"end": 6557,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 6562,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6741,
											"end": 6743,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6723,
											"end": 6744,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 6813,
											"end": 6815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6761,
											"end": 6817,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6954,
											"end": 6956,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6951,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6933,
											"end": 6940,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6952,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6957,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 6922,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6993,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6983,
											"end": 7022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7074,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7044,
											"end": 7076,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7119,
											"end": 7124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7112,
											"end": 7125,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7126,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7095,
											"end": 7127,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7131,
											"end": 7143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 7085,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7175,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7367,
											"end": 7376,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7348,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7430,
											"end": 7432,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7419,
											"end": 7428,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7415,
											"end": 7433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 7396,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7386,
											"end": 7434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7440,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 7445,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7581,
											"end": 7587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7609,
											"end": 7632,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7605,
											"end": 7638,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7602,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7693,
											"end": 7702,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 7674,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7664,
											"end": 7703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7756,
											"end": 7758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7754,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7741,
											"end": 7759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7722,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7712,
											"end": 7760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7796,
											"end": 7805,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7779,
											"end": 7811,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7769,
											"end": 7811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7860,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7830,
											"end": 7862,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7820,
											"end": 7862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7913,
											"end": 7916,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7898,
											"end": 7917,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7885,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7960,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 7975,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 7927,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 8037,
											"end": 8044,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8017,
											"end": 8026,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8013,
											"end": 8035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 7996,
											"end": 8045,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8543,
											"end": 8555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8602,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8665,
											"end": 8669,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8657,
											"end": 8663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8653,
											"end": 8670,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8643,
											"end": 8670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 8611,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 8721,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8687,
											"end": 8705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8722,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8764,
											"end": 8774,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8755,
											"end": 8775,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8752,
											"end": 8753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8776,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8789,
											"end": 8804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8827,
											"end": 8831,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8832,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8681,
											"end": 8842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8468,
											"end": 8848,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 9682,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9753,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9734,
											"end": 9754,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9724,
											"end": 9755,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9803,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 9814,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9875,
											"end": 9885,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9870,
											"end": 9873,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9866,
											"end": 9886,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9887,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9910,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9903,
											"end": 9904,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9896,
											"end": 9911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9930,
											"end": 9934,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9935,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10006,
											"end": 10023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 10003,
											"end": 10046,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 10026,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9946,
											"end": 10081,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11107,
											"end": 11109,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11089,
											"end": 11110,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11146,
											"end": 11148,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11126,
											"end": 11144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11119,
											"end": 11149,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11185,
											"end": 11219,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 11180,
											"end": 11182,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11165,
											"end": 11183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11220,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11253,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11236,
											"end": 11254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11229,
											"end": 11264,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11299,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 11300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10905,
											"end": 11306,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11513,
											"end": 11515,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11554,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11532,
											"end": 11550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11525,
											"end": 11555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11591,
											"end": 11625,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11586,
											"end": 11588,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11564,
											"end": 11626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11657,
											"end": 11659,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11635,
											"end": 11675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11692,
											"end": 11711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11717,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11762,
											"end": 11765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11789,
											"end": 11795,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 11780,
											"end": 11819,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 11799,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11722,
											"end": 11850,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12101,
											"end": 12110,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12115,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12190,
											"end": 12192,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12179,
											"end": 12188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12175,
											"end": 12193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 12138,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12251,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12252,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12225,
											"end": 12227,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12223,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12203,
											"end": 12253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12299,
											"end": 12305,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 12270,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12262,
											"end": 12314,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11855,
											"end": 12320,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13400,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13367,
											"end": 13401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13437,
											"end": 13452,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13417,
											"end": 13435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13410,
											"end": 13453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13347,
											"end": 13350,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 13484,
											"end": 13486,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13469,
											"end": 13487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13462,
											"end": 13493,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13314,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13553,
											"end": 13572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13545,
											"end": 13551,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 13516,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13613,
											"end": 13619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13609,
											"end": 13631,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13604,
											"end": 13606,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13593,
											"end": 13602,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13589,
											"end": 13607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13582,
											"end": 13632,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13684,
											"end": 13690,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 13655,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13641,
											"end": 13699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13748,
											"end": 13757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13740,
											"end": 13746,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13758,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13730,
											"end": 13733,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13715,
											"end": 13734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13708,
											"end": 13759,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 13802,
											"end": 13808,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13794,
											"end": 13800,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 13776,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13768,
											"end": 13809,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12988,
											"end": 13815,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 13820,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13889,
											"end": 13895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13944,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13930,
											"end": 13939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13921,
											"end": 13928,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13917,
											"end": 13940,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13913,
											"end": 13945,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13958,
											"end": 13959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13955,
											"end": 13956,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13948,
											"end": 13960,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13910,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13990,
											"end": 13999,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13984,
											"end": 14000,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 14033,
											"end": 14038,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 14009,
											"end": 14039,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14133,
											"end": 14149,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14130,
											"end": 14153,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14194,
											"end": 14195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14191,
											"end": 14192,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14176,
											"end": 14199,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14234,
											"end": 14235,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14228,
											"end": 14236,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14223,
											"end": 14226,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 14127,
											"end": 14247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14074,
											"end": 14253,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14297,
											"end": 14300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14339,
											"end": 14343,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14321,
											"end": 14337,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14318,
											"end": 14344,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 14315,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14381,
											"end": 14383,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14446,
											"end": 14462,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14442,
											"end": 14467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14418,
											"end": 14468,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 14497,
											"end": 14501,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14491,
											"end": 14502,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14521,
											"end": 14537,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14556,
											"end": 14574,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14627,
											"end": 14629,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14620,
											"end": 14624,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14612,
											"end": 14618,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14608,
											"end": 14625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14605,
											"end": 14630,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14600,
											"end": 14602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14592,
											"end": 14598,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14589,
											"end": 14603,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14631,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14634,
											"end": 14639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14671,
											"end": 14677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14665,
											"end": 14669,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14661,
											"end": 14678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14650,
											"end": 14678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14707,
											"end": 14710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14701,
											"end": 14711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14723,
											"end": 14737,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 14720,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14824,
											"end": 14826,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14805,
											"end": 14821,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14795,
											"end": 14822,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14791,
											"end": 14827,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14784,
											"end": 14788,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14775,
											"end": 14781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14770,
											"end": 14773,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14766,
											"end": 14782,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14762,
											"end": 14789,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14759,
											"end": 14828,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14831,
											"end": 14836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 14756,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 14898,
											"end": 14902,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14877,
											"end": 14896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 14903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14867,
											"end": 14871,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 14847,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14920,
											"end": 14923,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14258,
											"end": 14929,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15557,
											"end": 15559,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15539,
											"end": 15560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15596,
											"end": 15598,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15576,
											"end": 15594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15569,
											"end": 15599,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15669,
											"name": "PUSH",
											"source": 13,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15630,
											"end": 15632,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15615,
											"end": 15633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15608,
											"end": 15670,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15701,
											"end": 15703,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15686,
											"end": 15704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15679,
											"end": 15717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15749,
											"end": 15752,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15734,
											"end": 15753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15355,
											"end": 15759,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16061,
											"end": 16076,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16077,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16113,
											"end": 16128,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16108,
											"end": 16110,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16086,
											"end": 16129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16160,
											"end": 16162,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16145,
											"end": 16163,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16138,
											"end": 16172,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16203,
											"end": 16205,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16188,
											"end": 16206,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16181,
											"end": 16215,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16026,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 16246,
											"end": 16249,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16250,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16224,
											"end": 16256,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16299,
											"end": 16318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16291,
											"end": 16297,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 16273,
											"end": 16319,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16265,
											"end": 16319,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15764,
											"end": 16325,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x04d6d1342ece664085921a4fabc928a7bcf1cf2873fa81780f61a54dc2b9b66e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6d2b052effa2e9a7479b0fea53b46f4cbbd91947848ef632aadad20ae2e9275\",\"dweb:/ipfs/QmcZp7f5cooGZrhHE8RC1yQR53RFZt19d5fyVqNfbHmPgY\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 396,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 402,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 404,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2034  _name */\n  0x03\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2029:2042  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2059  _symbol */\n  0x04\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2069  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1963:2076  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":1388:11804  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3316:3328  _totalSupply */\n      sload(0x02)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3335  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3078:3169  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3160:3162  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3078:3169  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3467:3474  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3511  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3393:3518  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4040:4047  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4077  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4084  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4066:4093  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3951:4100  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2195:2208  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2227:2232  _name */\n      0x03\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2220:2232  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2141:2239  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4321:4325  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4360:4367  spender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4369:4375  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4345  _approve */\n      tag_74\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4337:4376  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4393:4397  true */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4238:4404  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n    tag_32:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5007:5011  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5033:5039  sender */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5041:5050  recipient */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5052:5058  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5032  _transfer */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5023:5059  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      dup5\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5070:5094  uint256 currentAllowance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5108  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5116  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5097:5130  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5148:5174  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2974:2995   */\n      mstore\n        /* \"#utility.yul\":3031:3033   */\n      0x28\n        /* \"#utility.yul\":3011:3029   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3004:3034   */\n      mstore\n        /* \"#utility.yul\":3070:3104   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3050:3068   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3043:3105   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3121:3139   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3114:3152   */\n      mstore\n        /* \"#utility.yul\":3169:3188   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5140:5219  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5262:5268  sender */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5303:5309  amount */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5300  currentAllowance */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5284:5309  currentAllowance - amount */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5261  _approve */\n      tag_74\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5253:5310  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5342  true */\n      0x01\n      swap5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4871:5349  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5744:5956  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5891  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5905  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5914  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5832:5836  bool */\n      swap1\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5871:5878  spender */\n      dup6\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5917:5927  addedValue */\n      dup7\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5880:5927  _allowances[_msgSender()][spender] + addedValue */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5856  _approve */\n      tag_74\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5928  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2352:2454  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2408:2421  string memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2440:2447  _symbol */\n      0x04\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2433:2447  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6536:6540  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6590  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6604  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6579:6613  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6631:6666  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3613:3634   */\n      mstore\n        /* \"#utility.yul\":3670:3672   */\n      0x25\n        /* \"#utility.yul\":3650:3668   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3643:3673   */\n      mstore\n        /* \"#utility.yul\":3709:3743   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3689:3707   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3682:3744   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3760:3778   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3753:3788   */\n      mstore\n        /* \"#utility.yul\":3805:3824   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3429:3830   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6623:6708  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_101:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6765:6772  spender */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6793:6808  subtractedValue */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6790  currentAllowance */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6774:6808  currentAllowance - subtractedValue */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6750  _approve */\n      tag_74\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6742:6809  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6837:6841  true */\n      0x01\n      swap4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6443:6848  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3893  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3807:3811  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3847:3856  recipient */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3858:3864  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3832  _transfer */\n      tag_78\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3823:3865  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10150:10169  owner != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4037:4039   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4019:4040   */\n      mstore\n        /* \"#utility.yul\":4076:4078   */\n      0x24\n        /* \"#utility.yul\":4056:4074   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4049:4079   */\n      mstore\n        /* \"#utility.yul\":4115:4149   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4095:4113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4088:4150   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4166:4184   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4159:4193   */\n      mstore\n        /* \"#utility.yul\":4210:4229   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3835:4235   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10142:10210  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10228:10249  spender != address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4442:4444   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4424:4445   */\n      mstore\n        /* \"#utility.yul\":4481:4483   */\n      0x22\n        /* \"#utility.yul\":4461:4479   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4454:4484   */\n      mstore\n        /* \"#utility.yul\":4520:4554   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4500:4518   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4493:4555   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4571:4589   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4564:4596   */\n      mstore\n        /* \"#utility.yul\":4613:4632   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4240:4638   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10220:10288  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10310  _allowances */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10317  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10326  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10335  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10350:10382  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10019:10389  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7457:7477  sender != address(0) */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4845:4847   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4827:4848   */\n      mstore\n        /* \"#utility.yul\":4884:4886   */\n      0x25\n        /* \"#utility.yul\":4864:4882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4857:4887   */\n      mstore\n        /* \"#utility.yul\":4923:4957   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4903:4921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4896:4958   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4974:4992   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4967:5002   */\n      mstore\n        /* \"#utility.yul\":5019:5038   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4643:5044   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7519  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7537:7560  recipient != address(0) */\n      dup3\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5251:5253   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5233:5254   */\n      mstore\n        /* \"#utility.yul\":5290:5292   */\n      0x23\n        /* \"#utility.yul\":5270:5288   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5263:5293   */\n      mstore\n        /* \"#utility.yul\":5329:5363   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5309:5327   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5302:5364   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5380:5398   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5373:5406   */\n      mstore\n        /* \"#utility.yul\":5423:5442   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":5049:5448   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7529:7600  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      dup4\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7669:7690  uint256 senderBalance */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7693:7710  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7751  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5655:5657   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5637:5658   */\n      mstore\n        /* \"#utility.yul\":5694:5696   */\n      0x26\n        /* \"#utility.yul\":5674:5692   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5667:5697   */\n      mstore\n        /* \"#utility.yul\":5733:5767   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5713:5731   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5706:5768   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5784:5802   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5777:5813   */\n      mstore\n        /* \"#utility.yul\":5830:5849   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5453:5855   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7720:7794  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7845  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7848:7870  senderBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7870  _balances[sender] = senderBalance - amount */\n      swap1\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7910  _balances[recipient] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7828:7837  _balances */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_131\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7870  amount */\n      dup5\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7890:7920  _balances[recipient] += amount */\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7953:7962  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7945:7951  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7964:7970  amount */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7936:7971  Transfer(sender, recipient, amount) */\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:8035  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7322:8035  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_140:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_140)\n    tag_142:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_143:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_137:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_145:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_147:\n        /* \"#utility.yul\":962:991   */\n      tag_148\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_137\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_152:\n        /* \"#utility.yul\":1612:1641   */\n      tag_153\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_154\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_137\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_157:\n        /* \"#utility.yul\":2100:2129   */\n      tag_158\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_137\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_160:\n        /* \"#utility.yul\":2308:2337   */\n      tag_161\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_137\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_162\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_137\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_164:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3199:3424   */\n    tag_91:\n        /* \"#utility.yul\":3239:3242   */\n      0x00\n        /* \"#utility.yul\":3270:3271   */\n      dup3\n        /* \"#utility.yul\":3266:3272   */\n      not\n        /* \"#utility.yul\":3263:3264   */\n      dup3\n        /* \"#utility.yul\":3260:3273   */\n      gt\n        /* \"#utility.yul\":3257:3393   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3315:3325   */\n      0x4e487b71\n        /* \"#utility.yul\":3310:3313   */\n      0xe0\n        /* \"#utility.yul\":3306:3326   */\n      shl\n        /* \"#utility.yul\":3303:3304   */\n      0x00\n        /* \"#utility.yul\":3296:3327   */\n      mstore\n        /* \"#utility.yul\":3350:3354   */\n      0x11\n        /* \"#utility.yul\":3347:3348   */\n      0x04\n        /* \"#utility.yul\":3340:3355   */\n      mstore\n        /* \"#utility.yul\":3378:3382   */\n      0x24\n        /* \"#utility.yul\":3375:3376   */\n      0x00\n        /* \"#utility.yul\":3368:3383   */\n      revert\n        /* \"#utility.yul\":3257:3393   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":3409:3418   */\n      add\n      swap1\n        /* \"#utility.yul\":3199:3424   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220250fb4b49eb72c2b7d25488c70047dc2ec56b2bc5b42c441f4a87929398954da64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1689": {
									"entryPoint": null,
									"id": 1689,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:13"
															},
															"nodeType": "YulIf",
															"src": "220:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:13"
															},
															"nodeType": "YulIf",
															"src": "353:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:13"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:13"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:13"
															},
															"nodeType": "YulIf",
															"src": "536:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:13"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:13"
															},
															"nodeType": "YulIf",
															"src": "698:53:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:13"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:13"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:13",
																"statements": []
															},
															"src": "779:133:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:13"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:13"
															},
															"nodeType": "YulIf",
															"src": "921:80:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:13",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:13",
														"type": ""
													}
												],
												"src": "146:885:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:13"
															},
															"nodeType": "YulIf",
															"src": "1164:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:13"
															},
															"nodeType": "YulIf",
															"src": "1301:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:13"
															},
															"nodeType": "YulIf",
															"src": "1474:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:13",
														"type": ""
													}
												],
												"src": "1036:562:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:13"
															},
															"nodeType": "YulIf",
															"src": "1746:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:13"
															},
															"nodeType": "YulIf",
															"src": "1816:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:13",
														"type": ""
													}
												],
												"src": "1603:380:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b5438038062000b548339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b6108c380620002916000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610867565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610867565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b60208210810361086157634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088857634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220250fb4b49eb72c2b7d25488c70047dc2ec56b2bc5b42c441f4a87929398954da64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB54 CODESIZE SUB DUP1 PUSH3 0xB54 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C3 DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xF 0xB4 0xB4 SWAP15 0xB7 0x2C 0x2B PUSH30 0x25488C70047DC2EC56B2BC5B42C441F4A87929398954DA64736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "1388:10416:6:-:0;;;1963:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:6;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;1388:10416;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1388:10416:6;;;-1:-1:-1;1388:10416:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:13:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:13;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1388:10416:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_2189": {
									"entryPoint": null,
									"id": 2189,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2167": {
									"entryPoint": 1038,
									"id": 2167,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2178": {
									"entryPoint": null,
									"id": 2178,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_2602": {
									"entryPoint": null,
									"id": 2602,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_1994": {
									"entryPoint": 1330,
									"id": 1994,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_1782": {
									"entryPoint": null,
									"id": 1782,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1803": {
									"entryPoint": 600,
									"id": 1803,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1743": {
									"entryPoint": null,
									"id": 1743,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_1719": {
									"entryPoint": null,
									"id": 1719,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1917": {
									"entryPoint": 872,
									"id": 1917,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_1878": {
									"entryPoint": 797,
									"id": 1878,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1699": {
									"entryPoint": 454,
									"id": 1699,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_1709": {
									"entryPoint": 857,
									"id": 1709,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_1729": {
									"entryPoint": null,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1851": {
									"entryPoint": 622,
									"id": 1851,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1764": {
									"entryPoint": 1025,
									"id": 1764,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5857:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:13",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:13"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:13"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:13"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:13",
																"statements": []
															},
															"src": "294:140:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:13"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:13",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:13"
															},
															"nodeType": "YulIf",
															"src": "443:91:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:13",
														"type": ""
													}
												],
												"src": "14:597:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:13"
															},
															"nodeType": "YulIf",
															"src": "713:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:13",
														"type": ""
													}
												],
												"src": "616:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:13"
															},
															"nodeType": "YulIf",
															"src": "891:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:13",
														"type": ""
													}
												],
												"src": "794:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:13",
														"type": ""
													}
												],
												"src": "1053:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:13",
														"type": ""
													}
												],
												"src": "1245:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:13"
															},
															"nodeType": "YulIf",
															"src": "1541:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:13",
														"type": ""
													}
												],
												"src": "1427:328:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:13",
														"type": ""
													}
												],
												"src": "1760:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:13"
															},
															"nodeType": "YulIf",
															"src": "2029:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:13",
														"type": ""
													}
												],
												"src": "1949:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:13"
															},
															"nodeType": "YulIf",
															"src": "2237:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:13",
														"type": ""
													}
												],
												"src": "2140:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:13"
															},
															"nodeType": "YulIf",
															"src": "2548:61:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:13"
															},
															"nodeType": "YulIf",
															"src": "2618:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:13",
														"type": ""
													}
												],
												"src": "2405:380:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2964:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2974:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3054:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3065:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3050:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3050:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3070:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3043:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3136:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:18:13"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3141:10:13",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3114:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3161:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3173:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3184:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3161:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2941:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2955:4:13",
														"type": ""
													}
												],
												"src": "2790:404:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3247:177:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3282:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3303:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3310:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3315:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3306:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3306:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3296:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3296:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3296:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3347:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3350:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3340:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3340:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3340:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3375:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3378:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3368:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3368:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3368:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3263:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3270:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3260:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3260:13:13"
															},
															"nodeType": "YulIf",
															"src": "3257:136:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3413:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3416:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3402:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3230:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3233:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3239:3:13",
														"type": ""
													}
												],
												"src": "3199:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3620:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3631:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3654:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3665:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3643:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3643:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:18:13"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3709:34:13",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3764:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3775:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3760:18:13"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3780:7:13",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3753:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3797:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3820:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3797:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3580:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3594:4:13",
														"type": ""
													}
												],
												"src": "3429:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4026:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4037:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4019:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4060:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4056:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4056:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4076:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4099:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4110:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4095:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4095:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4115:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4088:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4088:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4170:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4181:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4166:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4166:18:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4186:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4159:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4202:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4225:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3986:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4000:4:13",
														"type": ""
													}
												],
												"src": "3835:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4414:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4431:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4442:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4424:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4465:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4481:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4454:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4515:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4500:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4500:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4520:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4586:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:18:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4591:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4564:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4564:32:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4605:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4617:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4628:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4613:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4605:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4391:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4405:4:13",
														"type": ""
													}
												],
												"src": "4240:398:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4817:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4834:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4845:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4827:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4827:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4827:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4868:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4879:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4884:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4857:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4857:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4918:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4903:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4903:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4923:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4896:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4896:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4896:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4994:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4967:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5011:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5023:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5034:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5011:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4794:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4808:4:13",
														"type": ""
													}
												],
												"src": "4643:401:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:225:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5240:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5251:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5233:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5233:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5274:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5285:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5290:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5313:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5324:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5329:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5302:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5400:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5373:33:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5415:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5427:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5438:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5423:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5415:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5200:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5214:4:13",
														"type": ""
													}
												],
												"src": "5049:399:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5655:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5678:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5689:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5674:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5674:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5694:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5667:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5667:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5717:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5728:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5713:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5733:34:13",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5706:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5706:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5706:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5799:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5784:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5784:18:13"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5804:8:13",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5777:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5822:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5834:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5845:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5830:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5830:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5822:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5604:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5618:4:13",
														"type": ""
													}
												],
												"src": "5453:402:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c39190610701565b60405180910390f35b6100df6100da366004610772565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461079c565b61026e565b604051601281526020016100c3565b6100df610131366004610772565b61031d565b6100f36101443660046107d8565b6001600160a01b031660009081526020819052604090205490565b6100b6610359565b6100df610175366004610772565b610368565b6100df610188366004610772565b610401565b6100f361019b3660046107fa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061082d565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061082d565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b600061026533848461040e565b50600192915050565b600061027b848484610532565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b610312853385840361040e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610265918590610354908690610867565b61040e565b6060600480546101d59061082d565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ea5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103f7338585840361040e565b5060019392505050565b6000610265338484610532565b6001600160a01b0383166104705760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906106a7908490610867565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f391815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561072e57858101830151858201604001528201610712565b81811115610740576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461076d57600080fd5b919050565b6000806040838503121561078557600080fd5b61078e83610756565b946020939093013593505050565b6000806000606084860312156107b157600080fd5b6107ba84610756565b92506107c860208501610756565b9150604084013590509250925092565b6000602082840312156107ea57600080fd5b6107f382610756565b9392505050565b6000806040838503121561080d57600080fd5b61081683610756565b915061082460208401610756565b90509250929050565b600181811c9082168061084157607f821691505b60208210810361086157634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561088857634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220250fb4b49eb72c2b7d25488c70047dc2ec56b2bc5b42c441f4a87929398954da64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x701 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x359 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x401 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x201 SWAP1 PUSH2 0x82D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x24E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x223 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x24E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x231 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x312 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x265 SWAP2 DUP6 SWAP1 PUSH2 0x354 SWAP1 DUP7 SWAP1 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x82D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x3F7 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x40E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 CALLER DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x670 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A7 SWAP1 DUP5 SWAP1 PUSH2 0x867 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x712 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x76D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x785 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78E DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BA DUP5 PUSH2 0x756 JUMP JUMPDEST SWAP3 POP PUSH2 0x7C8 PUSH1 0x20 DUP6 ADD PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F3 DUP3 PUSH2 0x756 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x816 DUP4 PUSH2 0x756 JUMP JUMPDEST SWAP2 POP PUSH2 0x824 PUSH1 0x20 DUP5 ADD PUSH2 0x756 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x841 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x861 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xF 0xB4 0xB4 SWAP15 0xB7 0x2C 0x2B PUSH30 0x25488C70047DC2EC56B2BC5B42C441F4A87929398954DA64736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "1388:10416:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:13;;1211:22;1193:41;;1181:2;1166:18;4238:166:6;1053:187:13;3229:106:6;3316:12;;3229:106;;;1391:25:13;;;1379:2;1364:18;3229:106:6;1245:177:13;4871:478:6;;;;;;:::i;:::-;;:::i;3078:91::-;;;3160:2;1902:36:13;;1890:2;1875:18;3078:91:6;1760:184:13;5744:212:6;;;;;;:::i;:::-;;:::i;3393:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3493:18:6;3467:7;3493:18;;;;;;;;;;;;3393:125;2352:102;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;3951:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4066:18:6;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149;2141:98;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;719:10:10;4360:7:6;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:6;4238:166;;;;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:6;;5070:24;5097:19;;;:11;:19;;;;;;;;719:10:10;5097:33:6;;;;;;;;5148:26;;;;5140:79;;;;-1:-1:-1;;;5140:79:6;;2992:2:13;5140:79:6;;;2974:21:13;3031:2;3011:18;;;3004:30;3070:34;3050:18;;;3043:62;-1:-1:-1;;;3121:18:13;;;3114:38;3169:19;;5140:79:6;;;;;;;;;5253:57;5262:6;719:10:10;5303:6:6;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:6;;4871:478;-1:-1:-1;;;;4871:478:6:o;5744:212::-;719:10:10;5832:4:6;5880:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5880:34:6;;;;;;;;;;5832:4;;5848:80;;5871:7;;5880:47;;5917:10;;5880:47;:::i;:::-;5848:8;:80::i;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;719:10:10;6536:4:6;6579:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6579:34:6;;;;;;;;;;6631:35;;;;6623:85;;;;-1:-1:-1;;;6623:85:6;;3631:2:13;6623:85:6;;;3613:21:13;3670:2;3650:18;;;3643:30;3709:34;3689:18;;;3682:62;-1:-1:-1;;;3760:18:13;;;3753:35;3805:19;;6623:85:6;3429:401:13;6623:85:6;6742:67;719:10:10;6765:7:6;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:6;;6443:405;-1:-1:-1;;;6443:405:6:o;3721:172::-;3807:4;3823:42;719:10:10;3847:9:6;3858:6;3823:9;:42::i;10019:370::-;-1:-1:-1;;;;;10150:19:6;;10142:68;;;;-1:-1:-1;;;10142:68:6;;4037:2:13;10142:68:6;;;4019:21:13;4076:2;4056:18;;;4049:30;4115:34;4095:18;;;4088:62;-1:-1:-1;;;4166:18:13;;;4159:34;4210:19;;10142:68:6;3835:400:13;10142:68:6;-1:-1:-1;;;;;10228:21:6;;10220:68;;;;-1:-1:-1;;;10220:68:6;;4442:2:13;10220:68:6;;;4424:21:13;4481:2;4461:18;;;4454:30;4520:34;4500:18;;;4493:62;-1:-1:-1;;;4571:18:13;;;4564:32;4613:19;;10220:68:6;4240:398:13;10220:68:6;-1:-1:-1;;;;;10299:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10350:32;;1391:25:13;;;10350:32:6;;1364:18:13;10350:32:6;;;;;;;10019:370;;;:::o;7322:713::-;-1:-1:-1;;;;;7457:20:6;;7449:70;;;;-1:-1:-1;;;7449:70:6;;4845:2:13;7449:70:6;;;4827:21:13;4884:2;4864:18;;;4857:30;4923:34;4903:18;;;4896:62;-1:-1:-1;;;4974:18:13;;;4967:35;5019:19;;7449:70:6;4643:401:13;7449:70:6;-1:-1:-1;;;;;7537:23:6;;7529:71;;;;-1:-1:-1;;;7529:71:6;;5251:2:13;7529:71:6;;;5233:21:13;5290:2;5270:18;;;5263:30;5329:34;5309:18;;;5302:62;-1:-1:-1;;;5380:18:13;;;5373:33;5423:19;;7529:71:6;5049:399:13;7529:71:6;-1:-1:-1;;;;;7693:17:6;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:6;;5655:2:13;7720:74:6;;;5637:21:13;5694:2;5674:18;;;5667:30;5733:34;5713:18;;;5706:62;-1:-1:-1;;;5784:18:13;;;5777:36;5830:19;;7720:74:6;5453:402:13;7720:74:6;-1:-1:-1;;;;;7828:17:6;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:6;7945:6;-1:-1:-1;;;;;7936:35:6;;7964:6;7936:35;;;;1391:25:13;;1379:2;1364:18;;1245:177;7936:35:6;;;;;;;;7439:596;7322:713;;;:::o;14:597:13:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:13;574:15;-1:-1:-1;;570:29:13;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:13:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:13;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:13:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:13:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;3199:225::-;3239:3;3270:1;3266:6;3263:1;3260:13;3257:136;;;3315:10;3310:3;3306:20;3303:1;3296:31;3350:4;3347:1;3340:15;3378:4;3375:1;3368:15;3257:136;-1:-1:-1;3409:9:13;;3199:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "448600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24619",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "26954",
								"increaseAllowance(address,uint256)": "26934",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2029,
									"end": 2034,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2059,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2052,
									"end": 2069,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 2076,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 13
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1388,
									"end": 11804,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220250fb4b49eb72c2b7d25488c70047dc2ec56b2bc5b42c441f4a87929398954da64736f6c634300080d0033",
									".code": [
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 11804,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3078,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3518,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4077,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 4100,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2141,
											"end": 2239,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4337,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4404,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5007,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5023,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5070,
											"end": 5094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5108,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5130,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2995,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3034,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3104,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3043,
											"end": 3105,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5140,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5262,
											"end": 5268,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5253,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5253,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 5349,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5744,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5891,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5905,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5914,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5917,
											"end": 5927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 5880,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 5848,
											"end": 5928,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2352,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2440,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2433,
											"end": 2447,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6536,
											"end": 6540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6604,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6666,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3650,
											"end": 3668,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3682,
											"end": 3744,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3429,
											"end": 3830,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6623,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 6765,
											"end": 6772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6790,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6774,
											"end": 6808,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6742,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6742,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6837,
											"end": 6841,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6848,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3721,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3823,
											"end": 3865,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4039,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4040,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4078,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4079,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4115,
											"end": 4149,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4088,
											"end": 4150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4166,
											"end": 4184,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 4193,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4210,
											"end": 4229,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4210,
											"end": 4229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3835,
											"end": 4235,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 10142,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10228,
											"end": 10249,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4445,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4483,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4454,
											"end": 4484,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4520,
											"end": 4554,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4555,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4596,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4613,
											"end": 4632,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4613,
											"end": 4632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4240,
											"end": 4638,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 10220,
											"end": 10288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10310,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10326,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10299,
											"end": 10335,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10350,
											"end": 10382,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10019,
											"end": 10389,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7457,
											"end": 7477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4847,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4848,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4857,
											"end": 4887,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4923,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4896,
											"end": 4958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5002,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5019,
											"end": 5038,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5019,
											"end": 5038,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4643,
											"end": 5044,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7449,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7537,
											"end": 7560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5233,
											"end": 5254,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5290,
											"end": 5292,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5363,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5302,
											"end": 5364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5373,
											"end": 5406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5423,
											"end": 5442,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5049,
											"end": 5448,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 7529,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7669,
											"end": 7690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5657,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5694,
											"end": 5696,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5692,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5667,
											"end": 5697,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5733,
											"end": 5767,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5706,
											"end": 5768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5784,
											"end": 5802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5813,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5830,
											"end": 5849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 5453,
											"end": 5855,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 7720,
											"end": 7794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7845,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7870,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7828,
											"end": 7837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7864,
											"end": 7870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7890,
											"end": 7920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7936,
											"end": 7971,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7439,
											"end": 8035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7322,
											"end": 8035,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3270,
											"end": 3271,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3273,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3325,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3310,
											"end": 3313,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3306,
											"end": 3326,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3327,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3383,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 3257,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3424,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1660,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1666,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1668,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1670,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1672,
								"contract": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> nft/SignatureWithdrawERC20.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "nft/SignatureWithdrawERC20.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/SignatureWithdrawERC20.sol": {
				"ast": {
					"absolutePath": "nft/SignatureWithdrawERC20.sol",
					"exportedSymbols": {
						"Address": [
							2590
						],
						"ClaimERC20": [
							265
						],
						"Context": [
							2612
						],
						"ERC1155": [
							1466
						],
						"ERC165": [
							2636
						],
						"ERC20": [
							2190
						],
						"IERC1155": [
							1588
						],
						"IERC1155MetadataURI": [
							1644
						],
						"IERC1155Receiver": [
							1629
						],
						"IERC165": [
							2648
						],
						"IERC20": [
							2268
						],
						"IERC20Metadata": [
							2293
						],
						"Ownable": [
							370
						]
					},
					"id": 266,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 1467,
							"src": "28:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 2191,
							"src": "105:71:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 266,
							"sourceUnit": 371,
							"src": "178:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 370,
										"src": "273:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "273:7:0"
								}
							],
							"canonicalName": "ClaimERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265,
								370,
								2612
							],
							"name": "ClaimERC20",
							"nameLocation": "259:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "userNonce",
									"nameLocation": "321:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "288:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 9,
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "296:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "288:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 8,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "307:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "signer",
									"nameLocation": "353:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "337:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "337:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "erc20mint",
									"nameLocation": "382:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 265,
									"src": "366:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7",
									"id": 22,
									"name": "Claim",
									"nameLocation": "406:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "412:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "429:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "446:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "446:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:48:0"
									},
									"src": "400:60:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "598:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 36,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "643:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 37,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "648:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 38,
																	"name": "_nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "657:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 34,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "626:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "626:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 33,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "616:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "616:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 32,
												"id": 41,
												"nodeType": "Return",
												"src": "609:56:0"
											}
										]
									},
									"functionSelector": "d2b0737b",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMessageHash",
									"nameLocation": "476:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "509:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "501:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "554:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "549:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "549:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:77:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "589:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:9:0"
									},
									"scope": 265,
									"src": "467:206:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "798:316:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1042:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 54,
																	"name": "_messageHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1078:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 51,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1025:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1025:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:66:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 50,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "997:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 49,
												"id": 57,
												"nodeType": "Return",
												"src": "977:129:0"
											}
										]
									},
									"functionSelector": "fa540801",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthSignedMessageHash",
									"nameLocation": "690:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_messageHash",
												"nameLocation": "722:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "714:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:22:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "784:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 47,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:0"
									},
									"scope": 265,
									"src": "681:433:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1263:145:0",
										"statements": [
											{
												"assignments": [
													69,
													71,
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 69,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "1283:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "1275:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 68,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1275:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 71,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "1294:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "1286:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 70,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 73,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "1303:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 87,
														"src": "1297:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 72,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"initialValue": {
													"arguments": [
														{
															"id": 75,
															"name": "_signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "1323:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 74,
														"name": "splitSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "1308:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$_t_bytes32_$_t_uint8_$",
															"typeString": "function (bytes memory) pure returns (bytes32,bytes32,uint8)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
														"typeString": "tuple(bytes32,bytes32,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "_ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1364:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 80,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1387:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1391:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "1387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 83,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "1395:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 84,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1398:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 78,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "1354:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 67,
												"id": 86,
												"nodeType": "Return",
												"src": "1347:53:0"
											}
										]
									},
									"functionSelector": "97aba7f9",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recoverSigner",
									"nameLocation": "1131:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_ethSignedMessageHash",
												"nameLocation": "1153:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1145:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 60,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1189:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1176:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 62,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1176:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:56:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "1249:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:9:0"
									},
									"scope": 265,
									"src": "1122:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1569:231:0",
										"statements": [
											{
												"assignments": [
													102
												],
												"declarations": [
													{
														"constant": false,
														"id": 102,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "1588:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "1580:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 101,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1580:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"arguments": [
														{
															"id": 104,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1617:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 106,
															"name": "_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1631:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 103,
														"name": "getMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "1602:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,uint256,uint256) pure returns (bytes32)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1580:58:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "1657:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "1649:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 109,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1649:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"arguments": [
														{
															"id": 112,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "1704:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 111,
														"name": "getEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1680:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1680:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1649:67:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 116,
																"name": "ethSignedMessageHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "1750:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 117,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1772:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 115,
															"name": "recoverSigner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1736:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
																"typeString": "function (bytes32,bytes memory) pure returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1736:46:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 119,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1786:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1736:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 121,
												"nodeType": "Return",
												"src": "1729:63:0"
											}
										]
									},
									"functionSelector": "0deea608",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "1425:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1450:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1442:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "1495:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1490:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1525:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1512:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1512:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:110:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1563:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1563:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1562:6:0"
									},
									"scope": 265,
									"src": "1416:384:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1986:715:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 135,
																	"name": "sig",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "2005:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2005:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3635",
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2019:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65_by_1",
																	"typeString": "int_const 65"
																},
																"value": "65"
															},
															"src": "2005:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369676e6174757265206c656e677468",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															},
															"value": "invalid signature length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0060b83051574ba40ded2ef248b0d17cb210e5fa4f776d436805ab1ebb12b87",
																"typeString": "literal_string \"invalid signature length\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "1997:53:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2072:580:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2439:24:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2454:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2459:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2450:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2450:12:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2444:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2439:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2509:24:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "2524:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2529:2:0",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:12:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2514:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2514:19:0"
															},
															"variableNames": [
																{
																	"name": "s",
																	"nodeType": "YulIdentifier",
																	"src": "2509:1:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "sig",
																						"nodeType": "YulIdentifier",
																						"src": "2631:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2636:2:0",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2627:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2627:12:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2621:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2621:19:0"
																	}
																],
																"functionName": {
																	"name": "byte",
																	"nodeType": "YulIdentifier",
																	"src": "2613:4:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:28:0"
															},
															"variableNames": [
																{
																	"name": "v",
																	"nodeType": "YulIdentifier",
																	"src": "2608:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 128,
														"isOffset": false,
														"isSlot": false,
														"src": "2439:1:0",
														"valueSize": 1
													},
													{
														"declaration": 130,
														"isOffset": false,
														"isSlot": false,
														"src": "2509:1:0",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "2454:3:0",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "2524:3:0",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "2631:3:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "2608:1:0",
														"valueSize": 1
													}
												],
												"id": 142,
												"nodeType": "InlineAssembly",
												"src": "2063:589:0"
											}
										]
									},
									"functionSelector": "a7bb5803",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "splitSignature",
									"nameLocation": "1819:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1847:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1834:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 124,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:18:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1922:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1914:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 127,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1946:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1938:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1968:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1962:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 131,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:81:0"
									},
									"scope": 265,
									"src": "1810:891:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "2853:300:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 157,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "2879:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 158,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "2884:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 159,
																	"name": "_nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "2893:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 160,
																	"name": "signature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "2901:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 156,
																"name": "verify",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2872:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,uint256,bytes memory) view returns (bool)"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2872:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7369676e617475726520766572696679206661696c64",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2913:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_228faa340c352fb4fed8f5a62a022fd926f4a67ea68ee5039c0431e831ca65d7",
																"typeString": "literal_string \"signature verify faild\""
															},
															"value": "signature verify faild"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_228faa340c352fb4fed8f5a62a022fd926f4a67ea68ee5039c0431e831ca65d7",
																"typeString": "literal_string \"signature verify faild\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2864:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 166,
																	"name": "userNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "2957:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 168,
																"indexExpression": {
																	"id": 167,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "2967:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2957:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 169,
																"name": "_nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2974:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2957:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f6e636520766572696679206661696c64",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2982:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_860c9c7d46565f5e90fa37fbbb354cb64576cca33d51ac8e0708a8fb369bfae9",
																"typeString": "literal_string \"nonce verify faild\""
															},
															"value": "nonce verify faild"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_860c9c7d46565f5e90fa37fbbb354cb64576cca33d51ac8e0708a8fb369bfae9",
																"typeString": "literal_string \"nonce verify faild\""
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2949:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2949:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2949:54:0"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 174,
															"name": "userNonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "3014:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 176,
														"indexExpression": {
															"id": 175,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "3024:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3014:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 177,
																"name": "userNonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3031:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 179,
															"indexExpression": {
																"id": 178,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "3041:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3031:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3048:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3031:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3014:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "3014:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "3089:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 185,
																	"name": "erc20mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "3069:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 184,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "3062:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2268_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3062:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2268",
																"typeString": "contract IERC20"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2217,
														"src": "3062:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3062:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "3062:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 193,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "3124:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "3129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 195,
															"name": "_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "3138:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "3118:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3118:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "EmitStatement",
												"src": "3113:32:0"
											}
										]
									},
									"functionSelector": "2ada8a32",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2722:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2754:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2746:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2776:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2768:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_nonce",
												"nameLocation": "2799:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2794:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2794:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2829:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "2816:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2816:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:118:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2853:0:0"
									},
									"scope": 265,
									"src": "2713:440:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3214:35:0",
										"statements": [
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 206,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "3225:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3234:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3225:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "3225:16:0"
											}
										]
									},
									"functionSelector": "6c19e783",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 203,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "3204:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3204:9:0"
										}
									],
									"name": "setSigner",
									"nameLocation": "3170:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "3188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:17:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3214:0:0"
									},
									"scope": 265,
									"src": "3161:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "3308:37:0",
										"statements": [
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 218,
														"name": "erc20mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "3319:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 219,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "3331:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3319:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "3319:18:0"
											}
										]
									},
									"functionSelector": "144fa6d7",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 215,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "3298:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3298:9:0"
										}
									],
									"name": "setToken",
									"nameLocation": "3266:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3283:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "3275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3274:16:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3308:0:0"
									},
									"scope": 265,
									"src": "3257:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "3410:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 234,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3446:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3446:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 242,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ClaimERC20_$265",
																				"typeString": "contract ClaimERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ClaimERC20_$265",
																				"typeString": "contract ClaimERC20"
																			}
																		],
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3486:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 240,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3486:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3486:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 237,
																			"name": "erc20mint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "3465:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 236,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "3458:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$2268_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3458:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2268",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2207,
																"src": "3458:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3458:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 231,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "3428:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 230,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "3421:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2268_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3421:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2268",
																"typeString": "contract IERC20"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2217,
														"src": "3421:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3421:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "3421:80:0"
											}
										]
									},
									"functionSelector": "c4091443",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 227,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "3400:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3400:9:0"
										}
									],
									"name": "urgentWithdraw",
									"nameLocation": "3362:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3385:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "3377:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:16:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3410:0:0"
									},
									"scope": 265,
									"src": "3353:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "3568:32:0",
										"statements": [
											{
												"expression": {
													"id": 253,
													"name": "signer",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "3586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 252,
												"id": 254,
												"nodeType": "Return",
												"src": "3579:13:0"
											}
										]
									},
									"functionSelector": "7ac3c02f",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSigner",
									"nameLocation": "3526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:2:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "3559:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3558:9:0"
									},
									"scope": 265,
									"src": "3517:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "3659:35:0",
										"statements": [
											{
												"expression": {
													"id": 261,
													"name": "erc20mint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "3677:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 260,
												"id": 262,
												"nodeType": "Return",
												"src": "3670:16:0"
											}
										]
									},
									"functionSelector": "21df0da7",
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nameLocation": "3617:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3625:2:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3649:9:0"
									},
									"scope": 265,
									"src": "3608:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 266,
							"src": "250:3449:0",
							"usedErrors": []
						}
					],
					"src": "0:3699:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2612
						],
						"Ownable": [
							370
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 2613,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 270,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2612,
										"src": "668:7:1"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 370,
							"linearizedBaseContracts": [
								370,
								2612
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 273,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 279,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 283,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 289,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 370,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 295,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 370,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 302,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 304,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2602,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 310,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 312,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 319,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 318,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 316,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 315,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 370,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 335,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 336,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 344,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 331,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 312,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 370,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 355,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"id": 357,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 360,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 364,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 363,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 370,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 371,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Address": [
							2590
						],
						"Context": [
							2612
						],
						"ERC1155": [
							1466
						],
						"ERC165": [
							2636
						],
						"IERC1155": [
							1588
						],
						"IERC1155MetadataURI": [
							1644
						],
						"IERC1155Receiver": [
							1629
						],
						"IERC165": [
							2648
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1589,
							"src": "119:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1630,
							"src": "144:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1645,
							"src": "177:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 376,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 2591,
							"src": "224:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 377,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 2613,
							"src": "258:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 2637,
							"src": "292:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 380,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2612,
										"src": "575:7:2"
									},
									"id": 381,
									"nodeType": "InheritanceSpecifier",
									"src": "575:7:2"
								},
								{
									"baseName": {
										"id": 382,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2636,
										"src": "584:6:2"
									},
									"id": 383,
									"nodeType": "InheritanceSpecifier",
									"src": "584:6:2"
								},
								{
									"baseName": {
										"id": 384,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1588,
										"src": "592:8:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "592:8:2"
								},
								{
									"baseName": {
										"id": 386,
										"name": "IERC1155MetadataURI",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1644,
										"src": "602:19:2"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "602:19:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 379,
								"nodeType": "StructuredDocumentation",
								"src": "340:214:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1644,
								1588,
								2636,
								2648,
								2612
							],
							"name": "ERC1155",
							"nameLocation": "564:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 390,
									"libraryName": {
										"id": 388,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2590,
										"src": "634:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "628:26:2",
									"typeName": {
										"id": 389,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "646:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 396,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "765:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "709:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 395,
										"keyType": {
											"id": 391,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "717:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "709:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 394,
											"keyType": {
												"id": 392,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "736:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "728:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 393,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "747:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "884:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "831:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 401,
										"keyType": {
											"id": 397,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "831:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 400,
											"keyType": {
												"id": 398,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "850:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 399,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "869:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1038:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1466,
									"src": "1023:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 403,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1023:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "1124:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1142:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 410,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "1134:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "1134:13:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "1049:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 415,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1118:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "1104:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1104:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:20:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1124:0:2"
									},
									"scope": 1466,
									"src": "1092:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2635,
										2647
									],
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1329:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1358:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 428,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "1378:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1588_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1588_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 427,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1373:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1373:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1588",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1373:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1358:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 432,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1415:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 434,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1644,
																			"src": "1435:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1644_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1644_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 433,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1430:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1430:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1644",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1430:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1415:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1358:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 441,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "1507:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 439,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1483:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1466_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2635,
															"src": "1483:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1483:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1358:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 425,
												"id": 444,
												"nodeType": "Return",
												"src": "1339:180:2"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "1160:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1230:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 422,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 420,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2636,
												"src": "1297:6:2"
											},
											{
												"id": 421,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2648,
												"src": "1305:7:2"
											}
										],
										"src": "1288:25:2"
									},
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1255:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1248:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 417,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1248:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:20:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1323:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:6:2"
									},
									"scope": 1466,
									"src": "1221:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1643
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2000:28:2",
										"statements": [
											{
												"expression": {
													"id": 455,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 404,
													"src": "2017:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 454,
												"id": 456,
												"nodeType": "Return",
												"src": "2010:11:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1532:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "1934:3:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 451,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1967:8:2"
									},
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1938:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1985:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 452,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1985:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:15:2"
									},
									"scope": 1466,
									"src": "1925:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1526
									],
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "2265:133:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 470,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2283:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2302:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2294:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2294:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2283:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2275:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "2275:77:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 479,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2369:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 481,
														"indexExpression": {
															"id": 480,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2379:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2369:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 483,
													"indexExpression": {
														"id": 482,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2383:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2369:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 484,
												"nodeType": "Return",
												"src": "2362:29:2"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2034:131:2",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2179:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:2"
									},
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2197:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2189:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2214:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2206:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:29:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "2256:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:9:2"
									},
									"scope": 1466,
									"src": "2170:228:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1539
									],
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "2728:335:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 501,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "2746:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2746:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 503,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "2765:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2746:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2738:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2738:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "2738:83:2"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2849:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "2832:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 511,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2832:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 512,
															"nodeType": "ArrayTypeName",
															"src": "2832:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 517,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "2879:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2879:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2865:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 514,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2869:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 515,
															"nodeType": "ArrayTypeName",
															"src": "2869:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2865:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2832:63:2"
											},
											{
												"body": {
													"id": 545,
													"nodeType": "Block",
													"src": "2952:74:2",
													"statements": [
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 532,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "2966:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 534,
																	"indexExpression": {
																		"id": 533,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "2980:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2966:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 536,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 490,
																				"src": "2995:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 538,
																			"indexExpression": {
																				"id": 537,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "3004:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2995:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 539,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "3008:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "3012:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3008:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 535,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "2985:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2985:30:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2966:49:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "2966:49:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 525,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "2926:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 526,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "2930:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2930:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2926:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"initializationExpression": {
													"assignments": [
														522
													],
													"declarations": [
														{
															"constant": false,
															"id": 522,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2919:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 546,
															"src": "2911:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 521,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2911:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 524,
													"initialValue": {
														"hexValue": "30",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2911:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2947:3:2",
														"subExpression": {
															"id": 529,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "2949:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 531,
													"nodeType": "ExpressionStatement",
													"src": "2947:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2906:120:2"
											},
											{
												"expression": {
													"id": 547,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 513,
													"src": "3043:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 499,
												"id": 548,
												"nodeType": "Return",
												"src": "3036:20:2"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "2404:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2564:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2680:8:2"
									},
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2596:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2579:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 488,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2579:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 489,
													"nodeType": "ArrayTypeName",
													"src": "2579:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2623:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2606:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 491,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2606:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ArrayTypeName",
													"src": "2606:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:49:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "2706:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 496,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2706:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 497,
													"nodeType": "ArrayTypeName",
													"src": "2706:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:18:2"
									},
									"scope": 1466,
									"src": "2555:508:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1547
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3215:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 560,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "3244:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "3258:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "3268:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "3225:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "3225:52:2"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3069:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3140:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 557,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3206:8:2"
									},
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3166:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3158:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3181:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3176:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:33:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3215:0:2"
									},
									"scope": 1466,
									"src": "3131:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1557
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3456:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 578,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "3473:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 580,
														"indexExpression": {
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3492:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 582,
													"indexExpression": {
														"id": 581,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "3501:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3473:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 577,
												"id": 583,
												"nodeType": "Return",
												"src": "3466:44:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3290:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3360:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3432:8:2"
									},
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3385:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3377:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3402:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3394:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3376:35:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3450:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3450:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:6:2"
									},
									"scope": 1466,
									"src": "3351:166:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1571
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "3753:220:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 601,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3784:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 602,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "3792:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3792:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3784:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 606,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "3825:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 607,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "3831:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3831:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 605,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "3808:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3808:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3784:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3858:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3763:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:148:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "3763:148:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3939:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "3945:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "3949:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 618,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "3953:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 619,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3961:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 614,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "3921:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "3921:45:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3523:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3593:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 598,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3744:8:2"
									},
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3627:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3619:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3649:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3641:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3669:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3661:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3689:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3681:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3718:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3705:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3705:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:119:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3753:0:2"
									},
									"scope": 1466,
									"src": "3584:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1587
									],
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "4239:236:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 641,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "4270:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 642,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "4278:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4278:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 646,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "4311:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 647,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "4317:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4317:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 645,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4294:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4294:36:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4270:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4344:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4249:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4249:157:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "4249:157:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4439:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4445:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "4449:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 658,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "4454:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 659,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4463:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 654,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "4416:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4416:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "4416:52:2"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "3979:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4054:21:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 638,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4230:8:2"
									},
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4093:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4085:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4085:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4115:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4107:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4144:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4127:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 629,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4127:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 630,
													"nodeType": "ArrayTypeName",
													"src": "4127:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4174:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4157:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 632,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4157:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 633,
													"nodeType": "ArrayTypeName",
													"src": "4157:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4204:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4191:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4191:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:139:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4239:0:2"
									},
									"scope": 1466,
									"src": "4045:430:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "5088:634:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 678,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "5106:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5120:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5112:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 679,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5112:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5112:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5106:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5124:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "5098:66:2"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5183:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "5175:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 687,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5175:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 689,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "5194:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5175:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5238:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "5248:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5254:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 697,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5276:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 696,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "5258:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5258:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 700,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "5299:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 699,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "5281:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5281:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 702,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5308:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 692,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "5217:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5217:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "5217:96:2"
											},
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "5332:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "5324:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5324:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 707,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "5346:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 709,
														"indexExpression": {
															"id": 708,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5356:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5346:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 711,
													"indexExpression": {
														"id": 710,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "5360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5346:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5324:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 714,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5383:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 715,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "5398:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5406:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5375:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "5375:76:2"
											},
											{
												"id": 730,
												"nodeType": "UncheckedBlock",
												"src": "5461:77:2",
												"statements": [
													{
														"expression": {
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 720,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "5485:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 723,
																	"indexExpression": {
																		"id": 721,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "5495:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5485:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 724,
																"indexExpression": {
																	"id": 722,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "5499:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "5485:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 725,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "5507:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 726,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "5521:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5507:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5485:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 729,
														"nodeType": "ExpressionStatement",
														"src": "5485:42:2"
													}
												]
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 731,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5547:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 734,
															"indexExpression": {
																"id": 732,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "5557:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5547:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 735,
														"indexExpression": {
															"id": 733,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5561:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5547:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 736,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "5568:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "5547:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 740,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5605:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "5615:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5621:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5625:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 744,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5629:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 739,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "5590:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "EmitStatement",
												"src": "5585:51:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5678:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "5688:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5694:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5698:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 752,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5702:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 753,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5710:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "5647:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "5647:68:2"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "4481:439:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "4934:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4969:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4961:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4991:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4983:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5011:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5003:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5031:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5023:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5023:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5060:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5047:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5047:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4951:119:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1466,
									"src": "4925:797:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "6256:857:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 774,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "6274:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6274:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 776,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "6288:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6288:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6274:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6304:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6266:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6266:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "6266:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 783,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "6365:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6379:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6371:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 784,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6371:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6371:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6365:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6383:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6357:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "6357:66:2"
											},
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "6442:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "6434:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6434:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 794,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "6453:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "6497:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 799,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "6507:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "6513:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6517:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 802,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "6522:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "6531:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 797,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "6476:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "6476:60:2"
											},
											{
												"body": {
													"id": 863,
													"nodeType": "Block",
													"src": "6588:370:2",
													"statements": [
														{
															"assignments": [
																818
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 818,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6610:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 863,
																	"src": "6602:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 817,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6602:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 822,
															"initialValue": {
																"baseExpression": {
																	"id": 819,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "6615:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 821,
																"indexExpression": {
																	"id": 820,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6619:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6615:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6602:19:2"
														},
														{
															"assignments": [
																824
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 824,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "6643:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 863,
																	"src": "6635:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 823,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6635:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 828,
															"initialValue": {
																"baseExpression": {
																	"id": 825,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "6652:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"id": 826,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "6660:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6652:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6635:27:2"
														},
														{
															"assignments": [
																830
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 830,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6685:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 863,
																	"src": "6677:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6677:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 836,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 831,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "6699:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 833,
																	"indexExpression": {
																		"id": 832,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "6709:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6699:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 835,
																"indexExpression": {
																	"id": 834,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 760,
																	"src": "6713:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6699:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6677:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 838,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "6740:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 839,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 824,
																			"src": "6755:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6740:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6763:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 837,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6732:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6732:76:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "6732:76:2"
														},
														{
															"id": 854,
															"nodeType": "UncheckedBlock",
															"src": "6822:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 844,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "6850:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 847,
																				"indexExpression": {
																					"id": 845,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "6860:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6850:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 848,
																			"indexExpression": {
																				"id": 846,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "6864:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6850:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 849,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "6872:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 850,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "6886:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6872:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6850:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 853,
																	"nodeType": "ExpressionStatement",
																	"src": "6850:42:2"
																}
															]
														},
														{
															"expression": {
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 855,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "6920:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 858,
																		"indexExpression": {
																			"id": 856,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 818,
																			"src": "6930:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6920:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 859,
																	"indexExpression": {
																		"id": 857,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "6934:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6920:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 860,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "6941:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6920:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 862,
															"nodeType": "ExpressionStatement",
															"src": "6920:27:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 810,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "6567:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 811,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "6571:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6571:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6567:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"initializationExpression": {
													"assignments": [
														807
													],
													"declarations": [
														{
															"constant": false,
															"id": 807,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6560:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 864,
															"src": "6552:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 806,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6552:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 809,
													"initialValue": {
														"hexValue": "30",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6552:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6583:3:2",
														"subExpression": {
															"id": 814,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "6585:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 816,
													"nodeType": "ExpressionStatement",
													"src": "6583:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6547:411:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 866,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "6987:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 867,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "6997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7003:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7007:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 870,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 865,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "6973:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "EmitStatement",
												"src": "6968:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 874,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "7067:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "7077:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7083:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7087:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 878,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "7092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 879,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "7101:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 873,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "7031:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7031:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "7031:75:2"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "5728:335:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "6077:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6117:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6109:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6109:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6139:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6131:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6131:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6168:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6151:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 763,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 764,
													"nodeType": "ArrayTypeName",
													"src": "6151:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "6198:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6181:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 766,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6181:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 767,
													"nodeType": "ArrayTypeName",
													"src": "6181:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6228:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6215:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6215:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6099:139:2"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6256:0:2"
									},
									"scope": 1466,
									"src": "6068:1045:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "7992:30:2",
										"statements": [
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "8002:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 890,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "8009:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8002:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "8002:13:2"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "7119:812:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "7945:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "7967:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "7953:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7953:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7952:22:2"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7992:0:2"
									},
									"scope": 1466,
									"src": "7936:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "8524:424:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 907,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "8542:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 908,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8542:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8534:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8534:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "8534:62:2"
											},
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "8615:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "8607:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 916,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8607:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 918,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "8626:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8626:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8607:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "8670:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8688:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8680:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 923,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8680:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8680:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "8692:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 929,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "8714:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 928,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "8696:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8696:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 932,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "8737:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 931,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "8719:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8719:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 934,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "8746:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 921,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "8649:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8649:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "8649:102:2"
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 937,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "8762:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 940,
															"indexExpression": {
																"id": 938,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "8772:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8762:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 941,
														"indexExpression": {
															"id": 939,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "8776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8762:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 942,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "8783:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8762:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "8762:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 946,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "8819:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8837:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8829:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 947,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8829:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8829:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "8841:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8845:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 953,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "8849:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 945,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "8804:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8804:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "EmitStatement",
												"src": "8799:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 957,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "8898:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8916:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8908:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 958,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8908:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8908:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "8920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8924:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 964,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "8928:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 965,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "8936:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 956,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "8867:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8867:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "8867:74:2"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "8028:362:2",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8404:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8427:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8419:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8439:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8467:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8459:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8496:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8483:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 902,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:97:2"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8524:0:2"
									},
									"scope": 1466,
									"src": "8395:553:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "9447:561:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "9465:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9479:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9471:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9471:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9471:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9465:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9483:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9457:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9457:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "9457:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 994,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "9537:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9537:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 996,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "9551:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9551:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9537:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9567:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 993,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9529:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "9529:81:2"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "9629:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1067,
														"src": "9621:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1002,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9621:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "9640:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9640:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9621:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "9684:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9702:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9694:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9694:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9694:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9706:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "9710:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1015,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "9715:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1016,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "9724:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1007,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9663:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9663:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "9663:66:2"
											},
											{
												"body": {
													"id": 1042,
													"nodeType": "Block",
													"src": "9781:60:2",
													"statements": [
														{
															"expression": {
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1030,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 396,
																			"src": "9795:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1035,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1031,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 975,
																				"src": "9805:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1033,
																			"indexExpression": {
																				"id": 1032,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1020,
																				"src": "9809:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9805:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9795:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1036,
																	"indexExpression": {
																		"id": 1034,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "9813:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9795:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1037,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "9820:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1039,
																	"indexExpression": {
																		"id": 1038,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "9828:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9820:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9795:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "9795:35:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "9760:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1024,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "9764:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9764:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9760:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"initializationExpression": {
													"assignments": [
														1020
													],
													"declarations": [
														{
															"constant": false,
															"id": 1020,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9753:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1043,
															"src": "9745:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1019,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9745:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1022,
													"initialValue": {
														"hexValue": "30",
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9757:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9745:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9776:3:2",
														"subExpression": {
															"id": 1027,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "9776:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1029,
													"nodeType": "ExpressionStatement",
													"src": "9776:3:2"
												},
												"nodeType": "ForStatement",
												"src": "9740:101:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "9870:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9880:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9880:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9880:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9892:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "9896:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1052,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "9901:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1044,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "9856:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9856:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "EmitStatement",
												"src": "9851:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "9956:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9974:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9966:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1057,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9966:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9966:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1061,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "9978:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "9982:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1063,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "9987:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1064,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "9996:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1055,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "9920:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "9920:81:2"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "8954:334:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "9302:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9330:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "9322:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9322:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9359:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "9342:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 973,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9342:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 974,
													"nodeType": "ArrayTypeName",
													"src": "9342:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "9389:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "9372:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 976,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9372:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 977,
													"nodeType": "ArrayTypeName",
													"src": "9372:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "9406:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9312:117:2"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9447:0:2"
									},
									"scope": 1466,
									"src": "9293:715:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "10352:526:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "10370:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10386:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10378:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1080,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10378:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10378:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10370:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10390:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10362:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10362:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "10362:66:2"
											},
											{
												"assignments": [
													1089
												],
												"declarations": [
													{
														"constant": false,
														"id": 1089,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "10447:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "10439:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1088,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10439:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1090,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "10458:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10458:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10439:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "10502:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10512:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10526:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10518:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1096,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10518:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10518:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1101,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "10548:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1100,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "10530:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10530:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1104,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "10571:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1103,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1465,
																"src": "10553:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10553:25:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10580:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1093,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "10481:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10481:102:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "10481:102:2"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10602:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "10594:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10594:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1111,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "10616:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1113,
														"indexExpression": {
															"id": 1112,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "10626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10616:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1115,
													"indexExpression": {
														"id": 1114,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "10630:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10616:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10594:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10653:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1119,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "10668:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10653:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10676:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10645:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10645:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "10645:70:2"
											},
											{
												"id": 1134,
												"nodeType": "UncheckedBlock",
												"src": "10725:77:2",
												"statements": [
													{
														"expression": {
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1124,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "10749:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1127,
																	"indexExpression": {
																		"id": 1125,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "10759:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10749:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1128,
																"indexExpression": {
																	"id": 1126,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "10763:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10749:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1129,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "10771:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1130,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "10785:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10771:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10749:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1133,
														"nodeType": "ExpressionStatement",
														"src": "10749:42:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1136,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "10832:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10848:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1138,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10848:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "10860:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1143,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "10864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "10817:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10817:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "EmitStatement",
												"src": "10812:59:2"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "10014:229:2",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10257:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10280:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "10272:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10302:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "10294:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10322:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "10314:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:72:2"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10352:0:2"
									},
									"scope": 1466,
									"src": "10248:630:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "11201:738:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "11219:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11235:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11227:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1161,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11227:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11219:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11211:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11211:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "11211:66:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1170,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "11295:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11295:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1172,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "11309:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11309:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11295:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11325:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11287:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "11287:81:2"
											},
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "11387:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1257,
														"src": "11379:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11379:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1180,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2602,
														"src": "11398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11379:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "11442:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "11452:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11466:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1186,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11458:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11458:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "11470:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1191,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "11475:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11484:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1183,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "11421:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11421:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "11421:66:2"
											},
											{
												"body": {
													"id": 1244,
													"nodeType": "Block",
													"src": "11539:323:2",
													"statements": [
														{
															"assignments": [
																1207
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1207,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "11561:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1244,
																	"src": "11553:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1206,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11553:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1211,
															"initialValue": {
																"baseExpression": {
																	"id": 1208,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "11566:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1210,
																"indexExpression": {
																	"id": 1209,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "11570:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11566:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11553:19:2"
														},
														{
															"assignments": [
																1213
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1213,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "11594:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1244,
																	"src": "11586:14:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1212,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11586:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1217,
															"initialValue": {
																"baseExpression": {
																	"id": 1214,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "11603:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1216,
																"indexExpression": {
																	"id": 1215,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "11611:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11603:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11586:27:2"
														},
														{
															"assignments": [
																1219
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1219,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "11636:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1244,
																	"src": "11628:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1218,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11628:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1225,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1220,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "11650:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1222,
																	"indexExpression": {
																		"id": 1221,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "11660:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11650:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1224,
																"indexExpression": {
																	"id": 1223,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "11664:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11650:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11628:41:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1227,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1219,
																			"src": "11691:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1228,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "11706:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11691:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11714:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1226,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11683:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:70:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1232,
															"nodeType": "ExpressionStatement",
															"src": "11683:70:2"
														},
														{
															"id": 1243,
															"nodeType": "UncheckedBlock",
															"src": "11767:85:2",
															"statements": [
																{
																	"expression": {
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1233,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 396,
																					"src": "11795:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1236,
																				"indexExpression": {
																					"id": 1234,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1207,
																					"src": "11805:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11795:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1237,
																			"indexExpression": {
																				"id": 1235,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1150,
																				"src": "11809:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "11795:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1238,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1219,
																				"src": "11817:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1239,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "11831:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11817:20:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11795:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1242,
																	"nodeType": "ExpressionStatement",
																	"src": "11795:42:2"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "11518:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1200,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "11522:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11522:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11518:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"initializationExpression": {
													"assignments": [
														1196
													],
													"declarations": [
														{
															"constant": false,
															"id": 1196,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11511:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1245,
															"src": "11503:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1195,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11503:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1198,
													"initialValue": {
														"hexValue": "30",
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11515:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11503:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11534:3:2",
														"subExpression": {
															"id": 1203,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "11534:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1205,
													"nodeType": "ExpressionStatement",
													"src": "11534:3:2"
												},
												"nodeType": "ForStatement",
												"src": "11498:364:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1247,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "11891:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1248,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "11901:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11907:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1249,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11907:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11907:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1253,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "11919:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1254,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "11924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1246,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "11877:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11877:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "11872:60:2"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "10884:183:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "11081:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11109:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "11101:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11101:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11140:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "11123:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1151,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11123:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1152,
													"nodeType": "ArrayTypeName",
													"src": "11123:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "11170:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "11153:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1154,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1155,
													"nodeType": "ArrayTypeName",
													"src": "11153:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11091:92:2"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11201:0:2"
									},
									"scope": 1466,
									"src": "11072:867:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "12197:200:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "12215:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1270,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "12224:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12215:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12234:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12207:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12207:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "12207:71:2"
											},
											{
												"expression": {
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1275,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "12288:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1278,
															"indexExpression": {
																"id": 1276,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "12307:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12288:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1279,
														"indexExpression": {
															"id": 1277,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "12314:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12288:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1280,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "12326:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12288:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "12288:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1284,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "12364:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "12371:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "12381:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1283,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1509,
														"src": "12349:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12349:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "EmitStatement",
												"src": "12344:46:2"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "11945:124:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "12083:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12119:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "12111:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12111:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12142:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "12134:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12134:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12165:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "12160:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12160:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12101:78:2"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12197:0:2"
									},
									"scope": 1466,
									"src": "12074:323:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "13543:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "12403:923:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13340:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13378:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13370:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13370:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13404:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13396:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13426:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13418:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "13455:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13438:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1298,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13438:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1299,
													"nodeType": "ArrayTypeName",
													"src": "13438:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13468:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1301,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13468:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1302,
													"nodeType": "ArrayTypeName",
													"src": "13468:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13515:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "13502:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13502:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13360:165:2"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13543:0:2"
									},
									"scope": 1466,
									"src": "13331:214:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "13744:532:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1324,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "13758:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2313,
														"src": "13758:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13758:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "13754:516:2",
												"trueBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "13775:495:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1351,
																		"nodeType": "Block",
																		"src": "13892:184:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1344,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1340,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1338,
																						"src": "13914:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1341,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1629,
																								"src": "13926:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1629_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1342,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1610,
																							"src": "13926:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13926:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13914:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1350,
																				"nodeType": "IfStatement",
																				"src": "13910:152:2",
																				"trueBody": {
																					"id": 1349,
																					"nodeType": "Block",
																					"src": "13971:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1346,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14000:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1345,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "13993:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1347,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13993:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1348,
																							"nodeType": "ExpressionStatement",
																							"src": "13993:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1352,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1339,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1338,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "13882:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1352,
																				"src": "13875:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1337,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13875:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13874:17:2"
																	},
																	"src": "13866:210:2"
																},
																{
																	"block": {
																		"id": 1360,
																		"nodeType": "Block",
																		"src": "14111:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1357,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1354,
																							"src": "14136:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1356,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14129:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14129:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1359,
																				"nodeType": "ExpressionStatement",
																				"src": "14129:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1361,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1355,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1354,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14103:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1361,
																				"src": "14089:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1353,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14089:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14088:22:2"
																	},
																	"src": "14077:81:2"
																},
																{
																	"block": {
																		"id": 1366,
																		"nodeType": "Block",
																		"src": "14165:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1363,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14190:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1362,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14183:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14183:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1365,
																				"nodeType": "ExpressionStatement",
																				"src": "14183:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1367,
																	"nodeType": "TryCatchClause",
																	"src": "14159:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1331,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "13832:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1332,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "13842:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1333,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "13848:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1334,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "13852:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1335,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1321,
																		"src": "13860:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1328,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "13810:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1327,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "13793:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1629_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13793:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1629",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1610,
																	"src": "13793:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13793:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1368,
															"nodeType": "TryStatement",
															"src": "13789:471:2"
														}
													]
												}
											}
										]
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13560:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13608:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "13600:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13634:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "13626:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13626:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13656:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "13648:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13676:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "13668:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13696:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "13688:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13688:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13725:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "13712:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13712:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13590:145:2"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13744:0:2"
									},
									"scope": 1466,
									"src": "13551:725:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "14500:574:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1389,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "14514:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2313,
														"src": "14514:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14514:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1435,
												"nodeType": "IfStatement",
												"src": "14510:558:2",
												"trueBody": {
													"id": 1434,
													"nodeType": "Block",
													"src": "14531:537:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1416,
																		"nodeType": "Block",
																		"src": "14685:189:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1405,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1403,
																						"src": "14707:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1406,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1629,
																								"src": "14719:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1629_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1407,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1628,
																							"src": "14719:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14719:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14707:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1415,
																				"nodeType": "IfStatement",
																				"src": "14703:157:2",
																				"trueBody": {
																					"id": 1414,
																					"nodeType": "Block",
																					"src": "14769:91:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1411,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14798:42:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1410,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14791:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1412,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14791:50:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1413,
																							"nodeType": "ExpressionStatement",
																							"src": "14791:50:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1417,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1404,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1403,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14662:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1417,
																				"src": "14655:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1402,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14655:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14637:47:2"
																	},
																	"src": "14629:245:2"
																},
																{
																	"block": {
																		"id": 1425,
																		"nodeType": "Block",
																		"src": "14909:47:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1422,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1419,
																							"src": "14934:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1421,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14927:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1423,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14927:14:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1424,
																				"nodeType": "ExpressionStatement",
																				"src": "14927:14:2"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1426,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1420,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1419,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14901:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1426,
																				"src": "14887:20:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1418,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "14887:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14886:22:2"
																	},
																	"src": "14875:81:2"
																},
																{
																	"block": {
																		"id": 1431,
																		"nodeType": "Block",
																		"src": "14963:95:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1428,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14988:54:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1427,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "14981:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14981:62:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1430,
																				"nodeType": "ExpressionStatement",
																				"src": "14981:62:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1432,
																	"nodeType": "TryCatchClause",
																	"src": "14957:101:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1396,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "14593:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1397,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1376,
																		"src": "14603:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1398,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "14609:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1399,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "14614:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1400,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "14623:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1393,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1378,
																				"src": "14566:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1392,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1629,
																			"src": "14549:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1629_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14549:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1629",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1628,
																	"src": "14549:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14549:79:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1433,
															"nodeType": "TryStatement",
															"src": "14545:513:2"
														}
													]
												}
											}
										]
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14291:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14344:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "14336:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14370:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "14362:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14392:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "14384:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "14421:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "14404:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1379,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1380,
													"nodeType": "ArrayTypeName",
													"src": "14404:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "14451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "14434:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1382,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14434:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1383,
													"nodeType": "ArrayTypeName",
													"src": "14434:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14481:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "14468:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14468:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14326:165:2"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14500:0:2"
									},
									"scope": 1466,
									"src": "14282:792:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "15164:109:2",
										"statements": [
											{
												"assignments": [
													1449
												],
												"declarations": [
													{
														"constant": false,
														"id": 1449,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "15191:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "15174:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1447,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15174:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1448,
															"nodeType": "ArrayTypeName",
															"src": "15174:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1455,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15213:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "15199:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1450,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15203:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1451,
															"nodeType": "ArrayTypeName",
															"src": "15203:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15199:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15174:41:2"
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1456,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "15225:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1458,
														"indexExpression": {
															"hexValue": "30",
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15231:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15225:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1459,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1439,
														"src": "15236:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15225:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "15225:18:2"
											},
											{
												"expression": {
													"id": 1462,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1449,
													"src": "15261:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1463,
												"nodeType": "Return",
												"src": "15254:12:2"
											}
										]
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "15089:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "15115:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "15107:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15107:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15106:17:2"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "15146:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15146:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"nodeType": "ArrayTypeName",
													"src": "15146:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15145:18:2"
									},
									"scope": 1466,
									"src": "15080:193:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1467,
							"src": "555:14720:2",
							"usedErrors": []
						}
					],
					"src": "94:15182:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1588
						],
						"IERC165": [
							2648
						]
					},
					"id": 1589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1589,
							"sourceUnit": 2649,
							"src": "120:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1471,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2648,
										"src": "357:7:3"
									},
									"id": 1472,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1470,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1588,
							"linearizedBaseContracts": [
								1588,
								2648
							],
							"name": "IERC1155",
							"nameLocation": "345:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:3",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1485,
									"name": "TransferSingle",
									"nameLocation": "503:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "518:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "544:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "566:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "586:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "598:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:3"
									},
									"src": "497:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1500,
									"name": "TransferBatch",
									"nameLocation": "774:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "797:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "831:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "861:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "889:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1494,
													"nodeType": "ArrayTypeName",
													"src": "889:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "912:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1496,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1497,
													"nodeType": "ArrayTypeName",
													"src": "912:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:3"
									},
									"src": "768:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1509,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1114:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1139:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "1165:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:3"
									},
									"src": "1093:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1516,
									"name": "URI",
									"nameLocation": "1540:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1544:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1511,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "1558:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:3"
									},
									"src": "1534:44:3"
								},
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:3",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1781:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1798:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:3"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1833:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:3"
									},
									"scope": 1588,
									"src": "1762:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2065:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1528,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1529,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2094:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1531,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1532,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:3"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "2165:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1535,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1536,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:3"
									},
									"scope": 1588,
									"src": "2041:142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2469:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:3"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:3"
									},
									"scope": 1588,
									"src": "2442:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2683:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2700:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:3"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "2741:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:3"
									},
									"scope": 1588,
									"src": "2657:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:3",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3352:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3374:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3394:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3414:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "3438:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:3"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:3"
									},
									"scope": 1588,
									"src": "3317:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "3914:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "3936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "3956:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1577,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1578,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "3988:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1580,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1581,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "4024:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:3"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:3"
									},
									"scope": 1588,
									"src": "3874:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1589,
							"src": "335:3726:3",
							"usedErrors": []
						}
					],
					"src": "95:3967:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1629
						],
						"IERC165": [
							2648
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 2649,
							"src": "128:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1593,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2648,
										"src": "247:7:4"
									},
									"id": 1594,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1592,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629,
								2648
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:4",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1118:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1144:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1166:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1186:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1209:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:4"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1253:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1607,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:4"
									},
									"scope": 1629,
									"src": "1082:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:4",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2290:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2316:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2338:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1616,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1617,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2370:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1619,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1620,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2405:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:4"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2449:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:4"
									},
									"scope": 1629,
									"src": "2249:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "217:2242:4",
							"usedErrors": []
						}
					],
					"src": "103:2357:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1588
						],
						"IERC1155MetadataURI": [
							1644
						],
						"IERC165": [
							2648
						]
					},
					"id": 1645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "117:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1632,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1645,
							"sourceUnit": 1589,
							"src": "142:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1634,
										"name": "IERC1155",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1588,
										"src": "397:8:5"
									},
									"id": 1635,
									"nodeType": "InheritanceSpecifier",
									"src": "397:8:5"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1633,
								"nodeType": "StructuredDocumentation",
								"src": "169:194:5",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1644,
							"linearizedBaseContracts": [
								1644,
								1588,
								2648
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "374:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "412:192:5",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "618:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "630:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "622:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:12:5"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "657:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1640,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:5"
									},
									"scope": 1644,
									"src": "609:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1645,
							"src": "364:310:5",
							"usedErrors": []
						}
					],
					"src": "117:558:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							2612
						],
						"ERC20": [
							2190
						],
						"IERC20": [
							2268
						],
						"IERC20Metadata": [
							2293
						]
					},
					"id": 2191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:6"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2191,
							"sourceUnit": 2269,
							"src": "115:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 1648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2191,
							"sourceUnit": 2294,
							"src": "138:41:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 1649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2191,
							"sourceUnit": 2613,
							"src": "180:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1651,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2612,
										"src": "1406:7:6"
									},
									"id": 1652,
									"nodeType": "InheritanceSpecifier",
									"src": "1406:7:6"
								},
								{
									"baseName": {
										"id": 1653,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2268,
										"src": "1415:6:6"
									},
									"id": 1654,
									"nodeType": "InheritanceSpecifier",
									"src": "1415:6:6"
								},
								{
									"baseName": {
										"id": 1655,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2293,
										"src": "1423:14:6"
									},
									"id": 1656,
									"nodeType": "InheritanceSpecifier",
									"src": "1423:14:6"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1650,
								"nodeType": "StructuredDocumentation",
								"src": "215:1172:6",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 2190,
							"linearizedBaseContracts": [
								2190,
								2293,
								2268,
								2612
							],
							"name": "ERC20",
							"nameLocation": "1397:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1660,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1480:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2190,
									"src": "1444:45:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1659,
										"keyType": {
											"id": 1657,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1452:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1444:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1658,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1463:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1666,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1552:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2190,
									"src": "1496:67:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1665,
										"keyType": {
											"id": 1661,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1504:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1496:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1664,
											"keyType": {
												"id": 1662,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1523:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1515:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1663,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1534:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1668,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1586:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 2190,
									"src": "1570:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1667,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1570:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1670,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1620:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2190,
									"src": "1605:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1669,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1605:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1672,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1646:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 2190,
									"src": "1631:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1671,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1631:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "2019:57:6",
										"statements": [
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1680,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "2029:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1681,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "2037:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2029:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "2029:13:6"
											},
											{
												"expression": {
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1684,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "2052:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1685,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "2062:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2052:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "2052:17:6"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "1660:298:6",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1689,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1989:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1975:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1975:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2010:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "1996:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1996:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1974:44:6"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:0:6"
									},
									"scope": 2190,
									"src": "1963:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2280
									],
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "2210:29:6",
										"statements": [
											{
												"expression": {
													"id": 1696,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1670,
													"src": "2227:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1695,
												"id": 1697,
												"nodeType": "Return",
												"src": "2220:12:6"
											}
										]
									},
									"documentation": {
										"id": 1690,
										"nodeType": "StructuredDocumentation",
										"src": "2082:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2150:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2177:8:6"
									},
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2154:2:6"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1699,
												"src": "2195:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1693,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2195:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:15:6"
									},
									"scope": 2190,
									"src": "2141:98:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2286
									],
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "2423:31:6",
										"statements": [
											{
												"expression": {
													"id": 1706,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "2440:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1707,
												"nodeType": "Return",
												"src": "2433:14:6"
											}
										]
									},
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "2245:102:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2361:6:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1702,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2390:8:6"
									},
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:2:6"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "2408:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2408:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:15:6"
									},
									"scope": 2190,
									"src": "2352:102:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2292
									],
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "3143:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3160:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 1715,
												"id": 1717,
												"nodeType": "Return",
												"src": "3153:9:6"
											}
										]
									},
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "2460:613:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3087:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1712,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3118:8:6"
									},
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3095:2:6"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "3136:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1713,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3136:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:7:6"
									},
									"scope": 2190,
									"src": "3078:91:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2199
									],
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "3299:36:6",
										"statements": [
											{
												"expression": {
													"id": 1726,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1668,
													"src": "3316:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1727,
												"nodeType": "Return",
												"src": "3309:19:6"
											}
										]
									},
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "3175:49:6",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3238:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1722,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3272:8:6"
									},
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:2:6"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "3290:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3289:9:6"
									},
									"scope": 2190,
									"src": "3229:106:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2207
									],
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "3476:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1738,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "3493:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1740,
													"indexExpression": {
														"id": 1739,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "3503:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3493:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1741,
												"nodeType": "Return",
												"src": "3486:25:6"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "3341:47:6",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3402:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1734,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3449:8:6"
									},
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3420:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "3412:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:17:6"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "3467:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3466:9:6"
									},
									"scope": 2190,
									"src": "3393:125:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2217
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "3813:80:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1755,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "3833:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3833:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1757,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "3847:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1758,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "3858:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1754,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "3823:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "3823:42:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3882:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1753,
												"id": 1762,
												"nodeType": "Return",
												"src": "3875:11:6"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "3524:192:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3730:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3789:8:6"
									},
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3747:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3766:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "3758:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:6"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "3807:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3807:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3806:6:6"
									},
									"scope": 2190,
									"src": "3721:172:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2227
									],
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "4049:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1775,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "4066:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1777,
														"indexExpression": {
															"id": 1776,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "4078:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4066:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1779,
													"indexExpression": {
														"id": 1778,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "4085:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4066:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1774,
												"id": 1780,
												"nodeType": "Return",
												"src": "4059:34:6"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "3899:47:6",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3960:9:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4022:8:6"
									},
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3978:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3970:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "3985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3985:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:32:6"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "4040:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:9:6"
									},
									"scope": 2190,
									"src": "3951:149:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2237
									],
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "4327:77:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1794,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "4346:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4346:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1796,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "4360:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "4369:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1793,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "4337:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4337:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "4337:39:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4393:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1792,
												"id": 1801,
												"nodeType": "Return",
												"src": "4386:11:6"
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "4106:127:6",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4247:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1789,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4303:8:6"
									},
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4263:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4255:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4280:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4272:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:33:6"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4321:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4321:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4320:6:6"
									},
									"scope": 2190,
									"src": "4238:166:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2249
									],
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "5013:336:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1817,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "5033:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1818,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "5041:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1819,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "5052:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1816,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "5023:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5023:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "5023:36:6"
											},
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5078:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1850,
														"src": "5070:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5070:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1830,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1824,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "5097:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1826,
														"indexExpression": {
															"id": 1825,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "5109:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5097:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1829,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1827,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "5117:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5117:12:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5097:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5070:60:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "5148:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "5168:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5148:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5176:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 1831,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5140:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1837,
												"nodeType": "ExpressionStatement",
												"src": "5140:79:6"
											},
											{
												"id": 1847,
												"nodeType": "UncheckedBlock",
												"src": "5229:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1839,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "5262:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1840,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "5270:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5270:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1842,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "5284:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1843,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "5303:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5284:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1838,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "5253:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5253:57:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1846,
														"nodeType": "ExpressionStatement",
														"src": "5253:57:6"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5338:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1815,
												"id": 1849,
												"nodeType": "Return",
												"src": "5331:11:6"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "4410:456:6",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4880:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1812,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4989:8:6"
									},
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4910:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4902:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4902:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4934:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4926:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4961:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "4953:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:81:6"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "5007:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1813,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5007:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5006:6:6"
									},
									"scope": 2190,
									"src": "4871:478:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "5838:118:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1862,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "5857:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5857:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "5871:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1865,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1666,
																		"src": "5880:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1868,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1866,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2602,
																			"src": "5892:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5892:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5880:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1870,
																"indexExpression": {
																	"id": 1869,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1854,
																	"src": "5906:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5880:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1871,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "5917:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5880:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1861,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "5848:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5848:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "5848:80:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5945:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1860,
												"id": 1876,
												"nodeType": "Return",
												"src": "5938:11:6"
											}
										]
									},
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "5355:384:6",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5753:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5779:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5771:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5771:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5796:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5788:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5770:37:6"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5832:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5832:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:6:6"
									},
									"scope": 2190,
									"src": "5744:212:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "6542:306:6",
										"statements": [
											{
												"assignments": [
													1889
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6560:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 1916,
														"src": "6552:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6552:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1890,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "6579:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1893,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1891,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "6591:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6591:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6579:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1895,
													"indexExpression": {
														"id": 1894,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "6605:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6579:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6552:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1898,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "6631:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1899,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "6651:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6631:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6668:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 1897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6623:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6623:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "6623:85:6"
											},
											{
												"id": 1913,
												"nodeType": "UncheckedBlock",
												"src": "6718:102:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1905,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2602,
																		"src": "6751:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6751:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1907,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "6765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1908,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "6774:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1909,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1883,
																		"src": "6793:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6774:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1904,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "6742:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:67:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1912,
														"nodeType": "ExpressionStatement",
														"src": "6742:67:6"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6837:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1887,
												"id": 1915,
												"nodeType": "Return",
												"src": "6830:11:6"
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "5962:476:6",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6452:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6478:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6470:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6495:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6487:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:42:6"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "6536:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6536:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6535:6:6"
									},
									"scope": 2190,
									"src": "6443:405:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "7439:596:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1928,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "7457:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7475:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7467:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1929,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7467:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7467:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7457:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7479:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7449:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7449:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "7449:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1938,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "7537:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7558:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7550:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1939,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7550:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7550:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7537:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7562:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7529:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7529:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "7529:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1948,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "7632:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "7640:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1950,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "7651:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1947,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "7611:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7611:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "7611:47:6"
											},
											{
												"assignments": [
													1954
												],
												"declarations": [
													{
														"constant": false,
														"id": 1954,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7677:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "7669:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1958,
												"initialValue": {
													"baseExpression": {
														"id": 1955,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "7693:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1957,
													"indexExpression": {
														"id": 1956,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "7703:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7693:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7669:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1960,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "7728:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1961,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1924,
																"src": "7745:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7753:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7720:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7720:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1965,
												"nodeType": "ExpressionStatement",
												"src": "7720:74:6"
											},
											{
												"id": 1974,
												"nodeType": "UncheckedBlock",
												"src": "7804:77:6",
												"statements": [
													{
														"expression": {
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1966,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "7828:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1968,
																"indexExpression": {
																	"id": 1967,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "7838:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7828:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1969,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "7848:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1970,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "7864:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7848:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7828:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1973,
														"nodeType": "ExpressionStatement",
														"src": "7828:42:6"
													}
												]
											},
											{
												"expression": {
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1975,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "7890:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1977,
														"indexExpression": {
															"id": 1976,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "7900:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7890:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1978,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "7914:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7890:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "7890:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1982,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "7945:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1983,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "7953:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1984,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "7964:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1981,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "7936:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7936:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1986,
												"nodeType": "EmitStatement",
												"src": "7931:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1988,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "8002:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1989,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "8010:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1990,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "8021:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "7982:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7982:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "7982:46:6"
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "6854:463:6",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7331:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7358:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "7350:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7382:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "7374:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7374:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7409:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "7401:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:81:6"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7439:0:6"
									},
									"scope": 2190,
									"src": "7322:713:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "8376:324:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2003,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "8394:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8413:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8405:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2004,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8405:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8405:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8394:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8417:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8386:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8386:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "8386:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8491:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8483:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2013,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8483:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8483:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "8495:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2018,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "8504:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2012,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "8462:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8462:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "8462:49:6"
											},
											{
												"expression": {
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2021,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "8522:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2022,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "8538:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8522:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "8522:22:6"
											},
											{
												"expression": {
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2025,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "8554:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2027,
														"indexExpression": {
															"id": 2026,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "8564:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8554:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2028,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "8576:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8554:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "8554:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8614:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8606:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2032,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8606:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8606:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2036,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "8618:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2037,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "8627:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2031,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "8597:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "EmitStatement",
												"src": "8592:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8673:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8665:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8665:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8665:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2045,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "8677:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "8686:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2040,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "8645:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8645:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2048,
												"nodeType": "ExpressionStatement",
												"src": "8645:48:6"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "8041:265:6",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8320:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "8326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8351:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "8343:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8325:33:6"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8376:0:6"
									},
									"scope": 2190,
									"src": "8311:389:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "9085:511:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2059,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "9103:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9122:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9114:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2060,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9114:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9114:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9103:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9126:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9095:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9095:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "9095:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2069,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "9194:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9211:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9203:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9203:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9203:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2074,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "9215:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2068,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "9173:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9173:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2076,
												"nodeType": "ExpressionStatement",
												"src": "9173:49:6"
											},
											{
												"assignments": [
													2078
												],
												"declarations": [
													{
														"constant": false,
														"id": 2078,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9241:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 2121,
														"src": "9233:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9233:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2082,
												"initialValue": {
													"baseExpression": {
														"id": 2079,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "9258:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2081,
													"indexExpression": {
														"id": 2080,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2053,
														"src": "9268:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9258:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9233:43:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "9294:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2085,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "9312:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9294:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9320:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 2083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9286:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9286:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "9286:71:6"
											},
											{
												"id": 2098,
												"nodeType": "UncheckedBlock",
												"src": "9367:79:6",
												"statements": [
													{
														"expression": {
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2090,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "9391:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2092,
																"indexExpression": {
																	"id": 2091,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "9401:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9391:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "9412:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2094,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2055,
																	"src": "9429:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9412:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9391:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2097,
														"nodeType": "ExpressionStatement",
														"src": "9391:44:6"
													}
												]
											},
											{
												"expression": {
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2099,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "9455:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2100,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "9471:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9455:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "9455:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2104,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "9502:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9519:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9511:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2105,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9511:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9511:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "9523:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2103,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "9493:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9493:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2111,
												"nodeType": "EmitStatement",
												"src": "9488:42:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2113,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "9561:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9578:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9570:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9570:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9570:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "9582:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2112,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "9541:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9541:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "9541:48:6"
											}
										]
									},
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "8706:309:6",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9029:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9043:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "9035:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9035:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9060:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "9052:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9034:33:6"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9085:0:6"
									},
									"scope": 2190,
									"src": "9020:576:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2166,
										"nodeType": "Block",
										"src": "10132:257:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2133,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "10150:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10167:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10159:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10159:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10159:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10150:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10171:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 2132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10142:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10142:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "10142:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2143,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "10228:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10247:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10239:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2144,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10239:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10239:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10228:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10251:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 2142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10220:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10220:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "10220:68:6"
											},
											{
												"expression": {
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2152,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "10299:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 2155,
															"indexExpression": {
																"id": 2153,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "10311:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10299:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2156,
														"indexExpression": {
															"id": 2154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "10318:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10299:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2157,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2129,
														"src": "10329:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10299:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "10299:36:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2161,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2125,
															"src": "10359:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2162,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2127,
															"src": "10366:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2163,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "10375:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2160,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "10350:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2165,
												"nodeType": "EmitStatement",
												"src": "10345:37:6"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "9602:412:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 2167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10028:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10054:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "10046:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10077:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "10069:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10069:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10102:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "10094:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10036:78:6"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10132:0:6"
									},
									"scope": 2190,
									"src": "10019:370:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "11092:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "10395:573:6",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10982:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11020:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "11012:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11012:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11042:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "11034:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11062:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "11054:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11054:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11002:72:6"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11092:0:6"
									},
									"scope": 2190,
									"src": "10973:121:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "11800:2:6",
										"statements": []
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "11100:577:6",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11691:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11728:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "11720:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11720:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11750:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "11742:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11770:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "11762:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11710:72:6"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11800:0:6"
									},
									"scope": 2190,
									"src": "11682:120:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2191,
							"src": "1388:10416:6",
							"usedErrors": []
						}
					],
					"src": "90:11715:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2268
						]
					},
					"id": 2269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2193,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:7",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2268,
							"linearizedBaseContracts": [
								2268
							],
							"name": "IERC20",
							"nameLocation": "197:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:7",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:7"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "327:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:7"
									},
									"scope": 2268,
									"src": "281:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:7",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "438:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:7"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "478:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:7"
									},
									"scope": 2268,
									"src": "419:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:7",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "725:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "744:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:7"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "778:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:7"
									},
									"scope": 2268,
									"src": "707:77:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1078:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1093:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:7"
									},
									"returnParameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "1133:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:7"
									},
									"scope": 2268,
									"src": "1059:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:7",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1812:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1829:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:7"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2237,
												"src": "1863:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:7"
									},
									"scope": 2268,
									"src": "1795:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2238,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:7",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2207:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2231:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2258:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:7"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "2297:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:7"
									},
									"scope": 2268,
									"src": "2176:127:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2250,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2258,
									"name": "Transfer",
									"nameLocation": "2478:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "2487:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "2509:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "2529:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:7"
									},
									"src": "2472:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2259,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2267,
									"name": "Approval",
									"nameLocation": "2709:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2261,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "2718:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "2741:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "2766:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:7"
									},
									"src": "2703:78:7"
								}
							],
							"scope": 2269,
							"src": "187:2596:7",
							"usedErrors": []
						}
					],
					"src": "91:2693:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							2268
						],
						"IERC20Metadata": [
							2293
						]
					},
					"id": 2294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:8"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2294,
							"sourceUnit": 2269,
							"src": "135:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2273,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2268,
										"src": "305:6:8"
									},
									"id": 2274,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2272,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 2293,
							"linearizedBaseContracts": [
								2293,
								2268
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2277,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 2293,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2281,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 2293,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 2293,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2294,
							"src": "277:405:8",
							"usedErrors": []
						}
					],
					"src": "110:573:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2590
						]
					},
					"id": 2591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2296,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2590,
							"linearizedBaseContracts": [
								2590
							],
							"name": "Address",
							"nameLocation": "187:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "837:311:9",
										"statements": [
											{
												"assignments": [
													2305
												],
												"declarations": [
													{
														"constant": false,
														"id": 2305,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2312,
														"src": "1034:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2306,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:9"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2299,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:9",
														"valueSize": 1
													},
													{
														"declaration": 2305,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:9",
														"valueSize": 1
													}
												],
												"id": 2307,
												"nodeType": "InlineAssembly",
												"src": "1056:61:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2308,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "1133:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2303,
												"id": 2311,
												"nodeType": "Return",
												"src": "1126:15:9"
											}
										]
									},
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:9",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "791:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:9"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "831:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2301,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:9"
									},
									"scope": 2590,
									"src": "771:377:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "2136:241:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2324,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2590",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2590",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2322,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2327,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "2179:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2331,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:9"
											},
											{
												"assignments": [
													2333,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2333,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2346,
														"src": "2231:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2340,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2334,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2316,
																"src": "2249:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2336,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "2271:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2342,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "2300:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2345,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:9"
											}
										]
									},
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "2084:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "2111:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:9"
									},
									"returnParameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:9"
									},
									"scope": 2590,
									"src": "2065:312:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "3208:84:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2358,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "3238:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2359,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "3246:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2357,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2364,
															2384
														],
														"referencedDeclaration": 2384,
														"src": "3225:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2356,
												"id": 2362,
												"nodeType": "Return",
												"src": "3218:67:9"
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3141:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3157:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:9"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "3194:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:9"
									},
									"scope": 2590,
									"src": "3119:173:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "3661:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2377,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "3700:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2378,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2369,
															"src": "3708:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2380,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "3717:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2376,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2404,
															2454
														],
														"referencedDeclaration": 2454,
														"src": "3678:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2375,
												"id": 2382,
												"nodeType": "Return",
												"src": "3671:59:9"
											}
										]
									},
									"documentation": {
										"id": 2365,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "3545:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "3569:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "3596:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:9"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "3647:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:9"
									},
									"scope": 2590,
									"src": "3514:223:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "4242:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2397,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "4281:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2398,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "4289:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2399,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "4295:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2396,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2404,
															2454
														],
														"referencedDeclaration": 2454,
														"src": "4259:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2395,
												"id": 2402,
												"nodeType": "Return",
												"src": "4252:94:9"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "4139:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "4163:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "4190:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:9"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "4228:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:9"
									},
									"scope": 2590,
									"src": "4099:254:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "4780:320:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2421,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2590",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2590",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2419,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2424,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2411,
																"src": "4823:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2431,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2407,
																	"src": "4900:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2430,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "4889:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2435,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:9"
											},
											{
												"assignments": [
													2437,
													2439
												],
												"declarations": [
													{
														"constant": false,
														"id": 2437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2453,
														"src": "4953:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2439,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2453,
														"src": "4967:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2438,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2446,
												"initialValue": {
													"arguments": [
														{
															"id": 2444,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "5020:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2440,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4994:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2442,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2411,
																"src": "5013:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2448,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "5059:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2449,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "5068:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2450,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "5080:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2447,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "5042:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2417,
												"id": 2452,
												"nodeType": "Return",
												"src": "5035:58:9"
											}
										]
									},
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:9",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "4641:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "4665:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "4692:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "4715:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2412,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:9"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "4766:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:9"
									},
									"scope": 2590,
									"src": "4601:499:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "5377:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "5413:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "5421:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2464,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2471,
															2506
														],
														"referencedDeclaration": 2506,
														"src": "5394:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2463,
												"id": 2469,
												"nodeType": "Return",
												"src": "5387:80:9"
											}
										]
									},
									"documentation": {
										"id": 2455,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "5305:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "5321:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:9"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "5363:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:9"
									},
									"scope": 2590,
									"src": "5277:197:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2505,
										"nodeType": "Block",
										"src": "5816:228:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2485,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "5845:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2484,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "5834:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:9"
											},
											{
												"assignments": [
													2491,
													2493
												],
												"declarations": [
													{
														"constant": false,
														"id": 2491,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2505,
														"src": "5905:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2490,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2493,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2505,
														"src": "5919:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2492,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2498,
												"initialValue": {
													"arguments": [
														{
															"id": 2496,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "5964:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2494,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2474,
															"src": "5946:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2500,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "6003:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2501,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2493,
															"src": "6012:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2502,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "6024:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2499,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "5986:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2482,
												"id": 2504,
												"nodeType": "Return",
												"src": "5979:58:9"
											}
										]
									},
									"documentation": {
										"id": 2472,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "5695:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "5719:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "5746:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:9"
									},
									"returnParameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "5802:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:9"
									},
									"scope": 2590,
									"src": "5658:386:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2522,
										"nodeType": "Block",
										"src": "6320:101:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2509,
															"src": "6358:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2518,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "6366:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2516,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2523,
															2558
														],
														"referencedDeclaration": 2558,
														"src": "6337:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2515,
												"id": 2521,
												"nodeType": "Return",
												"src": "6330:84:9"
											}
										]
									},
									"documentation": {
										"id": 2507,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "6253:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "6269:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:9"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "6306:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:9"
									},
									"scope": 2590,
									"src": "6223:198:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2557,
										"nodeType": "Block",
										"src": "6762:232:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2537,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2526,
																	"src": "6791:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2536,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2313,
																"src": "6780:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2541,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:9"
											},
											{
												"assignments": [
													2543,
													2545
												],
												"declarations": [
													{
														"constant": false,
														"id": 2543,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2557,
														"src": "6853:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2542,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2545,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2557,
														"src": "6867:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2544,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2550,
												"initialValue": {
													"arguments": [
														{
															"id": 2548,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "6914:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2546,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "6894:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2552,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "6953:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2553,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "6962:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2554,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "6974:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2551,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "6936:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2534,
												"id": 2556,
												"nodeType": "Return",
												"src": "6929:58:9"
											}
										]
									},
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "6646:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "6670:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "6697:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:9"
									},
									"returnParameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "6748:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:9"
									},
									"scope": 2590,
									"src": "6607:387:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "7374:532:9",
										"statements": [
											{
												"condition": {
													"id": 2570,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2561,
													"src": "7388:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2586,
													"nodeType": "Block",
													"src": "7445:455:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2574,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2563,
																		"src": "7529:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2584,
																"nodeType": "Block",
																"src": "7837:53:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2581,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2565,
																					"src": "7862:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2580,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2583,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:9"
																	}
																]
															},
															"id": 2585,
															"nodeType": "IfStatement",
															"src": "7525:365:9",
															"trueBody": {
																"id": 2579,
																"nodeType": "Block",
																"src": "7552:279:9",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:9",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:9"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:9"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:9",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:9",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:9"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:9"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:9"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2563,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:9",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2563,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:9",
																				"valueSize": 1
																			}
																		],
																		"id": 2578,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:9"
																	}
																]
															}
														}
													]
												},
												"id": 2587,
												"nodeType": "IfStatement",
												"src": "7384:516:9",
												"trueBody": {
													"id": 2573,
													"nodeType": "Block",
													"src": "7397:42:9",
													"statements": [
														{
															"expression": {
																"id": 2571,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "7418:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2569,
															"id": 2572,
															"nodeType": "Return",
															"src": "7411:17:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2559,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:9",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "7249:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "7271:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "7304:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:9"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "7360:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:9"
									},
									"scope": 2590,
									"src": "7214:692:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2591,
							"src": "179:7729:9",
							"usedErrors": []
						}
					],
					"src": "86:7823:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2612
						]
					},
					"id": 2613,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2592,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2593,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2612,
							"linearizedBaseContracts": [
								2612
							],
							"name": "Context",
							"nameLocation": "626:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "702:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2598,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2597,
												"id": 2600,
												"nodeType": "Return",
												"src": "712:17:10"
											}
										]
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:10"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2602,
												"src": "693:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:10"
									},
									"scope": 2612,
									"src": "640:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "809:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2607,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2606,
												"id": 2609,
												"nodeType": "Return",
												"src": "819:15:10"
											}
										]
									},
									"id": 2611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:10"
									},
									"returnParameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "793:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:10"
									},
									"scope": 2612,
									"src": "742:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2613,
							"src": "608:235:10",
							"usedErrors": []
						}
					],
					"src": "86:758:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2636
						],
						"IERC165": [
							2648
						]
					},
					"id": 2637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2614,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:11"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2637,
							"sourceUnit": 2649,
							"src": "124:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2617,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2648,
										"src": "754:7:11"
									},
									"id": 2618,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2616,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2636,
							"linearizedBaseContracts": [
								2636,
								2648
							],
							"name": "ERC165",
							"nameLocation": "744:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2647
									],
									"body": {
										"id": 2634,
										"nodeType": "Block",
										"src": "920:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2627,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2621,
														"src": "937:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2629,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2648,
																	"src": "957:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2648_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2648_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2628,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2648",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2633,
												"nodeType": "Return",
												"src": "930:47:11"
											}
										]
									},
									"documentation": {
										"id": 2619,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2623,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:11"
									},
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "856:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2620,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:11"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2635,
												"src": "914:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:11"
									},
									"scope": 2636,
									"src": "829:155:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2637,
							"src": "726:260:11",
							"usedErrors": []
						}
					],
					"src": "99:888:11"
				},
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2648
						]
					},
					"id": 2649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2638,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2639,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2648,
							"linearizedBaseContracts": [
								2648
							],
							"name": "IERC165",
							"nameLocation": "415:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "801:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2641,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:12"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:12"
									},
									"scope": 2648,
									"src": "774:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2649,
							"src": "405:447:12",
							"usedErrors": []
						}
					],
					"src": "100:753:12"
				},
				"id": 12
			}
		}
	}
}
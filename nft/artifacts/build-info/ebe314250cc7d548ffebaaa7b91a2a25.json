{
	"id": "ebe314250cc7d548ffebaaa7b91a2a25",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/NFTBreed.sol": {
				"content": "// contracts/Farming.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\n\r\n\r\nlibrary LibSafeMathForUint256Utils {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMathForUint256: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMathForUint256: subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0 || b == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMathForUint256: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMathForUint256: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMathForUint256: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    function power(uint256 a, uint256 b) internal pure returns (uint256){\r\n\r\n        if(a == 0) return 0;\r\n        if(b == 0) return 1;\r\n\r\n        uint256 c = 1;\r\n        for(uint256 i = 0; i < b; i++){\r\n            c = mul(c, a);\r\n        }\r\n    }\r\n\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\nlibrary LibArrayForUint256Utils {\r\n\r\n\t/**\r\n\t * @dev Searches a sortd uint256 array and returns the first element index that \r\n\t * match the key value, Time complexity O(log n)\r\n\t *\r\n\t * @param array is expected to be sorted in ascending order\r\n\t * @param key is element \r\n\t *\r\n\t * @return if matches key in the array return true,else return false \r\n\t * @return the first element index that match the key value,if not exist,return 0\r\n\t */\r\n\tfunction binarySearch(uint256[] storage array, uint256 key) internal view returns (bool, uint) {\r\n        if(array.length == 0){\r\n        \treturn (false, 0);\r\n        }\r\n\r\n        uint256 low = 0;\r\n        uint256 high = array.length-1;\r\n\r\n        while(low <= high){\r\n        \tuint256 mid = LibSafeMathForUint256Utils.average(low, high);\r\n        \tif(array[mid] == key){\r\n        \t\treturn (true, mid);\r\n        \t}else if (array[mid] > key) {\r\n                high = mid - 1;\r\n            } else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n\r\n        return (false, 0);\r\n    }\r\n\r\n    function firstIndexOf(uint256[] storage array, uint256 key) internal view returns (bool, uint256) {\r\n\r\n    \tif(array.length == 0){\r\n    \t\treturn (false, 0);\r\n    \t}\r\n\r\n    \tfor(uint256 i = 0; i < array.length; i++){\r\n    \t\tif(array[i] == key){\r\n    \t\t\treturn (true, i);\r\n    \t\t}\r\n    \t}\r\n    \treturn (false, 0);\r\n    }\r\n\r\n    function reverse(uint256[] storage array) internal {\r\n        uint256 temp;\r\n        for (uint i = 0; i < array.length / 2; i++) {\r\n            temp = array[i];\r\n            array[i] = array[array.length - 1 - i];\r\n            array[array.length - 1 - i] = temp;\r\n        }\r\n    }\r\n\r\n    function equals(uint256[] storage a, uint256[] storage b) internal view returns (bool){\r\n    \tif(a.length != b.length){\r\n    \t\treturn false;\r\n    \t}\r\n    \tfor(uint256 i = 0; i < a.length; i++){\r\n    \t\tif(a[i] != b[i]){\r\n    \t\t\treturn false;\r\n    \t\t}\r\n    \t}\r\n    \treturn true;\r\n    }\r\n\r\n    function removeByIndex(uint256[] storage array, uint index) internal{\r\n    \trequire(index < array.length, \"ArrayForUint256: index out of bounds\");\r\n\r\n        while (index < array.length - 1) {\r\n            array[index] = array[index + 1];\r\n            index++;\r\n        }\r\n        array.pop();\r\n    }\r\n    \r\n    function removeByValue(uint256[] storage array, uint256 value) internal{\r\n        uint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(isIn){\r\n          removeByIndex(array, index);\r\n        }\r\n    }\r\n\r\n    function addValue(uint256[] storage array, uint256 value) internal{\r\n    \tuint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(!isIn){\r\n        \tarray.push(value);\r\n        }\r\n    }\r\n\r\n    function extend(uint256[] storage a, uint256[] memory b) internal {\r\n    \tif(b.length != 0){\r\n    \t\tfor(uint i = 0; i < b.length; i++){\r\n    \t\t\ta.push(b[i]);\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    function distinct(uint256[] storage array) internal returns (uint256 length) {\r\n        bool contains;\r\n        uint index;\r\n        for (uint i = 0; i < array.length; i++) {\r\n            contains = false;\r\n            index = 0;\r\n            uint j = i+1;\r\n            for(;j < array.length; j++){\r\n                if(array[j] == array[i]){\r\n                    contains =true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (contains) {\r\n                for (j = index; j < array.length - 1; j++){\r\n                    array[j] = array[j + 1];\r\n                }\r\n                array.pop();\r\n                i--;\r\n            }\r\n        }\r\n        length = array.length;\r\n    }\r\n\r\n    function max(uint256[] storage array) internal view returns (uint256 maxValue, uint256 maxIndex) {\r\n        maxValue = array[0];\r\n        maxIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] > maxValue){\r\n                maxValue = array[i];\r\n                maxIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {\r\n        minValue = array[0];\r\n        minIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] < minValue){\r\n                minValue = array[i];\r\n                minIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncontract Breed is Ownable , ERC1155Holder{\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct NftInfo {\r\n        address contractAddress;\r\n        uint256 tokenId;\r\n    }\r\n    \r\n    struct UserInfo {\r\n        NftInfo nftA;\r\n        NftInfo nftB;\r\n        address t;\r\n        uint256 startTimestamp;\r\n        // nft_type => (token_id => breed_time)\r\n        mapping(address => mapping(uint256 => uint)) nftBreedTimes;\r\n    }\r\n\r\n    uint256 private breedInterval = 7200;\r\n    IERC20 public feeToken;\r\n    address private feeAddress;\r\n    uint256 private feeAmount;\r\n    uint randNonce = 0;\r\n\r\n    address private luckybeeMintAddress;\r\n    address private hashbeeMintAddress;\r\n    address private knightbeeMintAddress;\r\n    address private queenbeeMintAddress;\r\n    uint256 public JPDA1 = 57;\r\n    uint256 public JPDA2 = 82;\r\n    uint256 public JPDA3 = 100;\r\n\r\n    \r\n    mapping(address => UserInfo) public users;\r\n    mapping(address => uint256[]) private nftIds;\r\n    mapping(address => uint) private breedTimeLimit;\r\n\r\n    event Mating(address indexed user, address indexed nftContractA, address indexed nftContractB, uint256 tokenIdA, uint256 tokenIdB);\r\n    event Cancel(address indexed user, address indexed nftContractA, address indexed nftContractB, uint256 tokenIdA, uint256 tokenIdB);\r\n    event Claim(address indexed user, address indexed nftContract, uint256 tokenId);\r\n    \r\n    constructor() {\r\n    }\r\n\r\n    function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {\r\n        luckybeeMintAddress = luckybeeMint;\r\n        hashbeeMintAddress = hashbeeMint;\r\n        knightbeeMintAddress = knightbeeMint;\r\n        queenbeeMintAddress = queenbeeMint;\r\n        breedTimeLimit[luckybeeMintAddress] = 1;\r\n        breedTimeLimit[hashbeeMintAddress] = 1;\r\n        breedTimeLimit[knightbeeMintAddress] = 1;\r\n        breedTimeLimit[queenbeeMintAddress] = 2;\r\n    }\r\n\r\n    function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {\r\n        JPDA1 = _JPDA1;\r\n        JPDA2 = _JPDA2;\r\n        JPDA3 = _JPDA3;\r\n    }\r\n\r\n    function addNFTBatch(\r\n        address nftContractAddress,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) external onlyOwner {\r\n        LibArrayForUint256Utils.extend(nftIds[nftContractAddress], ids);\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function addNftBatchWithNumber(\r\n        address nftContractAddress,\r\n        uint256 start,\r\n        uint256 idsNumber\r\n    ) public {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        require(start > 0, \"start must more than zero\");\r\n        for (uint256 i = (idsNumber + start - 1); i >= start; i--) {\r\n            ids[i-start] = i;\r\n            amounts[i-start] = 1;\r\n            nftIds[nftContractAddress].push(i);\r\n        }\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function getUserOvipositionTime(address user) public view returns (uint256){\r\n        if (users[user].startTimestamp == 0) {\r\n            return 0;\r\n        }\r\n        return users[user].startTimestamp + breedInterval;\r\n    }\r\n\r\n    function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){\r\n        if (users[user].startTimestamp == 0) {\r\n            return (address(0), address(0), 0, 0);\r\n        }\r\n        return (users[user].nftA.contractAddress, users[user].nftB.contractAddress, users[user].nftA.tokenId, users[user].nftB.tokenId);\r\n    }\r\n\r\n    function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.startTimestamp == 0, \"Only breed once at a time\");\r\n        require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\");\r\n        require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\");\r\n        require(queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB, \"Without queenbee\");\r\n        require(!(queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB), \"Must Only one queenbee\");\r\n\r\n        feeToken.safeTransferFrom(\r\n            msg.sender,\r\n            feeAddress,\r\n            feeAmount\r\n        );\r\n        IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\");\r\n        IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\");\r\n        \r\n        user.startTimestamp = block.timestamp;\r\n        user.nftA.contractAddress = nftContractA;\r\n        user.nftA.tokenId = tokenIdA;\r\n        user.nftB.contractAddress = nftContractB;\r\n        user.nftB.tokenId = tokenIdB;\r\n\r\n        uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % 100;\r\n        randNonce++;\r\n\r\n        address nftMint;\r\n        // nft t\r\n        if(random < JPDA1) {\r\n            nftMint = luckybeeMintAddress;\r\n        } else if (random >= JPDA1 && random < JPDA2 ) {\r\n            nftMint = hashbeeMintAddress;\r\n        } else if (random >= JPDA2 && random < JPDA3) {\r\n            nftMint = knightbeeMintAddress;\r\n        } else {\r\n            nftMint = queenbeeMintAddress;\r\n        }\r\n        user.t = nftMint;\r\n        user.nftBreedTimes[nftContractA][tokenIdA] += 1;\r\n        user.nftBreedTimes[nftContractB][tokenIdB] += 1;\r\n        emit Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId);\r\n    }\r\n\r\n    function cancel() public {\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.startTimestamp != 0, \"not start mating\");\r\n\r\n        IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\");\r\n        IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\");\r\n        user.startTimestamp = 0;\r\n        emit Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId);\r\n    }\r\n\r\n    function claim() public {\r\n        uint256 nowTimestamp = block.timestamp;\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.startTimestamp != 0, \"not start mating\");\r\n        require(nowTimestamp - user.startTimestamp >= breedInterval, \"not finish mating\");\r\n\r\n        address nftMint = user.t;\r\n        (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds[nftMint]);\r\n        LibArrayForUint256Utils.removeByIndex(nftIds[nftMint], index);\r\n\r\n        IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\");\r\n        emit Claim(msg.sender, nftMint, minTokenId);\r\n    }\r\n    \r\n    function nftCount(address nft) public view returns (uint256) {\r\n        return nftIds[nft].length;\r\n    }\r\n\r\n    function urgentWithdraw(address nftContractAddress) public onlyOwner {\r\n        uint256 length = nftIds[nftContractAddress].length;\r\n        uint256[] memory amounts = new uint256[](length);\r\n        for (uint256 i = 0; i < length; i++) {\r\n            amounts[i] = 1;\r\n        }\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\");\r\n        delete nftIds[nftContractAddress];\r\n    }\r\n\r\n    function setNFT(address nft, address to) public onlyOwner {\r\n        UserInfo storage nftStore = users[to];\r\n        nftStore.t = nft;\r\n        if (nftStore.startTimestamp == 0) {\r\n            breedTimeLimit[luckybeeMintAddress] = 1;\r\n            breedTimeLimit[hashbeeMintAddress] = 1;\r\n            breedTimeLimit[knightbeeMintAddress] = 1;\r\n            breedTimeLimit[queenbeeMintAddress] = 2;\r\n        }\r\n    }\r\n\r\n    function setFeeAddress(address add) public onlyOwner {\r\n        feeAddress = add;\r\n    }\r\n\r\n    function setFeeAmount(uint256 amount) public onlyOwner {\r\n        feeAmount = amount;\r\n    }\r\n\r\n    function setFeeMintAddress(address mint) public onlyOwner {\r\n        feeToken = IERC20(mint);\r\n    }\r\n\r\n    function getFeeMintAddress() public view returns (address) {\r\n        return address(feeToken);\r\n    }\r\n\r\n    function setBreedInterval(uint256 interval) public onlyOwner {\r\n        breedInterval = interval;\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/NFTBreed.sol": {
				"Breed": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdB",
									"type": "uint256"
								}
							],
							"name": "Cancel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdB",
									"type": "uint256"
								}
							],
							"name": "Mating",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "JPDA1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JPDA2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JPDA3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addNFTBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "addNftBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeMintAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserMatingNft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserOvipositionTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContractB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenIdA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenIdB",
									"type": "uint256"
								}
							],
							"name": "mating",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								}
							],
							"name": "nftCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBreedInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "luckybeeMint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "hashbeeMint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "knightbeeMint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "queenbeeMint",
									"type": "address"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "setFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mint",
									"type": "address"
								}
							],
							"name": "setFeeMintAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_JPDA1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_JPDA2",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_JPDA3",
									"type": "uint256"
								}
							],
							"name": "setJPDA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "setNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								}
							],
							"name": "urgentWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct Breed.NftInfo",
									"name": "nftA",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct Breed.NftInfo",
									"name": "nftB",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "t",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "startTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/NFTBreed.sol\":6648:15126  contract Breed is Ownable , ERC1155Holder{... */\n  mstore(0x40, 0x80)\n    /* \"nft/NFTBreed.sol\":7140:7144  7200 */\n  0x1c20\n    /* \"nft/NFTBreed.sol\":7108:7144  uint256 private breedInterval = 7200 */\n  0x01\n  sstore\n    /* \"nft/NFTBreed.sol\":7262:7263  0 */\n  0x00\n    /* \"nft/NFTBreed.sol\":7245:7263  uint randNonce = 0 */\n  0x05\n  sstore\n    /* \"nft/NFTBreed.sol\":7463:7465  57 */\n  0x39\n    /* \"nft/NFTBreed.sol\":7440:7465  uint256 public JPDA1 = 57 */\n  0x0a\n  sstore\n    /* \"nft/NFTBreed.sol\":7495:7497  82 */\n  0x52\n    /* \"nft/NFTBreed.sol\":7472:7497  uint256 public JPDA2 = 82 */\n  0x0b\n  sstore\n    /* \"nft/NFTBreed.sol\":7527:7530  100 */\n  0x64\n    /* \"nft/NFTBreed.sol\":7504:7530  uint256 public JPDA3 = 100 */\n  0x0c\n  sstore\n    /* \"nft/NFTBreed.sol\":8066:8088  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"nft/NFTBreed.sol\":6648:15126  contract Breed is Ownable , ERC1155Holder{... */\n  jump(tag_10)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"nft/NFTBreed.sol\":6648:15126  contract Breed is Ownable , ERC1155Holder{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/NFTBreed.sol\":6648:15126  contract Breed is Ownable , ERC1155Holder{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79c5e977\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc4091443\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xec3c6dee\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xec3c6dee\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xed9371d7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xc4091443\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc971ebb3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x9fdd3a3f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x9fdd3a3f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbf90fc1e\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x79c5e977\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8705fcd4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x5c39331c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x63c66891\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x63c66891\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x647846a5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6b392680\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x5c39331c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5dada3bb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5dbc3838\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x1df0c04c\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1df0c04c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3f3ed4ca\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b02218f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x087bc228\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19b8094b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/NFTBreed.sol\":8096:8610  function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {... */\n    tag_4:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"nft/NFTBreed.sol\":14909:15011  function getFeeMintAddress() public view returns (address) {... */\n    tag_5:\n        /* \"nft/NFTBreed.sol\":14994:15002  feeToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"nft/NFTBreed.sol\":14909:15011  function getFeeMintAddress() public view returns (address) {... */\n    tag_48:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1253:1285   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1235:1286   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1223:1225   */\n      0x20\n        /* \"#utility.yul\":1208:1226   */\n      add\n        /* \"nft/NFTBreed.sol\":14909:15011  function getFeeMintAddress() public view returns (address) {... */\n      tag_42\n        /* \"#utility.yul\":1089:1292   */\n      jump\n        /* \"nft/NFTBreed.sol\":7440:7465  uint256 public JPDA1 = 57 */\n    tag_6:\n      tag_52\n      sload(0x0a)\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":1443:1468   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"nft/NFTBreed.sol\":7440:7465  uint256 public JPDA1 = 57 */\n      tag_42\n        /* \"#utility.yul\":1297:1474   */\n      jump\n        /* \"nft/NFTBreed.sol\":8618:8785  function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {... */\n    tag_7:\n      tag_44\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":9139:9761  function addNftBatchWithNumber(... */\n    tag_8:\n      tag_44\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":12954:13592  function claim() public {... */\n    tag_9:\n      tag_44\n      tag_65\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n    tag_10:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2605:2620   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":2587:2621   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2657:2672   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2652:2654   */\n      0x20\n        /* \"#utility.yul\":2637:2655   */\n      dup6\n      add\n        /* \"#utility.yul\":2630:2673   */\n      mstore\n        /* \"#utility.yul\":2689:2707   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2682:2716   */\n      mstore\n        /* \"#utility.yul\":2747:2749   */\n      0x60\n        /* \"#utility.yul\":2732:2750   */\n      dup3\n      add\n        /* \"#utility.yul\":2725:2759   */\n      mstore\n        /* \"#utility.yul\":2536:2539   */\n      0x80\n        /* \"#utility.yul\":2521:2540   */\n      add\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n      tag_42\n        /* \"#utility.yul\":2318:2765   */\n      jump\n        /* \"nft/NFTBreed.sol\":14801:14901  function setFeeMintAddress(address mint) public onlyOwner {... */\n    tag_11:\n      tag_44\n      tag_73\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":9769:9994  function getUserOvipositionTime(address user) public view returns (uint256){... */\n    tag_12:\n      tag_52\n      tag_76\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":8793:9131  function addNFTBatch(... */\n    tag_13:\n      tag_44\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":7151:7173  IERC20 public feeToken */\n    tag_14:\n      sload(0x02)\n      tag_48\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"nft/NFTBreed.sol\":14701:14793  function setFeeAmount(uint256 amount) public onlyOwner {... */\n    tag_15:\n      tag_44\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_44\n      tag_92\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":15019:15123  function setBreedInterval(uint256 interval) public onlyOwner {... */\n    tag_17:\n      tag_44\n      tag_94\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":14605:14693  function setFeeAddress(address add) public onlyOwner {... */\n    tag_18:\n      tag_44\n      tag_97\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_48)\n        /* \"nft/NFTBreed.sol\":14184:14597  function setNFT(address nft, address to) public onlyOwner {... */\n    tag_20:\n      tag_44\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":7545:7586  mapping(address => UserInfo) public users */\n    tag_21:\n      tag_106\n      tag_107\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_107:\n      0x0d\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      dup3\n      dup6\n      add\n      mstore\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      swap1\n      swap6\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      dup2\n      and\n      dup6\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      swap4\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x05\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap4\n      swap3\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      dup5\n      jump\n    tag_106:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5323:5335   */\n      dup6\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5319:5357   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5307:5358   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5407:5411   */\n      0x20\n        /* \"#utility.yul\":5396:5412   */\n      swap7\n      dup8\n      add\n        /* \"#utility.yul\":5390:5413   */\n      mload\n        /* \"#utility.yul\":5374:5388   */\n      dup8\n      dup4\n      add\n        /* \"#utility.yul\":5367:5414   */\n      mstore\n        /* \"#utility.yul\":5323:5335   */\n      dup6\n      mload\n        /* \"#utility.yul\":5319:5357   */\n      dup2\n      and\n        /* \"#utility.yul\":5839:5857   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":5307:5358   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5396:5412   */\n      swap5\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5390:5413   */\n      mload\n        /* \"#utility.yul\":5374:5388   */\n      0x60\n      dup6\n      add\n        /* \"#utility.yul\":5367:5414   */\n      mstore\n        /* \"#utility.yul\":5895:5927   */\n      swap2\n      and\n        /* \"#utility.yul\":5889:5892   */\n      0x80\n        /* \"#utility.yul\":5874:5893   */\n      dup4\n      add\n        /* \"#utility.yul\":5867:5928   */\n      mstore\n        /* \"#utility.yul\":5915:5918   */\n      0xa0\n        /* \"#utility.yul\":5944:5963   */\n      dup3\n      add\n        /* \"#utility.yul\":5937:5972   */\n      mstore\n        /* \"#utility.yul\":5739:5742   */\n      0xc0\n        /* \"#utility.yul\":5724:5743   */\n      add\n        /* \"nft/NFTBreed.sol\":7545:7586  mapping(address => UserInfo) public users */\n      tag_42\n        /* \"#utility.yul\":5425:5978   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n    tag_22:\n      tag_111\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_111:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":7628:7661   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7610:7662   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7598:7600   */\n      0x20\n        /* \"#utility.yul\":7583:7601   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n      tag_42\n        /* \"#utility.yul\":7466:7668   */\n      jump\n        /* \"nft/NFTBreed.sol\":10363:12395  function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {... */\n    tag_23:\n      tag_44\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":13717:14176  function urgentWithdraw(address nftContractAddress) public onlyOwner {... */\n    tag_24:\n      tag_44\n      tag_122\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":13604:13709  function nftCount(address nft) public view returns (uint256) {... */\n    tag_25:\n      tag_52\n      tag_125\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13683:13694  nftIds[nft] */\n      and\n        /* \"nft/NFTBreed.sol\":13656:13663  uint256 */\n      0x00\n        /* \"nft/NFTBreed.sol\":13683:13694  nftIds[nft] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13683:13689  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13683:13694  nftIds[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":13683:13701  nftIds[nft].length */\n      sload\n      swap1\n        /* \"nft/NFTBreed.sol\":13604:13709  function nftCount(address nft) public view returns (uint256) {... */\n      jump\n        /* \"nft/NFTBreed.sol\":12403:12946  function cancel() public {... */\n    tag_26:\n      tag_44\n      tag_129\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":7472:7497  uint256 public JPDA2 = 82 */\n    tag_27:\n      tag_52\n      sload(0x0b)\n      dup2\n      jump\n        /* \"nft/NFTBreed.sol\":7504:7530  uint256 public JPDA3 = 100 */\n    tag_28:\n      tag_52\n      sload(0x0c)\n      dup2\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":252:471  function onERC1155Received(... */\n    tag_29:\n      tag_111\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_44\n      tag_142\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_41:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_146\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":8096:8610  function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"nft/NFTBreed.sol\":8233:8252  luckybeeMintAddress */\n      0x06\n        /* \"nft/NFTBreed.sol\":8233:8267  luckybeeMintAddress = luckybeeMint */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"nft/NFTBreed.sol\":8278:8296  hashbeeMintAddress */\n      0x07\n        /* \"nft/NFTBreed.sol\":8278:8310  hashbeeMintAddress = hashbeeMint */\n      dup1\n      sload\n      dup3\n      and\n      swap6\n      dup8\n      and\n      swap6\n      swap1\n      swap6\n      or\n      dup6\n      sstore\n        /* \"nft/NFTBreed.sol\":8321:8341  knightbeeMintAddress */\n      0x08\n        /* \"nft/NFTBreed.sol\":8321:8357  knightbeeMintAddress = knightbeeMint */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup8\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup5\n      sstore\n        /* \"nft/NFTBreed.sol\":8368:8387  queenbeeMintAddress */\n      0x09\n        /* \"nft/NFTBreed.sol\":8368:8402  queenbeeMintAddress = queenbeeMint */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap3\n      or\n      dup3\n      sstore\n      0x00\n        /* \"nft/NFTBreed.sol\":8413:8448  breedTimeLimit[luckybeeMintAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":8413:8427  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":8413:8448  breedTimeLimit[luckybeeMintAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      0x01\n        /* \"nft/NFTBreed.sol\":8413:8452  breedTimeLimit[luckybeeMintAddress] = 1 */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":8478:8496  hashbeeMintAddress */\n      swap5\n      sload\n      dup7\n      and\n        /* \"nft/NFTBreed.sol\":8463:8497  breedTimeLimit[hashbeeMintAddress] */\n      dup3\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"nft/NFTBreed.sol\":8463:8501  breedTimeLimit[hashbeeMintAddress] = 1 */\n      dup6\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":8527:8547  knightbeeMintAddress */\n      swap3\n      sload\n      dup6\n      and\n        /* \"nft/NFTBreed.sol\":8512:8548  breedTimeLimit[knightbeeMintAddress] */\n      dup2\n      mstore\n      dup3\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":8512:8552  breedTimeLimit[knightbeeMintAddress] = 1 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"nft/NFTBreed.sol\":8578:8597  queenbeeMintAddress */\n      sload\n      swap1\n      swap3\n      and\n        /* \"nft/NFTBreed.sol\":8563:8598  breedTimeLimit[queenbeeMintAddress] */\n      dup2\n      mstore\n      keccak256\n        /* \"nft/NFTBreed.sol\":8601:8602  2 */\n      0x02\n        /* \"nft/NFTBreed.sol\":8563:8602  breedTimeLimit[queenbeeMintAddress] = 2 */\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":8096:8610  function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":8618:8785  function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {... */\n    tag_59:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_160:\n        /* \"nft/NFTBreed.sol\":8713:8718  JPDA1 */\n      0x0a\n        /* \"nft/NFTBreed.sol\":8713:8727  JPDA1 = _JPDA1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"nft/NFTBreed.sol\":8738:8743  JPDA2 */\n      0x0b\n        /* \"nft/NFTBreed.sol\":8738:8752  JPDA2 = _JPDA2 */\n      sstore\n        /* \"nft/NFTBreed.sol\":8763:8768  JPDA3 */\n      0x0c\n        /* \"nft/NFTBreed.sol\":8763:8777  JPDA3 = _JPDA3 */\n      sstore\n        /* \"nft/NFTBreed.sol\":8618:8785  function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":9139:9761  function addNftBatchWithNumber(... */\n    tag_63:\n        /* \"nft/NFTBreed.sol\":9284:9304  uint256[] memory ids */\n      0x00\n        /* \"nft/NFTBreed.sol\":9321:9330  idsNumber */\n      dup2\n        /* \"nft/NFTBreed.sol\":9307:9331  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_165\n      jumpi\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_167:\n      pop\n        /* \"nft/NFTBreed.sol\":9284:9331  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":9342:9366  uint256[] memory amounts */\n      0x00\n        /* \"nft/NFTBreed.sol\":9383:9392  idsNumber */\n      dup3\n        /* \"nft/NFTBreed.sol\":9369:9393  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_169\n      jumpi\n      tag_169\n      tag_166\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_170:\n      pop\n        /* \"nft/NFTBreed.sol\":9342:9393  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":9420:9421  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":9412:9417  start */\n      dup5\n        /* \"nft/NFTBreed.sol\":9412:9421  start > 0 */\n      gt\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9249:9251   */\n      0x20\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9231:9252   */\n      mstore\n        /* \"#utility.yul\":9288:9290   */\n      0x19\n        /* \"#utility.yul\":9268:9286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9261:9291   */\n      mstore\n        /* \"#utility.yul\":9327:9354   */\n      0x7374617274206d757374206d6f7265207468616e207a65726f00000000000000\n        /* \"#utility.yul\":9307:9325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9300:9355   */\n      mstore\n        /* \"#utility.yul\":9372:9390   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n      tag_153\n        /* \"#utility.yul\":9047:9396   */\n      jump\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n    tag_171:\n        /* \"nft/NFTBreed.sol\":9467:9476  uint256 i */\n      0x00\n        /* \"nft/NFTBreed.sol\":9500:9501  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":9480:9497  idsNumber + start */\n      tag_177\n        /* \"nft/NFTBreed.sol\":9492:9497  start */\n      dup7\n        /* \"nft/NFTBreed.sol\":9480:9489  idsNumber */\n      dup7\n        /* \"nft/NFTBreed.sol\":9480:9497  idsNumber + start */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"nft/NFTBreed.sol\":9480:9501  idsNumber + start - 1 */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"nft/NFTBreed.sol\":9467:9502  uint256 i = (idsNumber + start - 1) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":9462:9648  for (uint256 i = (idsNumber + start - 1); i >= start; i--) {... */\n    tag_174:\n        /* \"nft/NFTBreed.sol\":9509:9514  start */\n      dup5\n        /* \"nft/NFTBreed.sol\":9504:9505  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":9504:9514  i >= start */\n      lt\n        /* \"nft/NFTBreed.sol\":9462:9648  for (uint256 i = (idsNumber + start - 1); i >= start; i--) {... */\n      tag_175\n      jumpi\n        /* \"nft/NFTBreed.sol\":9551:9552  i */\n      dup1\n        /* \"nft/NFTBreed.sol\":9536:9539  ids */\n      dup4\n        /* \"nft/NFTBreed.sol\":9540:9547  i-start */\n      tag_181\n        /* \"nft/NFTBreed.sol\":9542:9547  start */\n      dup8\n        /* \"nft/NFTBreed.sol\":9551:9552  i */\n      dup4\n        /* \"nft/NFTBreed.sol\":9540:9547  i-start */\n      tag_180\n      jump\t// in\n    tag_181:\n        /* \"nft/NFTBreed.sol\":9536:9548  ids[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/NFTBreed.sol\":9536:9552  ids[i-start] = i */\n      mstore\n        /* \"nft/NFTBreed.sol\":9586:9587  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":9567:9574  amounts */\n      dup3\n        /* \"nft/NFTBreed.sol\":9575:9582  i-start */\n      tag_185\n        /* \"nft/NFTBreed.sol\":9577:9582  start */\n      dup8\n        /* \"nft/NFTBreed.sol\":9575:9576  i */\n      dup5\n        /* \"nft/NFTBreed.sol\":9575:9582  i-start */\n      tag_180\n      jump\t// in\n    tag_185:\n        /* \"nft/NFTBreed.sol\":9567:9583  amounts[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_187\n      tag_184\n      jump\t// in\n    tag_187:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":9567:9587  amounts[i-start] = 1 */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9602:9628  nftIds[nftContractAddress] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":9602:9608  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":9602:9628  nftIds[nftContractAddress] */\n      dup3\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":9602:9636  nftIds[nftContractAddress].push(i) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":9634:9635  i */\n      dup1\n        /* \"nft/NFTBreed.sol\":9516:9519  i-- */\n      tag_189\n        /* \"nft/NFTBreed.sol\":9634:9635  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":9516:9519  i-- */\n      tag_190\n      jump\t// in\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":9462:9648  for (uint256 i = (idsNumber + start - 1); i >= start; i--) {... */\n      jump(tag_174)\n    tag_175:\n      pop\n        /* \"nft/NFTBreed.sol\":9658:9753  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9658:9708  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup7\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/NFTBreed.sol\":9658:9753  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      tag_191\n      swap1\n        /* \"nft/NFTBreed.sol\":9709:9719  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":9729:9733  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":9736:9739  ids */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9741:9748  amounts */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9658:9753  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_191:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":9273:9761  {... */\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":9139:9761  function addNftBatchWithNumber(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":12954:13592  function claim() public {... */\n    tag_65:\n        /* \"nft/NFTBreed.sol\":13068:13078  msg.sender */\n      caller\n        /* \"nft/NFTBreed.sol\":12989:13009  uint256 nowTimestamp */\n      0x00\n        /* \"nft/NFTBreed.sol\":13062:13079  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13062:13067  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":13062:13079  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":13098:13117  user.startTimestamp */\n      0x05\n      dup2\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":13012:13027  block.timestamp */\n      timestamp\n      swap3\n        /* \"nft/NFTBreed.sol\":13098:13122  user.startTimestamp != 0 */\n      sub\n        /* \"nft/NFTBreed.sol\":13090:13143  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11605:11607   */\n      0x20\n        /* \"nft/NFTBreed.sol\":13090:13143  require(user.startTimestamp != 0, \"not start mating\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11587:11608   */\n      mstore\n        /* \"#utility.yul\":11644:11646   */\n      0x10\n        /* \"#utility.yul\":11624:11642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11617:11647   */\n      mstore\n      shl(0x80, 0x6e6f74207374617274206d6174696e67)\n        /* \"#utility.yul\":11663:11681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11656:11702   */\n      mstore\n        /* \"#utility.yul\":11719:11737   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":13090:13143  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_153\n        /* \"#utility.yul\":11403:11743   */\n      jump\n        /* \"nft/NFTBreed.sol\":13090:13143  require(user.startTimestamp != 0, \"not start mating\") */\n    tag_197:\n        /* \"nft/NFTBreed.sol\":13200:13213  breedInterval */\n      sload(0x01)\n        /* \"nft/NFTBreed.sol\":13177:13196  user.startTimestamp */\n      0x05\n      dup3\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":13162:13196  nowTimestamp - user.startTimestamp */\n      tag_200\n      swap1\n        /* \"nft/NFTBreed.sol\":13162:13174  nowTimestamp */\n      dup5\n        /* \"nft/NFTBreed.sol\":13162:13196  nowTimestamp - user.startTimestamp */\n      tag_180\n      jump\t// in\n    tag_200:\n        /* \"nft/NFTBreed.sol\":13162:13213  nowTimestamp - user.startTimestamp >= breedInterval */\n      lt\n      iszero\n        /* \"nft/NFTBreed.sol\":13154:13235  require(nowTimestamp - user.startTimestamp >= breedInterval, \"not finish mating\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11950:11952   */\n      0x20\n        /* \"nft/NFTBreed.sol\":13154:13235  require(nowTimestamp - user.startTimestamp >= breedInterval, \"not finish mating\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11932:11953   */\n      mstore\n        /* \"#utility.yul\":11989:11991   */\n      0x11\n        /* \"#utility.yul\":11969:11987   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11962:11992   */\n      mstore\n      shl(0x78, 0x6e6f742066696e697368206d6174696e67)\n        /* \"#utility.yul\":12008:12026   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12001:12048   */\n      mstore\n        /* \"#utility.yul\":12065:12083   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":13154:13235  require(nowTimestamp - user.startTimestamp >= breedInterval, \"not finish mating\") */\n      tag_153\n        /* \"#utility.yul\":11748:12089   */\n      jump\n        /* \"nft/NFTBreed.sol\":13154:13235  require(nowTimestamp - user.startTimestamp >= breedInterval, \"not finish mating\") */\n    tag_201:\n        /* \"nft/NFTBreed.sol\":13266:13272  user.t */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"nft/NFTBreed.sol\":13248:13263  address nftMint */\n      0x00\n        /* \"nft/NFTBreed.sol\":13349:13364  nftIds[nftMint] */\n      dup2\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13349:13355  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13349:13364  nftIds[nftMint] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":13248:13263  address nftMint */\n      dup2\n      swap1\n        /* \"nft/NFTBreed.sol\":13321:13365  LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      tag_204\n      swap1\n        /* \"nft/NFTBreed.sol\":13321:13348  LibArrayForUint256Utils.min */\n      tag_205\n        /* \"nft/NFTBreed.sol\":13321:13365  LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13414:13429  nftIds[nftMint] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13414:13420  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13414:13429  nftIds[nftMint] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":13283:13365  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":13376:13437  LibArrayForUint256Utils.removeByIndex(nftIds[nftMint], index) */\n      tag_206\n      swap1\n        /* \"nft/NFTBreed.sol\":13283:13365  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      dup3\n        /* \"nft/NFTBreed.sol\":13376:13413  LibArrayForUint256Utils.removeByIndex */\n      tag_207\n        /* \"nft/NFTBreed.sol\":13376:13437  LibArrayForUint256Utils.removeByIndex(nftIds[nftMint], index) */\n      jump\t// in\n    tag_206:\n        /* \"nft/NFTBreed.sol\":13450:13530  IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13450:13484  IERC1155(nftMint).safeTransferFrom */\n      dup5\n      and\n      swap1\n      0xf242432a\n      swap1\n        /* \"nft/NFTBreed.sol\":13450:13530  IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\") */\n      tag_208\n      swap1\n        /* \"nft/NFTBreed.sol\":13493:13497  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":13500:13510  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":13512:13522  minTokenId */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":13524:13525  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":13450:13530  IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_208:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":13546:13584  Claim(msg.sender, nftMint, minTokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":1443:1468   */\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13546:13584  Claim(msg.sender, nftMint, minTokenId) */\n      dup7\n      and\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":13552:13562  msg.sender */\n      caller\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":13546:13584  Claim(msg.sender, nftMint, minTokenId) */\n      0x70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068\n      swap1\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"nft/NFTBreed.sol\":13546:13584  Claim(msg.sender, nftMint, minTokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"nft/NFTBreed.sol\":12978:13592  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12954:13592  function claim() public {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10113:10124  users[user] */\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":10063:10070  address */\n      0x00\n        /* \"nft/NFTBreed.sol\":10113:10124  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10113:10118  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":10113:10124  users[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":10113:10139  users[user].startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10063:10070  address */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"nft/NFTBreed.sol\":10113:10144  users[user].startTimestamp == 0 */\n      dup2\n      sub\n        /* \"nft/NFTBreed.sol\":10109:10210  if (users[user].startTimestamp == 0) {... */\n      tag_215\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":10177:10178  0 */\n      0x00\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"nft/NFTBreed.sol\":10161:10198  return (address(0), address(0), 0, 0) */\n      jump(tag_214)\n        /* \"nft/NFTBreed.sol\":10109:10210  if (users[user].startTimestamp == 0) {... */\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10228:10239  users[user] */\n      dup2\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10228:10233  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":10228:10239  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":10228:10260  users[user].nftA.contractAddress */\n      dup1\n      sload\n        /* \"nft/NFTBreed.sol\":10262:10278  users[user].nftB */\n      0x02\n      dup3\n      add\n        /* \"nft/NFTBreed.sol\":10262:10294  users[user].nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":10228:10260  users[user].nftA.contractAddress */\n      0x01\n        /* \"nft/NFTBreed.sol\":10296:10320  users[user].nftA.tokenId */\n      dup4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10322:10346  users[user].nftB.tokenId */\n      0x03\n      swap1\n      swap4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10228:10260  users[user].nftA.contractAddress */\n      swap2\n      dup5\n      and\n      swap4\n        /* \"nft/NFTBreed.sol\":10262:10294  users[user].nftB.contractAddress */\n      and\n      swap2\n        /* \"nft/NFTBreed.sol\":10296:10320  users[user].nftA.tokenId */\n      swap1\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n    tag_214:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14801:14901  function setFeeMintAddress(address mint) public onlyOwner {... */\n    tag_74:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_219:\n        /* \"nft/NFTBreed.sol\":14870:14878  feeToken */\n      0x02\n        /* \"nft/NFTBreed.sol\":14870:14893  feeToken = IERC20(mint) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14801:14901  function setFeeMintAddress(address mint) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":9769:9994  function getUserOvipositionTime(address user) public view returns (uint256){... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9859:9870  users[user] */\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":9836:9843  uint256 */\n      0x00\n        /* \"nft/NFTBreed.sol\":9859:9870  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":9859:9864  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":9859:9870  users[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":9859:9885  users[user].startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":9859:9890  users[user].startTimestamp == 0 */\n      dup2\n      sub\n        /* \"nft/NFTBreed.sol\":9855:9927  if (users[user].startTimestamp == 0) {... */\n      tag_223\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":9914:9915  0 */\n      0x00\n      swap2\n        /* \"nft/NFTBreed.sol\":9769:9994  function getUserOvipositionTime(address user) public view returns (uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":9855:9927  if (users[user].startTimestamp == 0) {... */\n    tag_223:\n        /* \"nft/NFTBreed.sol\":9973:9986  breedInterval */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9944:9955  users[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":9944:9949  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":9944:9955  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":9944:9970  users[user].startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":9944:9986  users[user].startTimestamp + breedInterval */\n      tag_146\n      swap2\n        /* \"nft/NFTBreed.sol\":9973:9986  breedInterval */\n      swap1\n        /* \"nft/NFTBreed.sol\":9944:9986  users[user].startTimestamp + breedInterval */\n      tag_178\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":8793:9131  function addNFTBatch(... */\n    tag_82:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":8985:9011  nftIds[nftContractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":8985:8991  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":8985:9011  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":8954:9017  LibArrayForUint256Utils.extend(nftIds[nftContractAddress], ids) */\n      tag_231\n      swap1\n        /* \"nft/NFTBreed.sol\":9013:9016  ids */\n      dup4\n        /* \"nft/NFTBreed.sol\":8954:8984  LibArrayForUint256Utils.extend */\n      tag_232\n        /* \"nft/NFTBreed.sol\":8954:9017  LibArrayForUint256Utils.extend(nftIds[nftContractAddress], ids) */\n      jump\t// in\n    tag_231:\n        /* \"nft/NFTBreed.sol\":9028:9123  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9028:9078  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup5\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/NFTBreed.sol\":9028:9123  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      tag_233\n      swap1\n        /* \"nft/NFTBreed.sol\":9079:9089  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":9099:9103  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":9106:9109  ids */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9111:9118  amounts */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9028:9123  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_233:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":8793:9131  function addNFTBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14701:14793  function setFeeAmount(uint256 amount) public onlyOwner {... */\n    tag_90:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_240:\n        /* \"nft/NFTBreed.sol\":14767:14776  feeAmount */\n      0x04\n        /* \"nft/NFTBreed.sol\":14767:14785  feeAmount = amount */\n      sstore\n        /* \"nft/NFTBreed.sol\":14701:14793  function setFeeAmount(uint256 amount) public onlyOwner {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_246:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_249\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_250\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_249:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":15019:15123  function setBreedInterval(uint256 interval) public onlyOwner {... */\n    tag_95:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_254:\n        /* \"nft/NFTBreed.sol\":15091:15104  breedInterval */\n      0x01\n        /* \"nft/NFTBreed.sol\":15091:15115  breedInterval = interval */\n      sstore\n        /* \"nft/NFTBreed.sol\":15019:15123  function setBreedInterval(uint256 interval) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14605:14693  function setFeeAddress(address add) public onlyOwner {... */\n    tag_98:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_260:\n        /* \"nft/NFTBreed.sol\":14669:14679  feeAddress */\n      0x03\n        /* \"nft/NFTBreed.sol\":14669:14685  feeAddress = add */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14605:14693  function setFeeAddress(address add) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14184:14597  function setNFT(address nft, address to) public onlyOwner {... */\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":14281:14290  users[to] */\n      dup2\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":14253:14278  UserInfo storage nftStore */\n      0x00\n        /* \"nft/NFTBreed.sol\":14281:14290  users[to] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14281:14286  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":14281:14290  users[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":14301:14311  nftStore.t */\n      0x04\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":14301:14317  nftStore.t = nft */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap4\n      dup7\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"nft/NFTBreed.sol\":14332:14355  nftStore.startTimestamp */\n      0x05\n      dup3\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":14332:14360  nftStore.startTimestamp == 0 */\n      swap1\n      sub\n        /* \"nft/NFTBreed.sol\":14328:14590  if (nftStore.startTimestamp == 0) {... */\n      tag_270\n      jumpi\n        /* \"nft/NFTBreed.sol\":14392:14411  luckybeeMintAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":14377:14412  breedTimeLimit[luckybeeMintAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14377:14391  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":14377:14412  breedTimeLimit[luckybeeMintAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"nft/NFTBreed.sol\":14415:14416  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":14377:14416  breedTimeLimit[luckybeeMintAddress] = 1 */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14446:14464  hashbeeMintAddress */\n      sload(0x07)\n      dup5\n      and\n        /* \"nft/NFTBreed.sol\":14431:14465  breedTimeLimit[hashbeeMintAddress] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":14431:14469  breedTimeLimit[hashbeeMintAddress] = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14499:14519  knightbeeMintAddress */\n      sload(0x08)\n      dup5\n      and\n        /* \"nft/NFTBreed.sol\":14484:14520  breedTimeLimit[knightbeeMintAddress] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":14484:14524  breedTimeLimit[knightbeeMintAddress] = 1 */\n      sstore\n        /* \"nft/NFTBreed.sol\":14554:14573  queenbeeMintAddress */\n      sload(0x09)\n      swap1\n      swap3\n      and\n        /* \"nft/NFTBreed.sol\":14539:14574  breedTimeLimit[queenbeeMintAddress] */\n      dup2\n      mstore\n      keccak256\n        /* \"nft/NFTBreed.sol\":14577:14578  2 */\n      0x02\n        /* \"nft/NFTBreed.sol\":14539:14578  breedTimeLimit[queenbeeMintAddress] = 2 */\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14328:14590  if (nftStore.startTimestamp == 0) {... */\n    tag_270:\n        /* \"nft/NFTBreed.sol\":14242:14597  {... */\n      pop\n        /* \"nft/NFTBreed.sol\":14184:14597  function setNFT(address nft, address to) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":10363:12395  function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {... */\n    tag_120:\n        /* \"nft/NFTBreed.sol\":10510:10520  msg.sender */\n      caller\n        /* \"nft/NFTBreed.sol\":10480:10501  UserInfo storage user */\n      0x00\n        /* \"nft/NFTBreed.sol\":10504:10521  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10504:10509  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":10504:10521  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":10540:10559  user.startTimestamp */\n      0x05\n      dup2\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10540:10564  user.startTimestamp == 0 */\n      iszero\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12936:12938   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12918:12939   */\n      mstore\n        /* \"#utility.yul\":12975:12977   */\n      0x19\n        /* \"#utility.yul\":12955:12973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12948:12978   */\n      mstore\n        /* \"#utility.yul\":13014:13041   */\n      0x4f6e6c79206272656564206f6e636520617420612074696d6500000000000000\n        /* \"#utility.yul\":12994:13012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12987:13042   */\n      mstore\n        /* \"#utility.yul\":13059:13077   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n      tag_153\n        /* \"#utility.yul\":12734:13083   */\n      jump\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10658:10686  breedTimeLimit[nftContractA] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10658:10672  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":10658:10686  breedTimeLimit[nftContractA] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10613:10631  user.nftBreedTimes */\n      0x06\n      dup6\n      add\n        /* \"nft/NFTBreed.sol\":10613:10645  user.nftBreedTimes[nftContractA] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"nft/NFTBreed.sol\":10613:10655  user.nftBreedTimes[nftContractA][tokenIdA] */\n      dup8\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10613:10686  user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA] */\n      lt\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13290:13292   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13272:13293   */\n      mstore\n        /* \"#utility.yul\":13329:13331   */\n      0x0a\n        /* \"#utility.yul\":13309:13327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13302:13332   */\n      mstore\n      shl(0xb2, 0x151a5b59481b1a5b5a5d)\n        /* \"#utility.yul\":13348:13366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13341:13381   */\n      mstore\n        /* \"#utility.yul\":13398:13416   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n      tag_153\n        /* \"#utility.yul\":13088:13422   */\n      jump\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10765:10793  breedTimeLimit[nftContractB] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10765:10779  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":10765:10793  breedTimeLimit[nftContractB] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10720:10738  user.nftBreedTimes */\n      0x06\n      dup6\n      add\n        /* \"nft/NFTBreed.sol\":10720:10752  user.nftBreedTimes[nftContractB] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"nft/NFTBreed.sol\":10720:10762  user.nftBreedTimes[nftContractB][tokenIdB] */\n      dup7\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10720:10793  user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB] */\n      lt\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13290:13292   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13272:13293   */\n      mstore\n        /* \"#utility.yul\":13329:13331   */\n      0x0a\n        /* \"#utility.yul\":13309:13327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13302:13332   */\n      mstore\n      shl(0xb2, 0x151a5b59481b1a5b5a5d)\n        /* \"#utility.yul\":13348:13366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13341:13381   */\n      mstore\n        /* \"#utility.yul\":13398:13416   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n      tag_153\n        /* \"#utility.yul\":13088:13422   */\n      jump\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n    tag_279:\n        /* \"nft/NFTBreed.sol\":10827:10846  queenbeeMintAddress */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10827:10862  queenbeeMintAddress == nftContractA */\n      dup7\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":10827:10846  queenbeeMintAddress */\n      swap2\n      and\n        /* \"nft/NFTBreed.sol\":10827:10862  queenbeeMintAddress == nftContractA */\n      eq\n      dup1\n        /* \"nft/NFTBreed.sol\":10827:10901  queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB */\n      tag_281\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":10866:10885  queenbeeMintAddress */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10866:10901  queenbeeMintAddress == nftContractB */\n      dup6\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":10866:10885  queenbeeMintAddress */\n      swap2\n      and\n        /* \"nft/NFTBreed.sol\":10866:10901  queenbeeMintAddress == nftContractB */\n      eq\n        /* \"nft/NFTBreed.sol\":10827:10901  queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB */\n    tag_281:\n        /* \"nft/NFTBreed.sol\":10819:10922  require(queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB, \"Without queenbee\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13629:13631   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10819:10922  require(queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB, \"Without queenbee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13611:13632   */\n      mstore\n        /* \"#utility.yul\":13668:13670   */\n      0x10\n        /* \"#utility.yul\":13648:13666   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13641:13671   */\n      mstore\n      shl(0x80, 0x576974686f757420717565656e626565)\n        /* \"#utility.yul\":13687:13705   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13680:13726   */\n      mstore\n        /* \"#utility.yul\":13743:13761   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10819:10922  require(queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB, \"Without queenbee\") */\n      tag_153\n        /* \"#utility.yul\":13427:13767   */\n      jump\n        /* \"nft/NFTBreed.sol\":10819:10922  require(queenbeeMintAddress == nftContractA || queenbeeMintAddress == nftContractB, \"Without queenbee\") */\n    tag_282:\n        /* \"nft/NFTBreed.sol\":10943:10962  queenbeeMintAddress */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10943:10978  queenbeeMintAddress == nftContractA */\n      dup7\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":10943:10962  queenbeeMintAddress */\n      swap2\n      and\n        /* \"nft/NFTBreed.sol\":10943:10978  queenbeeMintAddress == nftContractA */\n      eq\n        /* \"nft/NFTBreed.sol\":10943:11017  queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB */\n      dup1\n      iszero\n      tag_285\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":10982:11001  queenbeeMintAddress */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10982:11017  queenbeeMintAddress == nftContractB */\n      dup6\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":10982:11001  queenbeeMintAddress */\n      swap2\n      and\n        /* \"nft/NFTBreed.sol\":10982:11017  queenbeeMintAddress == nftContractB */\n      eq\n        /* \"nft/NFTBreed.sol\":10943:11017  queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB */\n    tag_285:\n        /* \"nft/NFTBreed.sol\":10941:11018  !(queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB) */\n      iszero\n        /* \"nft/NFTBreed.sol\":10933:11045  require(!(queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB), \"Must Only one queenbee\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13974:13976   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10933:11045  require(!(queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB), \"Must Only one queenbee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13956:13977   */\n      mstore\n        /* \"#utility.yul\":14013:14015   */\n      0x16\n        /* \"#utility.yul\":13993:14011   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13986:14016   */\n      mstore\n      shl(0x50, 0x4d757374204f6e6c79206f6e6520717565656e626565)\n        /* \"#utility.yul\":14032:14050   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14025:14077   */\n      mstore\n        /* \"#utility.yul\":14094:14112   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10933:11045  require(!(queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB), \"Must Only one queenbee\") */\n      tag_153\n        /* \"#utility.yul\":13772:14118   */\n      jump\n        /* \"nft/NFTBreed.sol\":10933:11045  require(!(queenbeeMintAddress == nftContractA && queenbeeMintAddress == nftContractB), \"Must Only one queenbee\") */\n    tag_286:\n        /* \"nft/NFTBreed.sol\":11123:11133  feeAddress */\n      sload(0x03)\n        /* \"nft/NFTBreed.sol\":11148:11157  feeAmount */\n      sload(0x04)\n        /* \"nft/NFTBreed.sol\":11058:11066  feeToken */\n      sload(0x02)\n        /* \"nft/NFTBreed.sol\":11058:11168  feeToken.safeTransferFrom(... */\n      tag_289\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":11058:11066  feeToken */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":11098:11108  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":11123:11133  feeAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"nft/NFTBreed.sol\":11058:11083  feeToken.safeTransferFrom */\n      tag_290\n        /* \"nft/NFTBreed.sol\":11058:11168  feeToken.safeTransferFrom(... */\n      jump\t// in\n    tag_289:\n        /* \"nft/NFTBreed.sol\":11179:11262  IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":11179:11218  IERC1155(nftContractA).safeTransferFrom */\n      dup7\n      and\n      swap1\n      0xf242432a\n      swap1\n        /* \"nft/NFTBreed.sol\":11179:11262  IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\") */\n      tag_291\n      swap1\n        /* \"nft/NFTBreed.sol\":11219:11229  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":11239:11243  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":11246:11254  tokenIdA */\n      dup9\n      swap1\n        /* \"nft/NFTBreed.sol\":11256:11257  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":11179:11262  IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_291:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":11273:11356  IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":11273:11312  IERC1155(nftContractB).safeTransferFrom */\n      dup8\n      and\n      swap3\n      pop\n      0xf242432a\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":11273:11356  IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\") */\n      tag_295\n      swap1\n        /* \"nft/NFTBreed.sol\":11313:11323  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":11333:11337  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":11340:11348  tokenIdB */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":11350:11351  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":11273:11356  IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_295:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":11399:11414  block.timestamp */\n      timestamp\n        /* \"nft/NFTBreed.sol\":11377:11396  user.startTimestamp */\n      0x05\n      dup5\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":11377:11414  user.startTimestamp = block.timestamp */\n      dup3\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":11425:11465  user.nftA.contractAddress = nftContractA */\n      dup5\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      dup8\n      sstore\n      0x01\n        /* \"nft/NFTBreed.sol\":11476:11493  user.nftA.tokenId */\n      dup8\n      add\n        /* \"nft/NFTBreed.sol\":11476:11504  user.nftA.tokenId = tokenIdA */\n      dup10\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":11515:11524  user.nftB */\n      0x02\n      dup8\n      add\n        /* \"nft/NFTBreed.sol\":11515:11555  user.nftB.contractAddress = nftContractB */\n      dup1\n      sload\n      swap2\n      dup12\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n      0x03\n        /* \"nft/NFTBreed.sol\":11566:11583  user.nftB.tokenId */\n      dup6\n      add\n        /* \"nft/NFTBreed.sol\":11566:11594  user.nftB.tokenId = tokenIdB */\n      dup7\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":11682:11691  randNonce */\n      sload\n        /* \"nft/NFTBreed.sol\":11636:11692  abi.encodePacked(block.timestamp, msg.sender, randNonce) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":14308:14327   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"nft/NFTBreed.sol\":11670:11680  msg.sender */\n      caller\n        /* \"#utility.yul\":14365:14367   */\n      0x60\n        /* \"#utility.yul\":14361:14376   */\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":14357:14410   */\n      and\n        /* \"#utility.yul\":14343:14355   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":14336:14411   */\n      mstore\n        /* \"#utility.yul\":14427:14439   */\n      0x54\n      dup3\n      add\n        /* \"#utility.yul\":14420:14448   */\n      mstore\n      0x00\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":11697:11700  100 */\n      0x64\n      swap2\n      pop\n        /* \"#utility.yul\":14464:14476   */\n      0x74\n      add\n        /* \"nft/NFTBreed.sol\":11636:11692  abi.encodePacked(block.timestamp, msg.sender, randNonce) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"nft/NFTBreed.sol\":11626:11693  keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"nft/NFTBreed.sol\":11621:11694  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) */\n      0x00\n      shr\n        /* \"nft/NFTBreed.sol\":11621:11700  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % 100 */\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"nft/NFTBreed.sol\":11711:11720  randNonce */\n      0x05\n        /* \"nft/NFTBreed.sol\":11711:11722  randNonce++ */\n      dup1\n      sload\n        /* \"nft/NFTBreed.sol\":11607:11700  uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % 100 */\n      swap2\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":11711:11720  randNonce */\n      0x00\n        /* \"nft/NFTBreed.sol\":11711:11722  randNonce++ */\n      tag_303\n      dup4\n      tag_304\n      jump\t// in\n    tag_303:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft/NFTBreed.sol\":11735:11750  address nftMint */\n      0x00\n        /* \"nft/NFTBreed.sol\":11791:11796  JPDA1 */\n      sload(0x0a)\n        /* \"nft/NFTBreed.sol\":11782:11788  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11782:11796  random < JPDA1 */\n      lt\n        /* \"nft/NFTBreed.sol\":11779:12119  if(random < JPDA1) {... */\n      iszero\n      tag_305\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11823:11842  luckybeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"nft/NFTBreed.sol\":11779:12119  if(random < JPDA1) {... */\n      jump(tag_312)\n    tag_305:\n        /* \"nft/NFTBreed.sol\":11874:11879  JPDA1 */\n      sload(0x0a)\n        /* \"nft/NFTBreed.sol\":11864:11870  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11864:11879  random >= JPDA1 */\n      lt\n      iszero\n        /* \"nft/NFTBreed.sol\":11864:11897  random >= JPDA1 && random < JPDA2 */\n      dup1\n      iszero\n      tag_307\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11892:11897  JPDA2 */\n      sload(0x0b)\n        /* \"nft/NFTBreed.sol\":11883:11889  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11883:11897  random < JPDA2 */\n      lt\n        /* \"nft/NFTBreed.sol\":11864:11897  random >= JPDA1 && random < JPDA2 */\n    tag_307:\n        /* \"nft/NFTBreed.sol\":11860:12119  if (random >= JPDA1 && random < JPDA2 ) {... */\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11925:11943  hashbeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"nft/NFTBreed.sol\":11860:12119  if (random >= JPDA1 && random < JPDA2 ) {... */\n      jump(tag_312)\n    tag_308:\n        /* \"nft/NFTBreed.sol\":11975:11980  JPDA2 */\n      sload(0x0b)\n        /* \"nft/NFTBreed.sol\":11965:11971  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11965:11980  random >= JPDA2 */\n      lt\n      iszero\n        /* \"nft/NFTBreed.sol\":11965:11998  random >= JPDA2 && random < JPDA3 */\n      dup1\n      iszero\n      tag_310\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11993:11998  JPDA3 */\n      sload(0x0c)\n        /* \"nft/NFTBreed.sol\":11984:11990  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11984:11998  random < JPDA3 */\n      lt\n        /* \"nft/NFTBreed.sol\":11965:11998  random >= JPDA2 && random < JPDA3 */\n    tag_310:\n        /* \"nft/NFTBreed.sol\":11961:12119  if (random >= JPDA2 && random < JPDA3) {... */\n      iszero\n      tag_311\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":12025:12045  knightbeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"nft/NFTBreed.sol\":11961:12119  if (random >= JPDA2 && random < JPDA3) {... */\n      jump(tag_312)\n    tag_311:\n      pop\n        /* \"nft/NFTBreed.sol\":12088:12107  queenbeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"nft/NFTBreed.sol\":11961:12119  if (random >= JPDA2 && random < JPDA3) {... */\n    tag_312:\n        /* \"nft/NFTBreed.sol\":12129:12135  user.t */\n      0x04\n      dup4\n      add\n        /* \"nft/NFTBreed.sol\":12129:12145  user.t = nftMint */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"nft/NFTBreed.sol\":12156:12188  user.nftBreedTimes[nftContractA] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":12156:12174  user.nftBreedTimes */\n      0x06\n      dup5\n      add\n        /* \"nft/NFTBreed.sol\":12156:12188  user.nftBreedTimes[nftContractA] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":12156:12198  user.nftBreedTimes[nftContractA][tokenIdA] */\n      dup9\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":12156:12203  user.nftBreedTimes[nftContractA][tokenIdA] += 1 */\n      dup1\n      sload\n      0x01\n      swap3\n      swap1\n      tag_313\n      swap1\n      dup5\n      swap1\n      tag_178\n      jump\t// in\n    tag_313:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12214:12246  user.nftBreedTimes[nftContractB] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":12214:12232  user.nftBreedTimes */\n      0x06\n      dup5\n      add\n        /* \"nft/NFTBreed.sol\":12214:12246  user.nftBreedTimes[nftContractB] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":12214:12256  user.nftBreedTimes[nftContractB][tokenIdB] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":12214:12261  user.nftBreedTimes[nftContractB][tokenIdB] += 1 */\n      dup1\n      sload\n        /* \"nft/NFTBreed.sol\":12260:12261  1 */\n      0x01\n      swap3\n        /* \"nft/NFTBreed.sol\":12214:12246  user.nftBreedTimes[nftContractB] */\n      swap1\n        /* \"nft/NFTBreed.sol\":12214:12261  user.nftBreedTimes[nftContractB][tokenIdB] += 1 */\n      tag_314\n      swap1\n        /* \"nft/NFTBreed.sol\":12260:12261  1 */\n      dup5\n      swap1\n        /* \"nft/NFTBreed.sol\":12214:12261  user.nftBreedTimes[nftContractB][tokenIdB] += 1 */\n      tag_178\n      jump\t// in\n    tag_314:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12323:12332  user.nftB */\n      0x02\n      dup4\n      add\n        /* \"nft/NFTBreed.sol\":12323:12348  user.nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":12296:12321  user.nftA.contractAddress */\n      dup4\n      sload\n        /* \"nft/NFTBreed.sol\":12323:12348  user.nftB.contractAddress */\n      0x01\n        /* \"nft/NFTBreed.sol\":12350:12367  user.nftA.tokenId */\n      dup6\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12369:12386  user.nftB.tokenId */\n      0x03\n      dup7\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12277:12387  Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12323:12348  user.nftB.contractAddress */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"nft/NFTBreed.sol\":12296:12321  user.nftA.contractAddress */\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":12284:12294  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":12277:12387  Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      0xe399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b60\n      swap3\n      tag_315\n      swap3\n        /* \"#utility.yul\":15015:15040   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":15071:15073   */\n      0x20\n        /* \"#utility.yul\":15056:15074   */\n      dup3\n      add\n        /* \"#utility.yul\":15049:15083   */\n      mstore\n        /* \"#utility.yul\":15003:15005   */\n      0x40\n        /* \"#utility.yul\":14988:15006   */\n      add\n      swap1\n        /* \"#utility.yul\":14841:15089   */\n      jump\n        /* \"nft/NFTBreed.sol\":12277:12387  Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nft/NFTBreed.sol\":10469:12395  {... */\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":10363:12395  function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":13717:14176  function urgentWithdraw(address nftContractAddress) public onlyOwner {... */\n    tag_123:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13814:13840  nftIds[nftContractAddress] */\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":13797:13811  uint256 length */\n      0x00\n        /* \"nft/NFTBreed.sol\":13814:13840  nftIds[nftContractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13814:13820  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13814:13840  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":13814:13847  nftIds[nftContractAddress].length */\n      sload\n      swap1\n      dup2\n        /* \"nft/NFTBreed.sol\":13885:13906  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_324\n      jumpi\n      tag_324\n      tag_166\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_325\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_325:\n      pop\n        /* \"nft/NFTBreed.sol\":13858:13906  uint256[] memory amounts = new uint256[](length) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":13922:13931  uint256 i */\n      0x00\n        /* \"nft/NFTBreed.sol\":13917:13995  for (uint256 i = 0; i < length; i++) {... */\n    tag_326:\n        /* \"nft/NFTBreed.sol\":13941:13947  length */\n      dup3\n        /* \"nft/NFTBreed.sol\":13937:13938  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":13937:13947  i < length */\n      lt\n        /* \"nft/NFTBreed.sol\":13917:13995  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_327\n      jumpi\n        /* \"nft/NFTBreed.sol\":13982:13983  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":13969:13976  amounts */\n      dup3\n        /* \"nft/NFTBreed.sol\":13977:13978  i */\n      dup3\n        /* \"nft/NFTBreed.sol\":13969:13979  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_330\n      tag_184\n      jump\t// in\n    tag_330:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/NFTBreed.sol\":13969:13983  amounts[i] = 1 */\n      mstore\n        /* \"nft/NFTBreed.sol\":13949:13952  i++ */\n      dup1\n      tag_331\n      dup2\n      tag_304\n      jump\t// in\n    tag_331:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":13917:13995  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_326)\n    tag_327:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":14005:14055  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup4\n      and\n        /* \"nft/NFTBreed.sol\":14084:14110  nftIds[nftContractAddress] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14084:14090  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":14084:14110  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":14005:14124  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\") */\n      swap1\n      mload\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14005:14055  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      0x2eb2c2d6\n      swap2\n        /* \"nft/NFTBreed.sol\":14005:14124  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\") */\n      tag_332\n      swap2\n        /* \"nft/NFTBreed.sol\":14065:14069  this */\n      address\n      swap2\n        /* \"nft/NFTBreed.sol\":14072:14082  msg.sender */\n      caller\n      swap2\n        /* \"nft/NFTBreed.sol\":14112:14119  amounts */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":14005:14124  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\") */\n      0x04\n      add\n      tag_333\n      jump\t// in\n    tag_332:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_334\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_334:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_336:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":14142:14168  nftIds[nftContractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14142:14148  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":14142:14168  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":14135:14168  delete nftIds[nftContractAddress] */\n      tag_270\n      swap2\n      tag_338\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":12403:12946  function cancel() public {... */\n    tag_129:\n        /* \"nft/NFTBreed.sol\":12469:12479  msg.sender */\n      caller\n        /* \"nft/NFTBreed.sol\":12439:12460  UserInfo storage user */\n      0x00\n        /* \"nft/NFTBreed.sol\":12463:12480  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":12463:12468  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":12463:12480  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":12499:12518  user.startTimestamp */\n      0x05\n      dup2\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12463:12480  users[msg.sender] */\n      swap1\n      swap2\n        /* \"nft/NFTBreed.sol\":12499:12523  user.startTimestamp != 0 */\n      sub\n        /* \"nft/NFTBreed.sol\":12491:12544  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11605:11607   */\n      0x20\n        /* \"nft/NFTBreed.sol\":12491:12544  require(user.startTimestamp != 0, \"not start mating\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11587:11608   */\n      mstore\n        /* \"#utility.yul\":11644:11646   */\n      0x10\n        /* \"#utility.yul\":11624:11642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11617:11647   */\n      mstore\n      shl(0x80, 0x6e6f74207374617274206d6174696e67)\n        /* \"#utility.yul\":11663:11681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11656:11702   */\n      mstore\n        /* \"#utility.yul\":11719:11737   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":12491:12544  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_153\n        /* \"#utility.yul\":11403:11743   */\n      jump\n        /* \"nft/NFTBreed.sol\":12491:12544  require(user.startTimestamp != 0, \"not start mating\") */\n    tag_341:\n        /* \"nft/NFTBreed.sol\":12566:12591  user.nftA.contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"nft/NFTBreed.sol\":12637:12654  user.nftA.tokenId */\n      dup1\n      dup4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12557:12662  IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12566:12591  user.nftA.contractAddress */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":12557:12609  IERC1155(user.nftA.contractAddress).safeTransferFrom */\n      0xf242432a\n      swap3\n        /* \"nft/NFTBreed.sol\":12557:12662  IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\") */\n      tag_343\n      swap3\n        /* \"nft/NFTBreed.sol\":12618:12622  this */\n      address\n      swap3\n        /* \"nft/NFTBreed.sol\":12625:12635  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":12566:12591  user.nftA.contractAddress */\n      swap1\n        /* \"nft/NFTBreed.sol\":12557:12662  IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_343:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12682:12691  user.nftB */\n      0x02\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":12682:12707  user.nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":12753:12770  user.nftB.tokenId */\n      0x03\n      dup3\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12673:12778  IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12682:12707  user.nftB.contractAddress */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"nft/NFTBreed.sol\":12673:12725  IERC1155(user.nftB.contractAddress).safeTransferFrom */\n      0xf242432a\n      swap2\n        /* \"nft/NFTBreed.sol\":12673:12778  IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\") */\n      tag_347\n      swap2\n        /* \"nft/NFTBreed.sol\":12734:12738  this */\n      address\n      swap2\n        /* \"nft/NFTBreed.sol\":12741:12751  msg.sender */\n      caller\n      swap2\n        /* \"nft/NFTBreed.sol\":12682:12707  user.nftB.contractAddress */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":12673:12778  IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_347:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_348:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_350:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12811:12812  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":12789:12808  user.startTimestamp */\n      0x05\n      dup5\n      add\n        /* \"nft/NFTBreed.sol\":12789:12812  user.startTimestamp = 0 */\n      sstore\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12874:12883  user.nftB */\n      0x02\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":12874:12899  user.nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":12847:12872  user.nftA.contractAddress */\n      dup2\n      sload\n        /* \"nft/NFTBreed.sol\":12874:12899  user.nftB.contractAddress */\n      0x01\n        /* \"nft/NFTBreed.sol\":12901:12918  user.nftA.tokenId */\n      dup4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12920:12937  user.nftB.tokenId */\n      0x03\n      dup5\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12828:12938  Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12874:12899  user.nftB.contractAddress */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"nft/NFTBreed.sol\":12847:12872  user.nftA.contractAddress */\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":12835:12845  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":12828:12938  Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      0x9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d\n      swap3\n      tag_351\n      swap3\n        /* \"#utility.yul\":15015:15040   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":15071:15073   */\n      0x20\n        /* \"#utility.yul\":15056:15074   */\n      dup3\n      add\n        /* \"#utility.yul\":15049:15083   */\n      mstore\n        /* \"#utility.yul\":15003:15005   */\n      0x40\n        /* \"#utility.yul\":14988:15006   */\n      add\n      swap1\n        /* \"#utility.yul\":14841:15089   */\n      jump\n        /* \"nft/NFTBreed.sol\":12828:12938  Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nft/NFTBreed.sol\":12428:12946  {... */\n      pop\n        /* \"nft/NFTBreed.sol\":12403:12946  function cancel() public {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16553:16555   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16535:16556   */\n      mstore\n        /* \"#utility.yul\":16592:16594   */\n      0x26\n        /* \"#utility.yul\":16572:16590   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16565:16595   */\n      mstore\n        /* \"#utility.yul\":16631:16665   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16611:16629   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16604:16666   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":16682:16700   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16675:16711   */\n      mstore\n        /* \"#utility.yul\":16728:16747   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_153\n        /* \"#utility.yul\":16351:16753   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_359:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_362\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_250\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_362:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n    tag_205:\n        /* \"nft/NFTBreed.sol\":6359:6375  uint256 minValue */\n      0x00\n        /* \"nft/NFTBreed.sol\":6377:6393  uint256 minIndex */\n      dup1\n        /* \"nft/NFTBreed.sol\":6417:6422  array */\n      dup3\n        /* \"nft/NFTBreed.sol\":6423:6424  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":6417:6425  array[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_367\n      jumpi\n      tag_367\n      tag_184\n      jump\t// in\n    tag_367:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":6406:6425  minValue = array[0] */\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":6447:6448  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":6436:6448  minIndex = 0 */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":6463:6472  uint256 i */\n      0x00\n        /* \"nft/NFTBreed.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n    tag_369:\n        /* \"nft/NFTBreed.sol\":6481:6493  array.length */\n      dup4\n      sload\n        /* \"nft/NFTBreed.sol\":6477:6493  i < array.length */\n      dup2\n      lt\n        /* \"nft/NFTBreed.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      iszero\n      tag_370\n      jumpi\n        /* \"nft/NFTBreed.sol\":6527:6535  minValue */\n      dup3\n        /* \"nft/NFTBreed.sol\":6516:6521  array */\n      dup5\n        /* \"nft/NFTBreed.sol\":6522:6523  i */\n      dup3\n        /* \"nft/NFTBreed.sol\":6516:6524  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_373\n      jumpi\n      tag_373\n      tag_184\n      jump\t// in\n    tag_373:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":6516:6535  array[i] < minValue */\n      lt\n        /* \"nft/NFTBreed.sol\":6513:6621  if(array[i] < minValue){... */\n      iszero\n      tag_375\n      jumpi\n        /* \"nft/NFTBreed.sol\":6566:6571  array */\n      dup4\n        /* \"nft/NFTBreed.sol\":6572:6573  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":6566:6574  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_377\n      jumpi\n      tag_377\n      tag_184\n      jump\t// in\n    tag_377:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":6555:6574  minValue = array[i] */\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":6604:6605  i */\n      dup1\n        /* \"nft/NFTBreed.sol\":6593:6605  minIndex = i */\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":6513:6621  if(array[i] < minValue){... */\n    tag_375:\n        /* \"nft/NFTBreed.sol\":6494:6497  i++ */\n      dup1\n      tag_379\n      dup2\n      tag_304\n      jump\t// in\n    tag_379:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      jump(tag_369)\n    tag_370:\n      pop\n        /* \"nft/NFTBreed.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n    tag_207:\n        /* \"nft/NFTBreed.sol\":4304:4316  array.length */\n      dup2\n      sload\n        /* \"nft/NFTBreed.sol\":4296:4316  index < array.length */\n      dup2\n      lt\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16960:16962   */\n      0x20\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16942:16963   */\n      mstore\n        /* \"#utility.yul\":16999:17001   */\n      0x24\n        /* \"#utility.yul\":16979:16997   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16972:17002   */\n      mstore\n        /* \"#utility.yul\":17038:17072   */\n      0x4172726179466f7255696e743235363a20696e646578206f7574206f6620626f\n        /* \"#utility.yul\":17018:17036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17011:17073   */\n      mstore\n      shl(0xe0, 0x756e6473)\n        /* \"#utility.yul\":17089:17107   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17082:17116   */\n      mstore\n        /* \"#utility.yul\":17133:17152   */\n      0x84\n      add\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_153\n        /* \"#utility.yul\":16758:17158   */\n      jump\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n    tag_381:\n        /* \"nft/NFTBreed.sol\":4385:4397  array.length */\n      dup2\n      sload\n        /* \"nft/NFTBreed.sol\":4385:4401  array.length - 1 */\n      tag_386\n      swap1\n        /* \"nft/NFTBreed.sol\":4400:4401  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":4385:4401  array.length - 1 */\n      tag_180\n      jump\t// in\n    tag_386:\n        /* \"nft/NFTBreed.sol\":4377:4382  index */\n      dup2\n        /* \"nft/NFTBreed.sol\":4377:4401  index < array.length - 1 */\n      lt\n        /* \"nft/NFTBreed.sol\":4370:4483  while (index < array.length - 1) {... */\n      iszero\n      tag_385\n      jumpi\n        /* \"nft/NFTBreed.sol\":4433:4438  array */\n      dup2\n        /* \"nft/NFTBreed.sol\":4439:4448  index + 1 */\n      tag_387\n        /* \"nft/NFTBreed.sol\":4439:4444  index */\n      dup3\n        /* \"nft/NFTBreed.sol\":4447:4448  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":4439:4448  index + 1 */\n      tag_178\n      jump\t// in\n    tag_387:\n        /* \"nft/NFTBreed.sol\":4433:4449  array[index + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_389\n      jumpi\n      tag_389\n      tag_184\n      jump\t// in\n    tag_389:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":4418:4423  array */\n      dup3\n        /* \"nft/NFTBreed.sol\":4424:4429  index */\n      dup3\n        /* \"nft/NFTBreed.sol\":4418:4430  array[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_392\n      jumpi\n      tag_392\n      tag_184\n      jump\t// in\n    tag_392:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"nft/NFTBreed.sol\":4418:4449  array[index] = array[index + 1] */\n      sstore\n        /* \"nft/NFTBreed.sol\":4464:4471  index++ */\n      dup1\n      tag_394\n      dup2\n      tag_304\n      jump\t// in\n    tag_394:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":4370:4483  while (index < array.length - 1) {... */\n      jump(tag_381)\n    tag_385:\n        /* \"nft/NFTBreed.sol\":4493:4498  array */\n      dup2\n        /* \"nft/NFTBreed.sol\":4493:4504  array.pop() */\n      dup1\n      sload\n      dup1\n      tag_396\n      jumpi\n      tag_396\n      tag_397\n      jump\t// in\n    tag_396:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n    tag_232:\n        /* \"nft/NFTBreed.sol\":5085:5093  b.length */\n      dup1\n      mload\n        /* \"nft/NFTBreed.sol\":5085:5098  b.length != 0 */\n      iszero\n        /* \"nft/NFTBreed.sol\":5082:5182  if(b.length != 0){... */\n      tag_400\n      jumpi\n        /* \"nft/NFTBreed.sol\":5112:5118  uint i */\n      0x00\n        /* \"nft/NFTBreed.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n    tag_401:\n        /* \"nft/NFTBreed.sol\":5128:5129  b */\n      dup2\n        /* \"nft/NFTBreed.sol\":5128:5136  b.length */\n      mload\n        /* \"nft/NFTBreed.sol\":5124:5125  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":5124:5136  i < b.length */\n      lt\n        /* \"nft/NFTBreed.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      iszero\n      tag_270\n      jumpi\n        /* \"nft/NFTBreed.sol\":5152:5153  a */\n      dup3\n        /* \"nft/NFTBreed.sol\":5159:5160  b */\n      dup3\n        /* \"nft/NFTBreed.sol\":5161:5162  i */\n      dup3\n        /* \"nft/NFTBreed.sol\":5159:5163  b[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_184\n      jump\t// in\n    tag_405:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"nft/NFTBreed.sol\":5152:5164  a.push(b[i]) */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      add\n      sstore\n        /* \"nft/NFTBreed.sol\":5138:5141  i++ */\n      dup1\n      tag_407\n      dup2\n      tag_304\n      jump\t// in\n    tag_407:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      jump(tag_401)\n        /* \"nft/NFTBreed.sol\":5082:5182  if(b.length != 0){... */\n    tag_400:\n        /* \"nft/NFTBreed.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_250:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_290:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17553:17568   */\n      dup6\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":17535:17569   */\n      mstore\n        /* \"#utility.yul\":17605:17620   */\n      dup5\n      and\n        /* \"#utility.yul\":17585:17603   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17578:17621   */\n      mstore\n        /* \"#utility.yul\":17637:17655   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":17630:17664   */\n      dup5\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":17470:17488   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_410\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup6\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_413\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_410:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_413:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_415\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      and\n      tag_416\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_415:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      tag_270\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_418\n      swap2\n      swap1\n      tag_419\n      jump\t// in\n    tag_418:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18159:18161   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18141:18162   */\n      mstore\n        /* \"#utility.yul\":18198:18200   */\n      0x2a\n        /* \"#utility.yul\":18178:18196   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18171:18201   */\n      mstore\n        /* \"#utility.yul\":18237:18271   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":18217:18235   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18210:18272   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":18288:18306   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18281:18321   */\n      mstore\n        /* \"#utility.yul\":18338:18357   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_153\n        /* \"#utility.yul\":17957:18363   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3514:3737  function functionCall(... */\n    tag_416:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3647:3659  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3730  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_424\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3700:3706  target */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3708:3712  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3714:3715  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3717:3729  errorMessage */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3699  functionCallWithValue */\n      tag_425\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3730  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_424:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3671:3730  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3514:3737  function functionCall(... */\n    tag_423:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4601:5100  function functionCallWithValue(... */\n    tag_425:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4766:4778  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4823:4828  value */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4798:4819  address(this).balance */\n      selfbalance\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4798:4828  address(this).balance >= value */\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_427\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18570:18572   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18552:18573   */\n      mstore\n        /* \"#utility.yul\":18609:18611   */\n      0x26\n        /* \"#utility.yul\":18589:18607   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18582:18612   */\n      mstore\n        /* \"#utility.yul\":18648:18682   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":18628:18646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18621:18683   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":18699:18717   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18692:18728   */\n      mstore\n        /* \"#utility.yul\":18745:18764   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_153\n        /* \"#utility.yul\":18368:18770   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_427:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18977:18979   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18959:18980   */\n      mstore\n        /* \"#utility.yul\":19016:19018   */\n      0x1d\n        /* \"#utility.yul\":18996:19014   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18989:19019   */\n      mstore\n        /* \"#utility.yul\":19055:19086   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":19035:19053   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19028:19087   */\n      mstore\n        /* \"#utility.yul\":19104:19122   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      tag_153\n        /* \"#utility.yul\":18775:19128   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n    tag_432:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4953:4965  bool success */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4967:4990  bytes memory returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5000  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5005  target.call */\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5013:5018  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5020:5024  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5025  target.call{value: value}(data) */\n      mload(0x40)\n      tag_435\n      swap2\n      swap1\n      tag_436\n      jump\t// in\n    tag_435:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_439\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_438)\n    tag_439:\n      0x60\n      swap2\n      pop\n    tag_438:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4952:5025  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5093  verifyCallResult(success, returndata, errorMessage) */\n      tag_440\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5059:5066  success */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5068:5078  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5080:5092  errorMessage */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5058  verifyCallResult */\n      tag_441\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5093  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_440:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5035:5093  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4601:5100  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7214:7906  function verifyCallResult(... */\n    tag_441:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7360:7372  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7388:7395  success */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7384:7900  if (success) {... */\n      iszero\n      tag_444\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7418:7428  returndata */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7411:7428  return returndata */\n      jump(tag_423)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7384:7900  if (success) {... */\n    tag_444:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7529:7546  returndata.length */\n      dup3\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7529:7550  returndata.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7525:7890  if (returndata.length > 0) {... */\n      tag_446\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7723:7733  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7717:7734  mload(returndata) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7783:7798  returndata_size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7770:7780  returndata */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7766:7768  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7762:7781  add(32, returndata) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7755:7799  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7525:7890  if (returndata.length > 0) {... */\n    tag_446:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7862:7874  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7855:7875  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_449\n      jump\t// in\n    tag_338:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_362\n      swap2\n      swap1\n    tag_453:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_454\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_453)\n    tag_454:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_40:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_465:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:670   */\n    tag_455:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_469:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:1084   */\n    tag_46:\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":769:775   */\n      dup1\n        /* \"#utility.yul\":777:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      dup1\n        /* \"#utility.yul\":838:841   */\n      0x80\n        /* \"#utility.yul\":826:835   */\n      dup6\n        /* \"#utility.yul\":817:824   */\n      dup8\n        /* \"#utility.yul\":813:836   */\n      sub\n        /* \"#utility.yul\":809:842   */\n      slt\n        /* \"#utility.yul\":806:859   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":855:856   */\n      0x00\n        /* \"#utility.yul\":852:853   */\n      dup1\n        /* \"#utility.yul\":845:857   */\n      revert\n        /* \"#utility.yul\":806:859   */\n    tag_471:\n        /* \"#utility.yul\":878:907   */\n      tag_472\n        /* \"#utility.yul\":897:906   */\n      dup6\n        /* \"#utility.yul\":878:907   */\n      tag_455\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":868:907   */\n      swap4\n      pop\n        /* \"#utility.yul\":926:964   */\n      tag_473\n        /* \"#utility.yul\":960:962   */\n      0x20\n        /* \"#utility.yul\":949:958   */\n      dup7\n        /* \"#utility.yul\":945:963   */\n      add\n        /* \"#utility.yul\":926:964   */\n      tag_455\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":916:964   */\n      swap3\n      pop\n        /* \"#utility.yul\":983:1021   */\n      tag_474\n        /* \"#utility.yul\":1017:1019   */\n      0x40\n        /* \"#utility.yul\":1006:1015   */\n      dup7\n        /* \"#utility.yul\":1002:1020   */\n      add\n        /* \"#utility.yul\":983:1021   */\n      tag_455\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":973:1021   */\n      swap2\n      pop\n        /* \"#utility.yul\":1040:1078   */\n      tag_475\n        /* \"#utility.yul\":1074:1076   */\n      0x60\n        /* \"#utility.yul\":1063:1072   */\n      dup7\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1040:1078   */\n      tag_455\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":1030:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":675:1084   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1795   */\n    tag_58:\n        /* \"#utility.yul\":1556:1562   */\n      0x00\n        /* \"#utility.yul\":1564:1570   */\n      dup1\n        /* \"#utility.yul\":1572:1578   */\n      0x00\n        /* \"#utility.yul\":1625:1627   */\n      0x60\n        /* \"#utility.yul\":1613:1622   */\n      dup5\n        /* \"#utility.yul\":1604:1611   */\n      dup7\n        /* \"#utility.yul\":1600:1623   */\n      sub\n        /* \"#utility.yul\":1596:1628   */\n      slt\n        /* \"#utility.yul\":1593:1645   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":1641:1642   */\n      0x00\n        /* \"#utility.yul\":1638:1639   */\n      dup1\n        /* \"#utility.yul\":1631:1643   */\n      revert\n        /* \"#utility.yul\":1593:1645   */\n    tag_479:\n      pop\n      pop\n        /* \"#utility.yul\":1664:1687   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":1734:1736   */\n      0x20\n        /* \"#utility.yul\":1719:1737   */\n      dup4\n      add\n        /* \"#utility.yul\":1706:1738   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1785:1787   */\n      0x40\n        /* \"#utility.yul\":1770:1788   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1757:1789   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1479:1795   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1800:2122   */\n    tag_62:\n        /* \"#utility.yul\":1877:1883   */\n      0x00\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1893:1899   */\n      0x00\n        /* \"#utility.yul\":1946:1948   */\n      0x60\n        /* \"#utility.yul\":1934:1943   */\n      dup5\n        /* \"#utility.yul\":1925:1932   */\n      dup7\n        /* \"#utility.yul\":1921:1944   */\n      sub\n        /* \"#utility.yul\":1917:1949   */\n      slt\n        /* \"#utility.yul\":1914:1966   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1959:1960   */\n      dup1\n        /* \"#utility.yul\":1952:1964   */\n      revert\n        /* \"#utility.yul\":1914:1966   */\n    tag_481:\n        /* \"#utility.yul\":1985:2014   */\n      tag_482\n        /* \"#utility.yul\":2004:2013   */\n      dup5\n        /* \"#utility.yul\":1985:2014   */\n      tag_455\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":1975:2014   */\n      swap6\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2046:2064   */\n      dup6\n      add\n        /* \"#utility.yul\":2033:2065   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2112:2114   */\n      0x40\n        /* \"#utility.yul\":2097:2115   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2084:2116   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1800:2122   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2127:2313   */\n    tag_68:\n        /* \"#utility.yul\":2186:2192   */\n      0x00\n        /* \"#utility.yul\":2239:2241   */\n      0x20\n        /* \"#utility.yul\":2227:2236   */\n      dup3\n        /* \"#utility.yul\":2218:2225   */\n      dup5\n        /* \"#utility.yul\":2214:2237   */\n      sub\n        /* \"#utility.yul\":2210:2242   */\n      slt\n        /* \"#utility.yul\":2207:2259   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2252:2253   */\n      dup1\n        /* \"#utility.yul\":2245:2257   */\n      revert\n        /* \"#utility.yul\":2207:2259   */\n    tag_484:\n        /* \"#utility.yul\":2278:2307   */\n      tag_423\n        /* \"#utility.yul\":2297:2306   */\n      dup3\n        /* \"#utility.yul\":2278:2307   */\n      tag_455\n      jump\t// in\n        /* \"#utility.yul\":2770:2897   */\n    tag_166:\n        /* \"#utility.yul\":2831:2841   */\n      0x4e487b71\n        /* \"#utility.yul\":2826:2829   */\n      0xe0\n        /* \"#utility.yul\":2822:2842   */\n      shl\n        /* \"#utility.yul\":2819:2820   */\n      0x00\n        /* \"#utility.yul\":2812:2843   */\n      mstore\n        /* \"#utility.yul\":2862:2866   */\n      0x41\n        /* \"#utility.yul\":2859:2860   */\n      0x04\n        /* \"#utility.yul\":2852:2867   */\n      mstore\n        /* \"#utility.yul\":2886:2890   */\n      0x24\n        /* \"#utility.yul\":2883:2884   */\n      0x00\n        /* \"#utility.yul\":2876:2891   */\n      revert\n        /* \"#utility.yul\":2902:3177   */\n    tag_456:\n        /* \"#utility.yul\":2973:2975   */\n      0x40\n        /* \"#utility.yul\":2967:2976   */\n      mload\n        /* \"#utility.yul\":3038:3040   */\n      0x1f\n        /* \"#utility.yul\":3019:3032   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3015:3042   */\n      and\n        /* \"#utility.yul\":3003:3043   */\n      dup2\n      add\n        /* \"#utility.yul\":3073:3091   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3058:3092   */\n      dup2\n      gt\n        /* \"#utility.yul\":3094:3116   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3055:3117   */\n      or\n        /* \"#utility.yul\":3052:3140   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":3120:3138   */\n      tag_490\n      tag_166\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3156:3158   */\n      0x40\n        /* \"#utility.yul\":3149:3171   */\n      mstore\n        /* \"#utility.yul\":2902:3177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3894   */\n    tag_457:\n        /* \"#utility.yul\":3236:3241   */\n      0x00\n        /* \"#utility.yul\":3289:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3286   */\n      0x1f\n        /* \"#utility.yul\":3274:3280   */\n      dup4\n        /* \"#utility.yul\":3270:3287   */\n      add\n        /* \"#utility.yul\":3266:3293   */\n      slt\n        /* \"#utility.yul\":3256:3311   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":3307:3308   */\n      0x00\n        /* \"#utility.yul\":3304:3305   */\n      dup1\n        /* \"#utility.yul\":3297:3309   */\n      revert\n        /* \"#utility.yul\":3256:3311   */\n    tag_492:\n        /* \"#utility.yul\":3343:3349   */\n      dup2\n        /* \"#utility.yul\":3330:3350   */\n      calldataload\n        /* \"#utility.yul\":3369:3373   */\n      0x20\n        /* \"#utility.yul\":3392:3410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3388:3390   */\n      dup3\n        /* \"#utility.yul\":3385:3411   */\n      gt\n        /* \"#utility.yul\":3382:3434   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":3414:3432   */\n      tag_494\n      tag_166\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":3460:3462   */\n      dup2\n        /* \"#utility.yul\":3457:3458   */\n      0x05\n        /* \"#utility.yul\":3453:3463   */\n      shl\n        /* \"#utility.yul\":3483:3511   */\n      tag_495\n        /* \"#utility.yul\":3507:3509   */\n      dup3\n        /* \"#utility.yul\":3503:3505   */\n      dup3\n        /* \"#utility.yul\":3499:3510   */\n      add\n        /* \"#utility.yul\":3483:3511   */\n      tag_456\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":3545:3560   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3615:3630   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":3611:3635   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3576:3588   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3647:3662   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":3644:3679   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3672:3673   */\n      dup1\n        /* \"#utility.yul\":3665:3677   */\n      revert\n        /* \"#utility.yul\":3644:3679   */\n    tag_496:\n        /* \"#utility.yul\":3711:3713   */\n      dup4\n        /* \"#utility.yul\":3703:3709   */\n      dup8\n        /* \"#utility.yul\":3699:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap3\n      pop\n        /* \"#utility.yul\":3723:3865   */\n    tag_497:\n        /* \"#utility.yul\":3739:3745   */\n      dup5\n        /* \"#utility.yul\":3734:3737   */\n      dup4\n        /* \"#utility.yul\":3731:3746   */\n      lt\n        /* \"#utility.yul\":3723:3865   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3805:3822   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":3793:3823   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3756:3768   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3843:3855   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":3723:3865   */\n      jump(tag_497)\n        /* \"#utility.yul\":3899:4568   */\n    tag_81:\n        /* \"#utility.yul\":4026:4032   */\n      0x00\n        /* \"#utility.yul\":4034:4040   */\n      dup1\n        /* \"#utility.yul\":4042:4048   */\n      0x00\n        /* \"#utility.yul\":4095:4097   */\n      0x60\n        /* \"#utility.yul\":4083:4092   */\n      dup5\n        /* \"#utility.yul\":4074:4081   */\n      dup7\n        /* \"#utility.yul\":4070:4093   */\n      sub\n        /* \"#utility.yul\":4066:4098   */\n      slt\n        /* \"#utility.yul\":4063:4115   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":4111:4112   */\n      0x00\n        /* \"#utility.yul\":4108:4109   */\n      dup1\n        /* \"#utility.yul\":4101:4113   */\n      revert\n        /* \"#utility.yul\":4063:4115   */\n    tag_501:\n        /* \"#utility.yul\":4134:4163   */\n      tag_502\n        /* \"#utility.yul\":4153:4162   */\n      dup5\n        /* \"#utility.yul\":4134:4163   */\n      tag_455\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4124:4163   */\n      swap3\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"#utility.yul\":4203:4212   */\n      dup5\n        /* \"#utility.yul\":4199:4217   */\n      add\n        /* \"#utility.yul\":4186:4218   */\n      calldataload\n        /* \"#utility.yul\":4237:4255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4278:4280   */\n      dup1\n        /* \"#utility.yul\":4270:4276   */\n      dup3\n        /* \"#utility.yul\":4267:4281   */\n      gt\n        /* \"#utility.yul\":4264:4298   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4291:4292   */\n      dup1\n        /* \"#utility.yul\":4284:4296   */\n      revert\n        /* \"#utility.yul\":4264:4298   */\n    tag_503:\n        /* \"#utility.yul\":4317:4378   */\n      tag_504\n        /* \"#utility.yul\":4370:4377   */\n      dup8\n        /* \"#utility.yul\":4361:4367   */\n      dup4\n        /* \"#utility.yul\":4350:4359   */\n      dup9\n        /* \"#utility.yul\":4346:4368   */\n      add\n        /* \"#utility.yul\":4317:4378   */\n      tag_457\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":4307:4378   */\n      swap4\n      pop\n        /* \"#utility.yul\":4431:4433   */\n      0x40\n        /* \"#utility.yul\":4420:4429   */\n      dup7\n        /* \"#utility.yul\":4416:4434   */\n      add\n        /* \"#utility.yul\":4403:4435   */\n      calldataload\n        /* \"#utility.yul\":4387:4435   */\n      swap2\n      pop\n        /* \"#utility.yul\":4460:4462   */\n      dup1\n        /* \"#utility.yul\":4450:4458   */\n      dup3\n        /* \"#utility.yul\":4447:4463   */\n      gt\n        /* \"#utility.yul\":4444:4480   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4444:4480   */\n    tag_505:\n      pop\n        /* \"#utility.yul\":4499:4562   */\n      tag_506\n        /* \"#utility.yul\":4554:4561   */\n      dup7\n        /* \"#utility.yul\":4543:4551   */\n      dup3\n        /* \"#utility.yul\":4532:4541   */\n      dup8\n        /* \"#utility.yul\":4528:4552   */\n      add\n        /* \"#utility.yul\":4499:4562   */\n      tag_457\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":4489:4562   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3899:4568   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4796:4976   */\n    tag_89:\n        /* \"#utility.yul\":4855:4861   */\n      0x00\n        /* \"#utility.yul\":4908:4910   */\n      0x20\n        /* \"#utility.yul\":4896:4905   */\n      dup3\n        /* \"#utility.yul\":4887:4894   */\n      dup5\n        /* \"#utility.yul\":4883:4906   */\n      sub\n        /* \"#utility.yul\":4879:4911   */\n      slt\n        /* \"#utility.yul\":4876:4928   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":4924:4925   */\n      0x00\n        /* \"#utility.yul\":4921:4922   */\n      dup1\n        /* \"#utility.yul\":4914:4926   */\n      revert\n        /* \"#utility.yul\":4876:4928   */\n    tag_509:\n      pop\n        /* \"#utility.yul\":4947:4970   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4796:4976   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4981:5241   */\n    tag_104:\n        /* \"#utility.yul\":5049:5055   */\n      0x00\n        /* \"#utility.yul\":5057:5063   */\n      dup1\n        /* \"#utility.yul\":5110:5112   */\n      0x40\n        /* \"#utility.yul\":5098:5107   */\n      dup4\n        /* \"#utility.yul\":5089:5096   */\n      dup6\n        /* \"#utility.yul\":5085:5108   */\n      sub\n        /* \"#utility.yul\":5081:5113   */\n      slt\n        /* \"#utility.yul\":5078:5130   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":5126:5127   */\n      0x00\n        /* \"#utility.yul\":5123:5124   */\n      dup1\n        /* \"#utility.yul\":5116:5128   */\n      revert\n        /* \"#utility.yul\":5078:5130   */\n    tag_511:\n        /* \"#utility.yul\":5149:5178   */\n      tag_512\n        /* \"#utility.yul\":5168:5177   */\n      dup4\n        /* \"#utility.yul\":5149:5178   */\n      tag_455\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":5139:5178   */\n      swap2\n      pop\n        /* \"#utility.yul\":5197:5235   */\n      tag_513\n        /* \"#utility.yul\":5231:5233   */\n      0x20\n        /* \"#utility.yul\":5220:5229   */\n      dup5\n        /* \"#utility.yul\":5216:5234   */\n      add\n        /* \"#utility.yul\":5197:5235   */\n      tag_455\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":5187:5235   */\n      swap1\n      pop\n        /* \"#utility.yul\":4981:5241   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5983:6513   */\n    tag_459:\n        /* \"#utility.yul\":6025:6030   */\n      0x00\n        /* \"#utility.yul\":6078:6081   */\n      dup3\n        /* \"#utility.yul\":6071:6075   */\n      0x1f\n        /* \"#utility.yul\":6063:6069   */\n      dup4\n        /* \"#utility.yul\":6059:6076   */\n      add\n        /* \"#utility.yul\":6055:6082   */\n      slt\n        /* \"#utility.yul\":6045:6100   */\n      tag_519\n      jumpi\n        /* \"#utility.yul\":6096:6097   */\n      0x00\n        /* \"#utility.yul\":6093:6094   */\n      dup1\n        /* \"#utility.yul\":6086:6098   */\n      revert\n        /* \"#utility.yul\":6045:6100   */\n    tag_519:\n        /* \"#utility.yul\":6132:6138   */\n      dup2\n        /* \"#utility.yul\":6119:6139   */\n      calldataload\n        /* \"#utility.yul\":6158:6176   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6154:6156   */\n      dup2\n        /* \"#utility.yul\":6151:6177   */\n      gt\n        /* \"#utility.yul\":6148:6200   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":6180:6198   */\n      tag_521\n      tag_166\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6224:6279   */\n      tag_522\n        /* \"#utility.yul\":6267:6269   */\n      0x1f\n        /* \"#utility.yul\":6248:6261   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6244:6271   */\n      and\n        /* \"#utility.yul\":6273:6277   */\n      0x20\n        /* \"#utility.yul\":6240:6278   */\n      add\n        /* \"#utility.yul\":6224:6279   */\n      tag_456\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6304:6306   */\n      dup2\n        /* \"#utility.yul\":6295:6302   */\n      dup2\n        /* \"#utility.yul\":6288:6307   */\n      mstore\n        /* \"#utility.yul\":6350:6353   */\n      dup5\n        /* \"#utility.yul\":6343:6347   */\n      0x20\n        /* \"#utility.yul\":6338:6340   */\n      dup4\n        /* \"#utility.yul\":6330:6336   */\n      dup7\n        /* \"#utility.yul\":6326:6341   */\n      add\n        /* \"#utility.yul\":6322:6348   */\n      add\n        /* \"#utility.yul\":6319:6354   */\n      gt\n        /* \"#utility.yul\":6316:6371   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6364:6365   */\n      dup1\n        /* \"#utility.yul\":6357:6369   */\n      revert\n        /* \"#utility.yul\":6316:6371   */\n    tag_523:\n        /* \"#utility.yul\":6432:6434   */\n      dup2\n        /* \"#utility.yul\":6425:6429   */\n      0x20\n        /* \"#utility.yul\":6417:6423   */\n      dup6\n        /* \"#utility.yul\":6413:6430   */\n      add\n        /* \"#utility.yul\":6406:6410   */\n      0x20\n        /* \"#utility.yul\":6397:6404   */\n      dup4\n        /* \"#utility.yul\":6393:6411   */\n      add\n        /* \"#utility.yul\":6380:6435   */\n      calldatacopy\n        /* \"#utility.yul\":6480:6481   */\n      0x00\n        /* \"#utility.yul\":6455:6471   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":6473:6477   */\n      0x20\n        /* \"#utility.yul\":6451:6478   */\n      add\n        /* \"#utility.yul\":6444:6482   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6459:6466   */\n      swap4\n        /* \"#utility.yul\":5983:6513   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6518:7461   */\n    tag_113:\n        /* \"#utility.yul\":6672:6678   */\n      0x00\n        /* \"#utility.yul\":6680:6686   */\n      dup1\n        /* \"#utility.yul\":6688:6694   */\n      0x00\n        /* \"#utility.yul\":6696:6702   */\n      dup1\n        /* \"#utility.yul\":6704:6710   */\n      0x00\n        /* \"#utility.yul\":6757:6760   */\n      0xa0\n        /* \"#utility.yul\":6745:6754   */\n      dup7\n        /* \"#utility.yul\":6736:6743   */\n      dup9\n        /* \"#utility.yul\":6732:6755   */\n      sub\n        /* \"#utility.yul\":6728:6761   */\n      slt\n        /* \"#utility.yul\":6725:6778   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":6774:6775   */\n      0x00\n        /* \"#utility.yul\":6771:6772   */\n      dup1\n        /* \"#utility.yul\":6764:6776   */\n      revert\n        /* \"#utility.yul\":6725:6778   */\n    tag_525:\n        /* \"#utility.yul\":6797:6826   */\n      tag_526\n        /* \"#utility.yul\":6816:6825   */\n      dup7\n        /* \"#utility.yul\":6797:6826   */\n      tag_455\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":6787:6826   */\n      swap5\n      pop\n        /* \"#utility.yul\":6845:6883   */\n      tag_527\n        /* \"#utility.yul\":6879:6881   */\n      0x20\n        /* \"#utility.yul\":6868:6877   */\n      dup8\n        /* \"#utility.yul\":6864:6882   */\n      add\n        /* \"#utility.yul\":6845:6883   */\n      tag_455\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":6835:6883   */\n      swap4\n      pop\n        /* \"#utility.yul\":6934:6936   */\n      0x40\n        /* \"#utility.yul\":6923:6932   */\n      dup7\n        /* \"#utility.yul\":6919:6937   */\n      add\n        /* \"#utility.yul\":6906:6938   */\n      calldataload\n        /* \"#utility.yul\":6957:6975   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6998:7000   */\n      dup1\n        /* \"#utility.yul\":6990:6996   */\n      dup3\n        /* \"#utility.yul\":6987:7001   */\n      gt\n        /* \"#utility.yul\":6984:7018   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7011:7012   */\n      dup1\n        /* \"#utility.yul\":7004:7016   */\n      revert\n        /* \"#utility.yul\":6984:7018   */\n    tag_528:\n        /* \"#utility.yul\":7037:7098   */\n      tag_529\n        /* \"#utility.yul\":7090:7097   */\n      dup10\n        /* \"#utility.yul\":7081:7087   */\n      dup4\n        /* \"#utility.yul\":7070:7079   */\n      dup11\n        /* \"#utility.yul\":7066:7088   */\n      add\n        /* \"#utility.yul\":7037:7098   */\n      tag_457\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7027:7098   */\n      swap5\n      pop\n        /* \"#utility.yul\":7151:7153   */\n      0x60\n        /* \"#utility.yul\":7140:7149   */\n      dup9\n        /* \"#utility.yul\":7136:7154   */\n      add\n        /* \"#utility.yul\":7123:7155   */\n      calldataload\n        /* \"#utility.yul\":7107:7155   */\n      swap2\n      pop\n        /* \"#utility.yul\":7180:7182   */\n      dup1\n        /* \"#utility.yul\":7170:7178   */\n      dup3\n        /* \"#utility.yul\":7167:7183   */\n      gt\n        /* \"#utility.yul\":7164:7200   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":7196:7197   */\n      0x00\n        /* \"#utility.yul\":7193:7194   */\n      dup1\n        /* \"#utility.yul\":7186:7198   */\n      revert\n        /* \"#utility.yul\":7164:7200   */\n    tag_530:\n        /* \"#utility.yul\":7219:7282   */\n      tag_531\n        /* \"#utility.yul\":7274:7281   */\n      dup10\n        /* \"#utility.yul\":7263:7271   */\n      dup4\n        /* \"#utility.yul\":7252:7261   */\n      dup11\n        /* \"#utility.yul\":7248:7272   */\n      add\n        /* \"#utility.yul\":7219:7282   */\n      tag_457\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7209:7282   */\n      swap4\n      pop\n        /* \"#utility.yul\":7335:7338   */\n      0x80\n        /* \"#utility.yul\":7324:7333   */\n      dup9\n        /* \"#utility.yul\":7320:7339   */\n      add\n        /* \"#utility.yul\":7307:7340   */\n      calldataload\n        /* \"#utility.yul\":7291:7340   */\n      swap2\n      pop\n        /* \"#utility.yul\":7365:7367   */\n      dup1\n        /* \"#utility.yul\":7355:7363   */\n      dup3\n        /* \"#utility.yul\":7352:7368   */\n      gt\n        /* \"#utility.yul\":7349:7385   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":7381:7382   */\n      0x00\n        /* \"#utility.yul\":7378:7379   */\n      dup1\n        /* \"#utility.yul\":7371:7383   */\n      revert\n        /* \"#utility.yul\":7349:7385   */\n    tag_532:\n      pop\n        /* \"#utility.yul\":7404:7455   */\n      tag_533\n        /* \"#utility.yul\":7447:7454   */\n      dup9\n        /* \"#utility.yul\":7436:7444   */\n      dup3\n        /* \"#utility.yul\":7425:7434   */\n      dup10\n        /* \"#utility.yul\":7421:7445   */\n      add\n        /* \"#utility.yul\":7404:7455   */\n      tag_459\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":7394:7455   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6518:7461   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7673:8070   */\n    tag_119:\n        /* \"#utility.yul\":7759:7765   */\n      0x00\n        /* \"#utility.yul\":7767:7773   */\n      dup1\n        /* \"#utility.yul\":7775:7781   */\n      0x00\n        /* \"#utility.yul\":7783:7789   */\n      dup1\n        /* \"#utility.yul\":7836:7839   */\n      0x80\n        /* \"#utility.yul\":7824:7833   */\n      dup6\n        /* \"#utility.yul\":7815:7822   */\n      dup8\n        /* \"#utility.yul\":7811:7834   */\n      sub\n        /* \"#utility.yul\":7807:7840   */\n      slt\n        /* \"#utility.yul\":7804:7857   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":7853:7854   */\n      0x00\n        /* \"#utility.yul\":7850:7851   */\n      dup1\n        /* \"#utility.yul\":7843:7855   */\n      revert\n        /* \"#utility.yul\":7804:7857   */\n    tag_536:\n        /* \"#utility.yul\":7876:7905   */\n      tag_537\n        /* \"#utility.yul\":7895:7904   */\n      dup6\n        /* \"#utility.yul\":7876:7905   */\n      tag_455\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7866:7905   */\n      swap4\n      pop\n        /* \"#utility.yul\":7924:7962   */\n      tag_538\n        /* \"#utility.yul\":7958:7960   */\n      0x20\n        /* \"#utility.yul\":7947:7956   */\n      dup7\n        /* \"#utility.yul\":7943:7961   */\n      add\n        /* \"#utility.yul\":7924:7962   */\n      tag_455\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":7673:8070   */\n      swap4\n      swap7\n        /* \"#utility.yul\":7914:7962   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8009:8011   */\n      0x40\n        /* \"#utility.yul\":7994:8012   */\n      dup3\n      add\n        /* \"#utility.yul\":7981:8013   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":8060:8062   */\n      0x60\n        /* \"#utility.yul\":8045:8063   */\n      add\n        /* \"#utility.yul\":8032:8064   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":7673:8070   */\n      jump\t// out\n        /* \"#utility.yul\":8075:8681   */\n    tag_138:\n        /* \"#utility.yul\":8179:8185   */\n      0x00\n        /* \"#utility.yul\":8187:8193   */\n      dup1\n        /* \"#utility.yul\":8195:8201   */\n      0x00\n        /* \"#utility.yul\":8203:8209   */\n      dup1\n        /* \"#utility.yul\":8211:8217   */\n      0x00\n        /* \"#utility.yul\":8264:8267   */\n      0xa0\n        /* \"#utility.yul\":8252:8261   */\n      dup7\n        /* \"#utility.yul\":8243:8250   */\n      dup9\n        /* \"#utility.yul\":8239:8262   */\n      sub\n        /* \"#utility.yul\":8235:8268   */\n      slt\n        /* \"#utility.yul\":8232:8285   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":8281:8282   */\n      0x00\n        /* \"#utility.yul\":8278:8279   */\n      dup1\n        /* \"#utility.yul\":8271:8283   */\n      revert\n        /* \"#utility.yul\":8232:8285   */\n    tag_540:\n        /* \"#utility.yul\":8304:8333   */\n      tag_541\n        /* \"#utility.yul\":8323:8332   */\n      dup7\n        /* \"#utility.yul\":8304:8333   */\n      tag_455\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8294:8333   */\n      swap5\n      pop\n        /* \"#utility.yul\":8352:8390   */\n      tag_542\n        /* \"#utility.yul\":8386:8388   */\n      0x20\n        /* \"#utility.yul\":8375:8384   */\n      dup8\n        /* \"#utility.yul\":8371:8389   */\n      add\n        /* \"#utility.yul\":8352:8390   */\n      tag_455\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":8342:8390   */\n      swap4\n      pop\n        /* \"#utility.yul\":8437:8439   */\n      0x40\n        /* \"#utility.yul\":8426:8435   */\n      dup7\n        /* \"#utility.yul\":8422:8440   */\n      add\n        /* \"#utility.yul\":8409:8441   */\n      calldataload\n        /* \"#utility.yul\":8399:8441   */\n      swap3\n      pop\n        /* \"#utility.yul\":8488:8490   */\n      0x60\n        /* \"#utility.yul\":8477:8486   */\n      dup7\n        /* \"#utility.yul\":8473:8491   */\n      add\n        /* \"#utility.yul\":8460:8492   */\n      calldataload\n        /* \"#utility.yul\":8450:8492   */\n      swap2\n      pop\n        /* \"#utility.yul\":8543:8546   */\n      0x80\n        /* \"#utility.yul\":8532:8541   */\n      dup7\n        /* \"#utility.yul\":8528:8547   */\n      add\n        /* \"#utility.yul\":8515:8548   */\n      calldataload\n        /* \"#utility.yul\":8571:8589   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8563:8569   */\n      dup2\n        /* \"#utility.yul\":8560:8590   */\n      gt\n        /* \"#utility.yul\":8557:8607   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":8603:8604   */\n      0x00\n        /* \"#utility.yul\":8600:8601   */\n      dup1\n        /* \"#utility.yul\":8593:8605   */\n      revert\n        /* \"#utility.yul\":8557:8607   */\n    tag_543:\n        /* \"#utility.yul\":8626:8675   */\n      tag_533\n        /* \"#utility.yul\":8667:8674   */\n      dup9\n        /* \"#utility.yul\":8658:8664   */\n      dup3\n        /* \"#utility.yul\":8647:8656   */\n      dup10\n        /* \"#utility.yul\":8643:8665   */\n      add\n        /* \"#utility.yul\":8626:8675   */\n      tag_459\n      jump\t// in\n        /* \"#utility.yul\":8686:9042   */\n    tag_154:\n        /* \"#utility.yul\":8888:8890   */\n      0x20\n        /* \"#utility.yul\":8870:8891   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8907:8925   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8900:8930   */\n      mstore\n        /* \"#utility.yul\":8966:9000   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8961:8963   */\n      0x40\n        /* \"#utility.yul\":8946:8964   */\n      dup3\n      add\n        /* \"#utility.yul\":8939:9001   */\n      mstore\n        /* \"#utility.yul\":9033:9035   */\n      0x60\n        /* \"#utility.yul\":9018:9036   */\n      add\n      swap1\n        /* \"#utility.yul\":8686:9042   */\n      jump\t// out\n        /* \"#utility.yul\":9401:9528   */\n    tag_460:\n        /* \"#utility.yul\":9462:9472   */\n      0x4e487b71\n        /* \"#utility.yul\":9457:9460   */\n      0xe0\n        /* \"#utility.yul\":9453:9473   */\n      shl\n        /* \"#utility.yul\":9450:9451   */\n      0x00\n        /* \"#utility.yul\":9443:9474   */\n      mstore\n        /* \"#utility.yul\":9493:9497   */\n      0x11\n        /* \"#utility.yul\":9490:9491   */\n      0x04\n        /* \"#utility.yul\":9483:9498   */\n      mstore\n        /* \"#utility.yul\":9517:9521   */\n      0x24\n        /* \"#utility.yul\":9514:9515   */\n      0x00\n        /* \"#utility.yul\":9507:9522   */\n      revert\n        /* \"#utility.yul\":9533:9661   */\n    tag_178:\n        /* \"#utility.yul\":9573:9576   */\n      0x00\n        /* \"#utility.yul\":9604:9605   */\n      dup3\n        /* \"#utility.yul\":9600:9606   */\n      not\n        /* \"#utility.yul\":9597:9598   */\n      dup3\n        /* \"#utility.yul\":9594:9607   */\n      gt\n        /* \"#utility.yul\":9591:9630   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":9610:9628   */\n      tag_550\n      tag_460\n      jump\t// in\n    tag_550:\n      pop\n        /* \"#utility.yul\":9646:9655   */\n      add\n      swap1\n        /* \"#utility.yul\":9533:9661   */\n      jump\t// out\n        /* \"#utility.yul\":9666:9791   */\n    tag_180:\n        /* \"#utility.yul\":9706:9710   */\n      0x00\n        /* \"#utility.yul\":9734:9735   */\n      dup3\n        /* \"#utility.yul\":9731:9732   */\n      dup3\n        /* \"#utility.yul\":9728:9736   */\n      lt\n        /* \"#utility.yul\":9725:9759   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":9739:9757   */\n      tag_553\n      tag_460\n      jump\t// in\n    tag_553:\n      pop\n        /* \"#utility.yul\":9776:9785   */\n      sub\n      swap1\n        /* \"#utility.yul\":9666:9791   */\n      jump\t// out\n        /* \"#utility.yul\":9796:9923   */\n    tag_184:\n        /* \"#utility.yul\":9857:9867   */\n      0x4e487b71\n        /* \"#utility.yul\":9852:9855   */\n      0xe0\n        /* \"#utility.yul\":9848:9868   */\n      shl\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9838:9869   */\n      mstore\n        /* \"#utility.yul\":9888:9892   */\n      0x32\n        /* \"#utility.yul\":9885:9886   */\n      0x04\n        /* \"#utility.yul\":9878:9893   */\n      mstore\n        /* \"#utility.yul\":9912:9916   */\n      0x24\n        /* \"#utility.yul\":9909:9910   */\n      0x00\n        /* \"#utility.yul\":9902:9917   */\n      revert\n        /* \"#utility.yul\":9928:10064   */\n    tag_190:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9995:10000   */\n      dup2\n        /* \"#utility.yul\":9985:10024   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":10004:10022   */\n      tag_557\n      tag_460\n      jump\t// in\n    tag_557:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":10040:10058   */\n      add\n      swap1\n        /* \"#utility.yul\":9928:10064   */\n      jump\t// out\n        /* \"#utility.yul\":10069:10504   */\n    tag_461:\n        /* \"#utility.yul\":10122:10125   */\n      0x00\n        /* \"#utility.yul\":10160:10165   */\n      dup2\n        /* \"#utility.yul\":10154:10166   */\n      mload\n        /* \"#utility.yul\":10187:10193   */\n      dup1\n        /* \"#utility.yul\":10182:10185   */\n      dup5\n        /* \"#utility.yul\":10175:10194   */\n      mstore\n        /* \"#utility.yul\":10213:10217   */\n      0x20\n        /* \"#utility.yul\":10242:10244   */\n      dup1\n        /* \"#utility.yul\":10237:10240   */\n      dup6\n        /* \"#utility.yul\":10233:10245   */\n      add\n        /* \"#utility.yul\":10226:10245   */\n      swap5\n      pop\n        /* \"#utility.yul\":10279:10281   */\n      dup1\n        /* \"#utility.yul\":10272:10277   */\n      dup5\n        /* \"#utility.yul\":10268:10282   */\n      add\n        /* \"#utility.yul\":10300:10301   */\n      0x00\n        /* \"#utility.yul\":10310:10479   */\n    tag_559:\n        /* \"#utility.yul\":10324:10330   */\n      dup4\n        /* \"#utility.yul\":10321:10322   */\n      dup2\n        /* \"#utility.yul\":10318:10331   */\n      lt\n        /* \"#utility.yul\":10310:10479   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":10385:10398   */\n      dup2\n      mload\n        /* \"#utility.yul\":10373:10399   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10419:10431   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":10454:10469   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":10346:10347   */\n      0x01\n        /* \"#utility.yul\":10339:10348   */\n      add\n        /* \"#utility.yul\":10310:10479   */\n      jump(tag_559)\n    tag_561:\n      pop\n        /* \"#utility.yul\":10495:10498   */\n      swap5\n      swap6\n        /* \"#utility.yul\":10069:10504   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10509:11398   */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10960:10975   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10942:10976   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11012:11027   */\n      dup5\n      and\n        /* \"#utility.yul\":11007:11009   */\n      0x20\n        /* \"#utility.yul\":10992:11010   */\n      dup3\n      add\n        /* \"#utility.yul\":10985:11028   */\n      mstore\n        /* \"#utility.yul\":10922:10925   */\n      0xa0\n        /* \"#utility.yul\":11059:11061   */\n      0x40\n        /* \"#utility.yul\":11044:11062   */\n      dup3\n      add\n        /* \"#utility.yul\":11037:11068   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10885:10889   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11091:11148   */\n      tag_563\n      swap1\n        /* \"#utility.yul\":11128:11147   */\n      dup4\n      add\n        /* \"#utility.yul\":11120:11126   */\n      dup6\n        /* \"#utility.yul\":11091:11148   */\n      tag_461\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11196:11205   */\n      dup3\n        /* \"#utility.yul\":11188:11194   */\n      dup2\n        /* \"#utility.yul\":11184:11206   */\n      sub\n        /* \"#utility.yul\":11179:11181   */\n      0x60\n        /* \"#utility.yul\":11168:11177   */\n      dup5\n        /* \"#utility.yul\":11164:11182   */\n      add\n        /* \"#utility.yul\":11157:11207   */\n      mstore\n        /* \"#utility.yul\":11230:11274   */\n      tag_564\n        /* \"#utility.yul\":11267:11273   */\n      dup2\n        /* \"#utility.yul\":11259:11265   */\n      dup6\n        /* \"#utility.yul\":11230:11274   */\n      tag_461\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":11311:11333   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":11305:11308   */\n      0x80\n        /* \"#utility.yul\":11290:11309   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":11283:11334   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":11358:11359   */\n      0x00\n        /* \"#utility.yul\":11343:11360   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11389:11391   */\n      0x20\n        /* \"#utility.yul\":11377:11392   */\n      add\n      swap5\n        /* \"#utility.yul\":10509:11398   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12094:12729   */\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12453:12468   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":12435:12469   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12505:12520   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":12500:12502   */\n      0x20\n        /* \"#utility.yul\":12485:12503   */\n      dup4\n      add\n        /* \"#utility.yul\":12478:12521   */\n      mstore\n        /* \"#utility.yul\":12552:12554   */\n      0x40\n        /* \"#utility.yul\":12537:12555   */\n      dup3\n      add\n        /* \"#utility.yul\":12530:12564   */\n      mstore\n        /* \"#utility.yul\":12595:12597   */\n      0x60\n        /* \"#utility.yul\":12580:12598   */\n      dup2\n      add\n        /* \"#utility.yul\":12573:12607   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12415:12418   */\n      0xa0\n        /* \"#utility.yul\":12638:12641   */\n      0x80\n        /* \"#utility.yul\":12623:12642   */\n      dup3\n      add\n        /* \"#utility.yul\":12616:12648   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12378:12382   */\n      0x00\n        /* \"#utility.yul\":12664:12683   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12657:12687   */\n      mstore\n        /* \"#utility.yul\":12719:12722   */\n      0xc0\n        /* \"#utility.yul\":12704:12723   */\n      add\n      swap1\n        /* \"#utility.yul\":12094:12729   */\n      jump\t// out\n        /* \"#utility.yul\":14487:14696   */\n    tag_302:\n        /* \"#utility.yul\":14519:14520   */\n      0x00\n        /* \"#utility.yul\":14545:14546   */\n      dup3\n        /* \"#utility.yul\":14535:14667   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":14589:14599   */\n      0x4e487b71\n        /* \"#utility.yul\":14584:14587   */\n      0xe0\n        /* \"#utility.yul\":14580:14600   */\n      shl\n        /* \"#utility.yul\":14577:14578   */\n      0x00\n        /* \"#utility.yul\":14570:14601   */\n      mstore\n        /* \"#utility.yul\":14624:14628   */\n      0x12\n        /* \"#utility.yul\":14621:14622   */\n      0x04\n        /* \"#utility.yul\":14614:14629   */\n      mstore\n        /* \"#utility.yul\":14652:14656   */\n      0x24\n        /* \"#utility.yul\":14649:14650   */\n      0x00\n        /* \"#utility.yul\":14642:14657   */\n      revert\n        /* \"#utility.yul\":14535:14667   */\n    tag_574:\n      pop\n        /* \"#utility.yul\":14681:14690   */\n      mod\n      swap1\n        /* \"#utility.yul\":14487:14696   */\n      jump\t// out\n        /* \"#utility.yul\":14701:14836   */\n    tag_304:\n        /* \"#utility.yul\":14740:14743   */\n      0x00\n        /* \"#utility.yul\":14761:14778   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":14758:14801   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":14781:14799   */\n      tag_577\n      tag_460\n      jump\t// in\n    tag_577:\n      pop\n        /* \"#utility.yul\":14828:14829   */\n      0x01\n        /* \"#utility.yul\":14817:14830   */\n      add\n      swap1\n        /* \"#utility.yul\":14701:14836   */\n      jump\t// out\n        /* \"#utility.yul\":15094:16346   */\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15584:15599   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":15566:15600   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15657:15672   */\n      dup5\n      and\n        /* \"#utility.yul\":15619:15621   */\n      0x20\n        /* \"#utility.yul\":15637:15655   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":15630:15673   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":15515:15518   */\n      0xa0\n        /* \"#utility.yul\":15704:15706   */\n      0x40\n        /* \"#utility.yul\":15689:15707   */\n      dup4\n      add\n        /* \"#utility.yul\":15682:15713   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15762:15775   */\n      dup5\n      sload\n        /* \"#utility.yul\":15500:15519   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":15784:15806   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15467:15471   */\n      0x00\n        /* \"#utility.yul\":15850:15867   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":15890:15906   */\n      dup3\n      dup2\n      keccak256\n        /* \"#utility.yul\":15467:15471   */\n      swap1\n      swap3\n        /* \"#utility.yul\":15890:15906   */\n      swap1\n      swap2\n        /* \"#utility.yul\":15837:15840   */\n      0xc0\n        /* \"#utility.yul\":15822:15841   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":15619:15621   */\n      swap1\n        /* \"#utility.yul\":15467:15471   */\n      dup5\n        /* \"#utility.yul\":15934:16102   */\n    tag_580:\n        /* \"#utility.yul\":15948:15954   */\n      dup2\n        /* \"#utility.yul\":15945:15946   */\n      dup2\n        /* \"#utility.yul\":15942:15955   */\n      lt\n        /* \"#utility.yul\":15934:16102   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":16009:16022   */\n      dup5\n      sload\n        /* \"#utility.yul\":15997:16023   */\n      dup5\n      mstore\n        /* \"#utility.yul\":16090:16091   */\n      0x01\n        /* \"#utility.yul\":16078:16092   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":16043:16055   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":15963:15972   */\n      add\n        /* \"#utility.yul\":15934:16102   */\n      jump(tag_580)\n    tag_582:\n        /* \"#utility.yul\":15938:15941   */\n      pop\n      pop\n        /* \"#utility.yul\":16147:16156   */\n      dup5\n        /* \"#utility.yul\":16142:16145   */\n      dup3\n        /* \"#utility.yul\":16138:16157   */\n      sub\n        /* \"#utility.yul\":16133:16135   */\n      0x60\n        /* \"#utility.yul\":16122:16131   */\n      dup7\n        /* \"#utility.yul\":16118:16136   */\n      add\n        /* \"#utility.yul\":16111:16158   */\n      mstore\n        /* \"#utility.yul\":16181:16222   */\n      tag_583\n        /* \"#utility.yul\":16218:16221   */\n      dup3\n        /* \"#utility.yul\":16210:16216   */\n      dup8\n        /* \"#utility.yul\":16181:16222   */\n      tag_461\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":16259:16281   */\n      dup6\n      dup2\n      sub\n        /* \"#utility.yul\":16253:16256   */\n      0x80\n        /* \"#utility.yul\":16238:16257   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":16231:16282   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":16306:16307   */\n      0x00\n        /* \"#utility.yul\":16291:16308   */\n      dup6\n      mstore\n        /* \"#utility.yul\":16325:16340   */\n      swap1\n      swap4\n      add\n      swap8\n        /* \"#utility.yul\":15094:16346   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17163:17290   */\n    tag_397:\n        /* \"#utility.yul\":17224:17234   */\n      0x4e487b71\n        /* \"#utility.yul\":17219:17222   */\n      0xe0\n        /* \"#utility.yul\":17215:17235   */\n      shl\n        /* \"#utility.yul\":17212:17213   */\n      0x00\n        /* \"#utility.yul\":17205:17236   */\n      mstore\n        /* \"#utility.yul\":17255:17259   */\n      0x31\n        /* \"#utility.yul\":17252:17253   */\n      0x04\n        /* \"#utility.yul\":17245:17260   */\n      mstore\n        /* \"#utility.yul\":17279:17283   */\n      0x24\n        /* \"#utility.yul\":17276:17277   */\n      0x00\n        /* \"#utility.yul\":17269:17284   */\n      revert\n        /* \"#utility.yul\":17675:17952   */\n    tag_419:\n        /* \"#utility.yul\":17742:17748   */\n      0x00\n        /* \"#utility.yul\":17795:17797   */\n      0x20\n        /* \"#utility.yul\":17783:17792   */\n      dup3\n        /* \"#utility.yul\":17774:17781   */\n      dup5\n        /* \"#utility.yul\":17770:17793   */\n      sub\n        /* \"#utility.yul\":17766:17798   */\n      slt\n        /* \"#utility.yul\":17763:17815   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":17811:17812   */\n      0x00\n        /* \"#utility.yul\":17808:17809   */\n      dup1\n        /* \"#utility.yul\":17801:17813   */\n      revert\n        /* \"#utility.yul\":17763:17815   */\n    tag_589:\n        /* \"#utility.yul\":17843:17852   */\n      dup2\n        /* \"#utility.yul\":17837:17853   */\n      mload\n        /* \"#utility.yul\":17896:17901   */\n      dup1\n        /* \"#utility.yul\":17889:17902   */\n      iszero\n        /* \"#utility.yul\":17882:17903   */\n      iszero\n        /* \"#utility.yul\":17875:17880   */\n      dup2\n        /* \"#utility.yul\":17872:17904   */\n      eq\n        /* \"#utility.yul\":17862:17922   */\n      tag_423\n      jumpi\n        /* \"#utility.yul\":17918:17919   */\n      0x00\n        /* \"#utility.yul\":17915:17916   */\n      dup1\n        /* \"#utility.yul\":17908:17920   */\n      revert\n        /* \"#utility.yul\":19133:19391   */\n    tag_462:\n        /* \"#utility.yul\":19205:19206   */\n      0x00\n        /* \"#utility.yul\":19215:19328   */\n    tag_595:\n        /* \"#utility.yul\":19229:19235   */\n      dup4\n        /* \"#utility.yul\":19226:19227   */\n      dup2\n        /* \"#utility.yul\":19223:19236   */\n      lt\n        /* \"#utility.yul\":19215:19328   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":19305:19316   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":19299:19317   */\n      mload\n        /* \"#utility.yul\":19286:19297   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":19279:19318   */\n      mstore\n        /* \"#utility.yul\":19251:19253   */\n      0x20\n        /* \"#utility.yul\":19244:19254   */\n      add\n        /* \"#utility.yul\":19215:19328   */\n      jump(tag_595)\n    tag_597:\n        /* \"#utility.yul\":19346:19352   */\n      dup4\n        /* \"#utility.yul\":19343:19344   */\n      dup2\n        /* \"#utility.yul\":19340:19353   */\n      gt\n        /* \"#utility.yul\":19337:19385   */\n      iszero\n      tag_410\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":19381:19382   */\n      0x00\n        /* \"#utility.yul\":19363:19379   */\n      swap2\n      add\n        /* \"#utility.yul\":19356:19383   */\n      mstore\n        /* \"#utility.yul\":19133:19391   */\n      jump\t// out\n        /* \"#utility.yul\":19396:19670   */\n    tag_436:\n        /* \"#utility.yul\":19525:19528   */\n      0x00\n        /* \"#utility.yul\":19563:19569   */\n      dup3\n        /* \"#utility.yul\":19557:19570   */\n      mload\n        /* \"#utility.yul\":19579:19632   */\n      tag_600\n        /* \"#utility.yul\":19625:19631   */\n      dup2\n        /* \"#utility.yul\":19620:19623   */\n      dup5\n        /* \"#utility.yul\":19613:19617   */\n      0x20\n        /* \"#utility.yul\":19605:19611   */\n      dup8\n        /* \"#utility.yul\":19601:19618   */\n      add\n        /* \"#utility.yul\":19579:19632   */\n      tag_462\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19648:19664   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":19396:19670   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19675:20058   */\n    tag_449:\n        /* \"#utility.yul\":19824:19826   */\n      0x20\n        /* \"#utility.yul\":19813:19822   */\n      dup2\n        /* \"#utility.yul\":19806:19827   */\n      mstore\n        /* \"#utility.yul\":19787:19791   */\n      0x00\n        /* \"#utility.yul\":19856:19862   */\n      dup3\n        /* \"#utility.yul\":19850:19863   */\n      mload\n        /* \"#utility.yul\":19899:19905   */\n      dup1\n        /* \"#utility.yul\":19894:19896   */\n      0x20\n        /* \"#utility.yul\":19883:19892   */\n      dup5\n        /* \"#utility.yul\":19879:19897   */\n      add\n        /* \"#utility.yul\":19872:19906   */\n      mstore\n        /* \"#utility.yul\":19915:19981   */\n      tag_602\n        /* \"#utility.yul\":19974:19980   */\n      dup2\n        /* \"#utility.yul\":19969:19971   */\n      0x40\n        /* \"#utility.yul\":19958:19967   */\n      dup6\n        /* \"#utility.yul\":19954:19972   */\n      add\n        /* \"#utility.yul\":19949:19951   */\n      0x20\n        /* \"#utility.yul\":19941:19947   */\n      dup8\n        /* \"#utility.yul\":19937:19952   */\n      add\n        /* \"#utility.yul\":19915:19981   */\n      tag_462\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":20042:20044   */\n      0x1f\n        /* \"#utility.yul\":20021:20036   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":20017:20046   */\n      and\n        /* \"#utility.yul\":20002:20047   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":20049:20051   */\n      0x40\n        /* \"#utility.yul\":19998:20052   */\n      add\n      swap3\n        /* \"#utility.yul\":19675:20058   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207f0cf5ebd275ba066f8c481b04b4ec56f0af722bb21e111db6c5e0c09a35b9d764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1898": {
									"entryPoint": null,
									"id": 1898,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2838": {
									"entryPoint": null,
									"id": 2838,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1978": {
									"entryPoint": 57,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052611c2060015560006005556039600a556052600b556064600c5534801561002a57600080fd5b5061003433610039565b610089565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612248806100986000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806379c5e977116100f9578063c409144311610097578063ec3c6dee11610071578063ec3c6dee146104a6578063ed9371d7146104af578063f23a6e61146104b8578063f2fde38b146104d757600080fd5b8063c409144314610462578063c971ebb314610475578063ea8a1af01461049e57600080fd5b80639fdd3a3f116100d35780639fdd3a3f1461034c578063a87430ba1461035f578063bc197c8114610417578063bf90fc1e1461044f57600080fd5b806379c5e977146103155780638705fcd4146103285780638da5cb5b1461033b57600080fd5b80635c39331c1161016657806363c668911161014057806363c66891146102d4578063647846a5146102e75780636b392680146102fa578063715018a61461030d57600080fd5b80635c39331c146102705780635dada3bb146102ae5780635dbc3838146102c157600080fd5b80631df0c04c116101a25780631df0c04c1461022b5780633f3ed4ca146102425780634b02218f146102555780634e71d92d1461026857600080fd5b806301ffc9a7146101c9578063087bc228146101f157806319b8094b14610206575b600080fd5b6101dc6101d7366004611ad3565b6104ea565b60405190151581526020015b60405180910390f35b6102046101ff366004611b19565b610521565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b610234600a5481565b6040519081526020016101e8565b610204610250366004611b6d565b6105de565b610204610263366004611b99565b610616565b610204610810565b61028361027e366004611bcc565b6109b4565b604080516001600160a01b0395861681529490931660208501529183015260608201526080016101e8565b6102046102bc366004611bcc565b610a2b565b6102346102cf366004611bcc565b610a77565b6102046102e2366004611ca3565b610aca565b600254610213906001600160a01b031681565b610204610308366004611d17565b610b7f565b610204610bae565b610204610323366004611d17565b610be4565b610204610336366004611bcc565b610c13565b6000546001600160a01b0316610213565b61020461035a366004611d30565b610c5f565b6103d161036d366004611bcc565b600d602090815260009182526040918290208251808401845281546001600160a01b03908116825260018301548285015284518086019095526002830154811685526003830154938501939093526004820154600590920154909392919091169084565b6040805185516001600160a01b039081168252602096870151878301528551811692820192909252949093015160608501529116608083015260a082015260c0016101e8565b610436610425366004611dd3565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101e8565b61020461045d366004611e7d565b610d15565b610204610470366004611bcc565b611239565b610234610483366004611bcc565b6001600160a01b03166000908152600e602052604090205490565b610204611390565b610234600b5481565b610234600c5481565b6104366104c6366004611ebf565b63f23a6e6160e01b95945050505050565b6102046104e5366004611bcc565b61152b565b60006001600160e01b03198216630271189760e51b148061051b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146105545760405162461bcd60e51b815260040161054b90611f24565b60405180910390fd5b600680546001600160a01b03199081166001600160a01b03968716908117909255600780548216958716959095178555600880548216948716949094178455600980549091169286169290921782556000908152600f6020526040808220600190819055945486168252808220859055925485168152828120939093555490921681522060029055565b6000546001600160a01b031633146106085760405162461bcd60e51b815260040161054b90611f24565b600a92909255600b55600c55565b60008167ffffffffffffffff81111561063157610631611be7565b60405190808252806020026020018201604052801561065a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561067857610678611be7565b6040519080825280602002602001820160405280156106a1578160200160208202803683370190505b509050600084116106f45760405162461bcd60e51b815260206004820152601960248201527f7374617274206d757374206d6f7265207468616e207a65726f00000000000000604482015260640161054b565b600060016107028686611f6f565b61070c9190611f87565b90505b8481106107a45780836107228783611f87565b8151811061073257610732611f9e565b602090810291909101015260018261074a8784611f87565b8151811061075a5761075a611f9e565b6020908102919091018101919091526001600160a01b0387166000908152600e8252604081208054600181018255908252919020018190558061079c81611fb4565b91505061070f565b50604051631759616b60e11b81526001600160a01b03861690632eb2c2d6906107d7903390309087908790600401612006565b600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050505050505050565b336000908152600d6020526040812060058101544292036108665760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b60015460058201546108789084611f87565b10156108ba5760405162461bcd60e51b81526020600482015260116024820152706e6f742066696e697368206d6174696e6760781b604482015260640161054b565b60048101546001600160a01b03166000818152600e6020526040812081906108e1906115c6565b6001600160a01b0385166000908152600e6020526040902091935091506109089082611658565b604051637921219560e11b81526001600160a01b0384169063f242432a9061093b90309033908790600190600401612061565b600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a35050505050565b6001600160a01b0381166000908152600d602052604081206005015481908190819081036109ed57506000925082915081905080610a24565b505050506001600160a01b038181166000908152600d60205260409020805460028201546001830154600390930154918416931691905b9193509193565b6000546001600160a01b03163314610a555760405162461bcd60e51b815260040161054b90611f24565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d60205260408120600501548103610aa157506000919050565b6001546001600160a01b0383166000908152600d602052604090206005015461051b9190611f6f565b6000546001600160a01b03163314610af45760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b0383166000908152600e60205260409020610b16908361174a565b604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610b48903390309087908790600401612006565b600060405180830381600087803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610ba95760405162461bcd60e51b815260040161054b90611f24565b600455565b6000546001600160a01b03163314610bd85760405162461bcd60e51b815260040161054b90611f24565b610be260006117a5565b565b6000546001600160a01b03163314610c0e5760405162461bcd60e51b815260040161054b90611f24565b600155565b6000546001600160a01b03163314610c3d5760405162461bcd60e51b815260040161054b90611f24565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c895760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b038181166000908152600d602052604081206004810180546001600160a01b0319169386169390931790925560058201549003610d10576006546001600160a01b039081166000908152600f6020526040808220600190819055600754841683528183208190556008548416835281832055600954909216815220600290555b505050565b336000908152600d60205260409020600581015415610d765760405162461bcd60e51b815260206004820152601960248201527f4f6e6c79206272656564206f6e636520617420612074696d6500000000000000604482015260640161054b565b6001600160a01b0385166000908152600f60209081526040808320546006850183528184208785529092529091205410610ddf5760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b6001600160a01b0384166000908152600f60209081526040808320546006850183528184208685529092529091205410610e485760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b6009546001600160a01b0386811691161480610e7157506009546001600160a01b038581169116145b610eb05760405162461bcd60e51b815260206004820152601060248201526f576974686f757420717565656e62656560801b604482015260640161054b565b6009546001600160a01b038681169116148015610eda57506009546001600160a01b038581169116145b15610f205760405162461bcd60e51b81526020600482015260166024820152754d757374204f6e6c79206f6e6520717565656e62656560501b604482015260640161054b565b600354600454600254610f44926001600160a01b03918216923392909116906117f5565b604051637921219560e11b81526001600160a01b0386169063f242432a90610f7790339030908890600190600401612061565b600060405180830381600087803b158015610f9157600080fd5b505af1158015610fa5573d6000803e3d6000fd5b5050604051637921219560e11b81526001600160a01b038716925063f242432a9150610fdc90339030908790600190600401612061565b600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505042600584810182905584546001600160a01b038a81166001600160a01b031992831617875560018701899055600287018054918b169190921617905560038501869055546040805160208101939093523360601b6bffffffffffffffffffffffff191690830152605482015260009250606491506074016040516020818303038152906040528051906020012060001c6110a69190612099565b6005805491925060006110b8836120bb565b91905055506000600a548210156110db57506006546001600160a01b031661113d565b600a5482101580156110ee5750600b5482105b1561110557506007546001600160a01b031661113d565b600b5482101580156111185750600c5482105b1561112f57506008546001600160a01b031661113d565b506009546001600160a01b03165b6004830180546001600160a01b0319166001600160a01b0383811691909117909155871660009081526006840160209081526040808320888452909152812080546001929061118d908490611f6f565b90915550506001600160a01b0386166000908152600684016020908152604080832087845290915281208054600192906111c8908490611f6f565b909155505060028301548354600185015460038601546040516001600160a01b0394851694939093169233927fe399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b609261122892918252602082015260400190565b60405180910390a450505050505050565b6000546001600160a01b031633146112635760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b0381166000908152600e6020526040812054908167ffffffffffffffff81111561129657611296611be7565b6040519080825280602002602001820160405280156112bf578160200160208202803683370190505b50905060005b828110156112fe5760018282815181106112e1576112e1611f9e565b6020908102919091010152806112f6816120bb565b9150506112c5565b506001600160a01b0383166000818152600e6020526040908190209051631759616b60e11b8152632eb2c2d69161133d913091339187906004016120d4565b600060405180830381600087803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b505050506001600160a01b0383166000908152600e60205260408120610d1091611aa1565b336000908152600d6020526040812060058101549091036113e65760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b8054600180830154604051637921219560e11b81526001600160a01b039093169263f242432a9261141e923092339290600401612061565b600060405180830381600087803b15801561143857600080fd5b505af115801561144c573d6000803e3d6000fd5b5050505060028101546003820154604051637921219560e11b81526001600160a01b039092169163f242432a9161148c9130913391600190600401612061565b600060405180830381600087803b1580156114a657600080fd5b505af11580156114ba573d6000803e3d6000fd5b505060006005840155505060028101548154600183015460038401546040516001600160a01b0394851694939093169233927f9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d9261152092918252602082015260400190565b60405180910390a450565b6000546001600160a01b031633146115555760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b0381166115ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054b565b6115c3816117a5565b50565b600080826000815481106115dc576115dc611f9e565b906000526020600020015491506000905060005b8354811015611652578284828154811061160c5761160c611f9e565b906000526020600020015410156116405783818154811061162f5761162f611f9e565b906000526020600020015492508091505b8061164a816120bb565b9150506115f0565b50915091565b815481106116b45760405162461bcd60e51b8152602060048201526024808201527f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f604482015263756e647360e01b606482015260840161054b565b81546116c290600190611f87565b81101561172057816116d5826001611f6f565b815481106116e5576116e5611f9e565b906000526020600020015482828154811061170257611702611f9e565b60009182526020909120015580611718816120bb565b9150506116b4565b818054806117305761173061215f565b600190038181906000526020600020016000905590555050565b8051156117a15760005b8151811015610d10578282828151811061177057611770611f9e565b6020908102919091018101518254600181018455600093845291909220015580611799816120bb565b915050611754565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261184f908590611855565b50505050565b60006118aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119279092919063ffffffff16565b805190915015610d1057808060200190518101906118c89190612175565b610d105760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054b565b60606119368484600085611940565b90505b9392505050565b6060824710156119a15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161054b565b843b6119ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054b565b600080866001600160a01b03168587604051611a0b91906121c3565b60006040518083038185875af1925050503d8060008114611a48576040519150601f19603f3d011682016040523d82523d6000602084013e611a4d565b606091505b5091509150611a5d828286611a68565b979650505050505050565b60608315611a77575081611939565b825115611a875782518084602001fd5b8160405162461bcd60e51b815260040161054b91906121df565b50805460008255906000526020600020908101906115c391905b80821115611acf5760008155600101611abb565b5090565b600060208284031215611ae557600080fd5b81356001600160e01b03198116811461193957600080fd5b80356001600160a01b0381168114611b1457600080fd5b919050565b60008060008060808587031215611b2f57600080fd5b611b3885611afd565b9350611b4660208601611afd565b9250611b5460408601611afd565b9150611b6260608601611afd565b905092959194509250565b600080600060608486031215611b8257600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215611bae57600080fd5b611bb784611afd565b95602085013595506040909401359392505050565b600060208284031215611bde57600080fd5b61193982611afd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c2657611c26611be7565b604052919050565b600082601f830112611c3f57600080fd5b8135602067ffffffffffffffff821115611c5b57611c5b611be7565b8160051b611c6a828201611bfd565b9283528481018201928281019087851115611c8457600080fd5b83870192505b84831015611a5d57823582529183019190830190611c8a565b600080600060608486031215611cb857600080fd5b611cc184611afd565b9250602084013567ffffffffffffffff80821115611cde57600080fd5b611cea87838801611c2e565b93506040860135915080821115611d0057600080fd5b50611d0d86828701611c2e565b9150509250925092565b600060208284031215611d2957600080fd5b5035919050565b60008060408385031215611d4357600080fd5b611d4c83611afd565b9150611d5a60208401611afd565b90509250929050565b600082601f830112611d7457600080fd5b813567ffffffffffffffff811115611d8e57611d8e611be7565b611da1601f8201601f1916602001611bfd565b818152846020838601011115611db657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611deb57600080fd5b611df486611afd565b9450611e0260208701611afd565b9350604086013567ffffffffffffffff80821115611e1f57600080fd5b611e2b89838a01611c2e565b94506060880135915080821115611e4157600080fd5b611e4d89838a01611c2e565b93506080880135915080821115611e6357600080fd5b50611e7088828901611d63565b9150509295509295909350565b60008060008060808587031215611e9357600080fd5b611e9c85611afd565b9350611eaa60208601611afd565b93969395505050506040820135916060013590565b600080600080600060a08688031215611ed757600080fd5b611ee086611afd565b9450611eee60208701611afd565b93506040860135925060608601359150608086013567ffffffffffffffff811115611f1857600080fd5b611e7088828901611d63565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611f8257611f82611f59565b500190565b600082821015611f9957611f99611f59565b500390565b634e487b7160e01b600052603260045260246000fd5b600081611fc357611fc3611f59565b506000190190565b600081518084526020808501945080840160005b83811015611ffb57815187529582019590820190600101611fdf565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061203290830185611fcb565b82810360608401526120448185611fcb565b838103608090940193909352505060008152602001949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000826120b657634e487b7160e01b600052601260045260246000fd5b500690565b6000600182016120cd576120cd611f59565b5060010190565b6001600160a01b038581168252841660208083019190915260a060408301819052845490830181905260008581528281209092909160c085019190845b8181101561212d57845484526001948501949383019301612111565b505084820360608601526121418287611fcb565b85810360809096019590955260008552909301979650505050505050565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561218757600080fd5b8151801515811461193957600080fd5b60005b838110156121b257818101518382015260200161219a565b8381111561184f5750506000910152565b600082516121d5818460208701612197565b9190910192915050565b60208152600082518060208401526121fe816040850160208701612197565b601f01601f1916919091016040019291505056fea26469706673582212207f0cf5ebd275ba066f8c481b04b4ec56f0af722bb21e111db6c5e0c09a35b9d764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1C20 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x39 PUSH1 0xA SSTORE PUSH1 0x52 PUSH1 0xB SSTORE PUSH1 0x64 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34 CALLER PUSH2 0x39 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2248 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79C5E977 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC4091443 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEC3C6DEE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEC3C6DEE EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xED9371D7 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4091443 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xC971EBB3 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FDD3A3F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9FDD3A3F EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xBF90FC1E EQ PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79C5E977 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x63C66891 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x6B392680 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x5DADA3BB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5DBC3838 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DF0C04C GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1DF0C04C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x3F3ED4CA EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x87BC228 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x19B8094B EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x204 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA3 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x213 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x204 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x204 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP2 AND DUP6 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD MLOAD DUP8 DUP4 ADD MSTORE DUP6 MLOAD DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD3 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x4C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBF JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x204 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x152B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x51B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR DUP6 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE SWAP5 SLOAD DUP7 AND DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE SWAP3 SLOAD DUP6 AND DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x631 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 GT PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374617274206D757374206D6F7265207468616E207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x702 DUP7 DUP7 PUSH2 0x1F6F JUMP JUMPDEST PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT PUSH2 0x7A4 JUMPI DUP1 DUP4 PUSH2 0x722 DUP8 DUP4 PUSH2 0x1F87 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH2 0x732 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x74A DUP8 DUP5 PUSH2 0x1F87 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x75A JUMPI PUSH2 0x75A PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE DUP1 PUSH2 0x79C DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0x7D7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP SWAP3 SUB PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x878 SWAP1 DUP5 PUSH2 0x1F87 JUMP JUMPDEST LT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F742066696E697368206D6174696E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x8E1 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x908 SWAP1 DUP3 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0x93B SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SUB PUSH2 0x9ED JUMPI POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xA24 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP5 AND SWAP4 AND SWAP2 SWAP1 JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SUB PUSH2 0xAA1 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB16 SWAP1 DUP4 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xB48 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xBE2 PUSH1 0x0 PUSH2 0x17A5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 SUB PUSH2 0xD10 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD ISZERO PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206272656564206F6E636520617420612074696D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xE71 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0xEB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x576974686F757420717565656E626565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xEDA JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4D757374204F6E6C79206F6E6520717565656E626565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH2 0xF44 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0xF77 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0xF242432A SWAP2 POP PUSH2 0xFDC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x100A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x5 DUP5 DUP2 ADD DUP3 SWAP1 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP8 SSTORE PUSH1 0x1 DUP8 ADD DUP10 SWAP1 SSTORE PUSH1 0x2 DUP8 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 ADD DUP7 SWAP1 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH1 0x64 SWAP2 POP PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0x10B8 DUP4 PUSH2 0x20BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x10DB JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113D JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x10EE JUMPI POP PUSH1 0xB SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x1105 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113D JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI POP PUSH1 0xC SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x112F JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113D JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x118D SWAP1 DUP5 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11C8 SWAP1 DUP5 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0xE399CB3F10D63D6491D8CD021AEC1FD1690F49C5FF42AFE1002D5C4C07B63B60 SWAP3 PUSH2 0x1228 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1296 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E1 JUMPI PUSH2 0x12E1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x12F6 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0x2EB2C2D6 SWAP2 PUSH2 0x133D SWAP2 ADDRESS SWAP2 CALLER SWAP2 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xD10 SWAP2 PUSH2 0x1AA1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xF242432A SWAP3 PUSH2 0x141E SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF242432A SWAP2 PUSH2 0x148C SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0x9C625EE4C8BE2EB2762502530F265AD033D6ED61845F91EA555A4A271E73EE9D SWAP3 PUSH2 0x1520 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x15C3 DUP2 PUSH2 0x17A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x15DC JUMPI PUSH2 0x15DC PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x1652 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x160C JUMPI PUSH2 0x160C PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0x1640 JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x162F JUMPI PUSH2 0x162F PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x164A DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F0 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP2 SLOAD PUSH2 0x16C2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1720 JUMPI DUP2 PUSH2 0x16D5 DUP3 PUSH1 0x1 PUSH2 0x1F6F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x16E5 JUMPI PUSH2 0x16E5 PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1702 JUMPI PUSH2 0x1702 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0x1718 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16B4 JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0x1730 JUMPI PUSH2 0x1730 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD10 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1770 JUMPI PUSH2 0x1770 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x1799 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1754 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x184F SWAP1 DUP6 SWAP1 PUSH2 0x1855 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1927 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD10 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18C8 SWAP2 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1936 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1940 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x19EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A0B SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A5D DUP3 DUP3 DUP7 PUSH2 0x1A68 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A77 JUMPI POP DUP2 PUSH2 0x1939 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1A87 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15C3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1ABB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B38 DUP6 PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B46 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP PUSH2 0x1B54 PUSH1 0x40 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 PUSH1 0x60 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB7 DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1939 DUP3 PUSH2 0x1AFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1C26 JUMPI PUSH2 0x1C26 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1BE7 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1C6A DUP3 DUP3 ADD PUSH2 0x1BFD JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1A5D JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CC1 DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CEA DUP8 DUP4 DUP9 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0D DUP7 DUP3 DUP8 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4C DUP4 PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5A PUSH1 0x20 DUP5 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8E PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1DA1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1BFD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF4 DUP7 PUSH2 0x1AFD JUMP JUMPDEST SWAP5 POP PUSH2 0x1E02 PUSH1 0x20 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E2B DUP10 DUP4 DUP11 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4D DUP10 DUP4 DUP11 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E70 DUP9 DUP3 DUP10 ADD PUSH2 0x1D63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9C DUP6 PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1EAA PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1ED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE0 DUP7 PUSH2 0x1AFD JUMP JUMPDEST SWAP5 POP PUSH2 0x1EEE PUSH1 0x20 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E70 DUP9 DUP3 DUP10 ADD PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F82 JUMPI PUSH2 0x1F82 PUSH2 0x1F59 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F99 JUMPI PUSH2 0x1F99 PUSH2 0x1F59 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1FC3 JUMPI PUSH2 0x1FC3 PUSH2 0x1F59 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FFB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1FDF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2032 SWAP1 DUP4 ADD DUP6 PUSH2 0x1FCB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2044 DUP2 DUP6 PUSH2 0x1FCB JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20CD JUMPI PUSH2 0x20CD PUSH2 0x1F59 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 SLOAD SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x212D JUMPI DUP5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 ADD PUSH2 0x2111 JUMP JUMPDEST POP POP DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2141 DUP3 DUP8 PUSH2 0x1FCB JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 DUP6 MSTORE SWAP1 SWAP4 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x219A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x184F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x21D5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21FE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xCF5EBD275BA066F8C481B04B4EC56F0AF722BB21E111DB6C5E0C09A35B9D764 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "6648:8478:0:-:0;;;7140:4;7108:36;;7262:1;7245:18;;7463:2;7440:25;;7495:2;7472:25;;7527:3;7504:26;;8066:22;;;;;;;;;-1:-1:-1;921:32:1;719:10:9;921:18:1;:32::i;:::-;6648:8478:0;;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;6648:8478:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@JPDA1_905": {
									"entryPoint": null,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JPDA2_908": {
									"entryPoint": null,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JPDA3_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2528": {
									"entryPoint": 6229,
									"id": 2528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2838": {
									"entryPoint": null,
									"id": 2838,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1978": {
									"entryPoint": 6053,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFTBatch_1077": {
									"entryPoint": 2762,
									"id": 1077,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addNftBatchWithNumber_1171": {
									"entryPoint": 1558,
									"id": 1171,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cancel_1598": {
									"entryPoint": 5008,
									"id": 1598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1680": {
									"entryPoint": 2064,
									"id": 1680,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@extend_635": {
									"entryPoint": 5962,
									"id": 635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@feeToken_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_2690": {
									"entryPoint": 6464,
									"id": 2690,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2620": {
									"entryPoint": 6439,
									"id": 2620,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getFeeMintAddress_1861": {
									"entryPoint": null,
									"id": 1861,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserMatingNft_1252": {
									"entryPoint": 2484,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getUserOvipositionTime_1196": {
									"entryPoint": 2679,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_2549": {
									"entryPoint": null,
									"id": 2549,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mating_1517": {
									"entryPoint": 3349,
									"id": 1517,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@min_847": {
									"entryPoint": 5574,
									"id": 847,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@nftCount_1693": {
									"entryPoint": null,
									"id": 1693,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC1155BatchReceived_2192": {
									"entryPoint": null,
									"id": 2192,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_2169": {
									"entryPoint": null,
									"id": 2169,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_1907": {
									"entryPoint": null,
									"id": 1907,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeByIndex_532": {
									"entryPoint": 5720,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1935": {
									"entryPoint": 2990,
									"id": 1935,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2362": {
									"entryPoint": 6133,
									"id": 2362,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setBreedInterval_1873": {
									"entryPoint": 3044,
									"id": 1873,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setConfig_1015": {
									"entryPoint": 1313,
									"id": 1015,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setFeeAddress_1824": {
									"entryPoint": 3091,
									"id": 1824,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeAmount_1836": {
									"entryPoint": 2943,
									"id": 1836,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeMintAddress_1850": {
									"entryPoint": 2603,
									"id": 1850,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setJPDA_1039": {
									"entryPoint": 1502,
									"id": 1039,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setNFT_1812": {
									"entryPoint": 3167,
									"id": 1812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2226": {
									"entryPoint": 1258,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2871": {
									"entryPoint": null,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1958": {
									"entryPoint": 5419,
									"id": 1958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@urgentWithdraw_1759": {
									"entryPoint": 4665,
									"id": 1759,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@users_916": {
									"entryPoint": null,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_2825": {
									"entryPoint": 6760,
									"id": 2825,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 7523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 6937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_NftInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$2305__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a0a2400dcfc0c7f5084ce41fc2b9240afa3c7fe9d3bf390833e7f97304c3486__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d64d0a786cc713fd2c8333d9b947a55995a64d36731319f2ac7000e32ad35a5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__to_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 8116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20060:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:13"
															},
															"nodeType": "YulIf",
															"src": "594:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:13",
														"type": ""
													}
												],
												"src": "497:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:288:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "843:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "855:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "845:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "817:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "813:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "813:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:33:13"
															},
															"nodeType": "YulIf",
															"src": "806:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "868:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "878:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "916:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "949:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "960:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "926:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "973:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1006:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1017:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "983:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:38:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1030:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1063:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1074:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1040:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:38:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1030:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "738:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "749:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "761:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "769:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "777:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "785:6:13",
														"type": ""
													}
												],
												"src": "675:409:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1200:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1200:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1242:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1257:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1278:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1282:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1265:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1265:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1170:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1181:4:13",
														"type": ""
													}
												],
												"src": "1089:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1450:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1461:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1443:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1367:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1297:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:212:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1629:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1638:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1641:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1604:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1613:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1600:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1625:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:32:13"
															},
															"nodeType": "YulIf",
															"src": "1593:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1654:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1677:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1664:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1696:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1734:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1719:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1706:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1774:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1785:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1770:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1770:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1757:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1533:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1544:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1564:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1572:6:13",
														"type": ""
													}
												],
												"src": "1479:316:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1904:218:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1950:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1925:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1934:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:32:13"
															},
															"nodeType": "YulIf",
															"src": "1914:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1975:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2004:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1985:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2050:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2061:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2033:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2074:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2101:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2112:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2084:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1854:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1865:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1877:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1885:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1893:6:13",
														"type": ""
													}
												],
												"src": "1800:322:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2197:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2243:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2255:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2245:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2245:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2245:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2239:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:32:13"
															},
															"nodeType": "YulIf",
															"src": "2207:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2268:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2297:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2278:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2268:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2163:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2174:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2186:6:13",
														"type": ""
													}
												],
												"src": "2127:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2503:262:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2513:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2513:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2549:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2567:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2572:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2563:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2553:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2594:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2617:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2587:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2641:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2652:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2661:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2669:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2657:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2704:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2709:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2736:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2725:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2448:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2459:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2467:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2475:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2483:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2494:4:13",
														"type": ""
													}
												],
												"src": "2318:447:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2802:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2826:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2831:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2822:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2822:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2812:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2883:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2770:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2957:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2973:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2967:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2985:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "3023:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3029:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3019:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3019:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3038:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3034:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3034:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3003:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2989:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3118:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3120:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3120:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3120:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3061:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3073:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3058:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3097:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3094:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3094:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3055:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:62:13"
															},
															"nodeType": "YulIf",
															"src": "3052:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3160:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2927:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2936:6:13",
														"type": ""
													}
												],
												"src": "2902:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3246:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3295:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3274:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3282:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3270:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3289:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:35:13"
															},
															"nodeType": "YulIf",
															"src": "3256:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3320:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3343:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3330:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3324:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3359:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3369:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3363:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3412:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3414:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3414:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3414:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3388:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3392:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3385:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:26:13"
															},
															"nodeType": "YulIf",
															"src": "3382:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3443:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3460:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3447:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3472:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3503:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3507:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3483:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3476:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3520:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3533:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3524:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3552:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3557:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3569:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3585:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3597:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3627:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3615:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3632:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3601:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3663:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3672:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3675:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3665:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3665:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3650:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3647:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:15:13"
															},
															"nodeType": "YulIf",
															"src": "3644:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3688:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3703:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3711:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3692:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3779:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3800:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3818:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3805:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3805:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3793:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3793:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3836:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3847:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3852:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3843:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3843:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3836:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3734:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3739:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3747:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3749:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3760:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3765:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3756:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3756:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3749:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3727:3:13",
																"statements": []
															},
															"src": "3723:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3883:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3874:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3220:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3228:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3236:5:13",
														"type": ""
													}
												],
												"src": "3182:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4053:515:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4108:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4111:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4101:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4101:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4101:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4074:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4070:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4070:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4095:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4066:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:32:13"
															},
															"nodeType": "YulIf",
															"src": "4063:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4124:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4153:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4134:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4124:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4172:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4214:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4186:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4176:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4227:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4237:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4231:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4282:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4284:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4284:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4284:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4270:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4278:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4267:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:14:13"
															},
															"nodeType": "YulIf",
															"src": "4264:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4307:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4361:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4370:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4317:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:61:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4387:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4420:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4403:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4391:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4464:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4473:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4476:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4466:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4466:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4450:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4460:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4447:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:16:13"
															},
															"nodeType": "YulIf",
															"src": "4444:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4489:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4543:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4554:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4499:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:63:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4003:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4014:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4026:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4034:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4042:6:13",
														"type": ""
													}
												],
												"src": "3899:669:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4741:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4772:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4777:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4768:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4768:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4781:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4764:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4734:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$2305__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4658:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4669:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4680:4:13",
														"type": ""
													}
												],
												"src": "4573:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4866:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4912:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4921:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4924:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4914:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4914:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4914:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4887:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4896:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:32:13"
															},
															"nodeType": "YulIf",
															"src": "4876:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4937:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4960:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4947:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4832:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4843:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4855:6:13",
														"type": ""
													}
												],
												"src": "4796:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5114:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5123:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5126:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5116:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5089:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5098:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5085:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:32:13"
															},
															"nodeType": "YulIf",
															"src": "5078:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5139:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5168:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5149:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5187:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5220:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5231:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5197:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5026:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5037:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5049:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5057:6:13",
														"type": ""
													}
												],
												"src": "4981:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5297:123:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5329:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5323:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5323:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5345:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5350:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5341:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5341:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5354:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5337:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5337:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:38:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5307:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5307:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5378:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5383:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5400:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5407:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5396:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5396:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5390:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5367:47:13"
														}
													]
												},
												"name": "abi_encode_struct_NftInfo",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5281:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5288:3:13",
														"type": ""
													}
												],
												"src": "5246:174:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5706:272:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5716:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5728:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5739:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5724:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5716:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5778:6:13"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_NftInfo",
																	"nodeType": "YulIdentifier",
																	"src": "5752:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5752:44:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5831:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5843:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5854:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_NftInfo",
																	"nodeType": "YulIdentifier",
																	"src": "5805:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5878:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5889:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5874:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5915:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5920:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5911:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5911:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5924:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5907:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5907:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5867:61:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5948:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5959:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5944:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:19:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5965:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5937:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5937:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5937:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__to_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5651:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5662:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5670:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5678:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5686:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5697:4:13",
														"type": ""
													}
												],
												"src": "5425:553:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6084:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6093:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6096:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6086:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6086:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6086:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6063:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6071:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6059:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6059:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6078:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6055:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:35:13"
															},
															"nodeType": "YulIf",
															"src": "6045:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6109:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6132:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6119:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6119:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6113:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6178:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6180:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6180:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6180:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6154:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6151:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6151:26:13"
															},
															"nodeType": "YulIf",
															"src": "6148:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6209:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "6252:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6256:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6248:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6248:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6267:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6263:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6263:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6244:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6244:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6273:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6240:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6240:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6224:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "6213:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:7:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6304:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6288:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6288:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6355:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6367:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6357:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6357:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6357:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6330:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6338:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6326:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6326:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6343:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6322:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6322:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6350:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6319:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:35:13"
															},
															"nodeType": "YulIf",
															"src": "6316:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "6397:7:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6406:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6393:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6393:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6417:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6425:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6413:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6413:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6432:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6380:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6380:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "6459:7:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6468:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6455:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6455:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6451:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6491:16:13",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "6500:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6491:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6009:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6017:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6025:5:13",
														"type": ""
													}
												],
												"src": "5983:530:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6715:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6762:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6771:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6774:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6764:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6764:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6764:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6736:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6745:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6757:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:33:13"
															},
															"nodeType": "YulIf",
															"src": "6725:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6787:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6816:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6797:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6787:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6835:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6868:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6879:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6864:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6845:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6892:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6934:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6906:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6906:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6896:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6947:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6957:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6951:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7002:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7011:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7014:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7004:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7004:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7004:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6998:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6987:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:14:13"
															},
															"nodeType": "YulIf",
															"src": "6984:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7027:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7070:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7081:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7066:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7066:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7090:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7037:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7027:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7107:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7140:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7151:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7136:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7136:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7123:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7111:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7184:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7193:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7196:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7186:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7186:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7186:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7170:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7180:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7167:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7167:16:13"
															},
															"nodeType": "YulIf",
															"src": "7164:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7209:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7263:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7274:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7219:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7291:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7324:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7307:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "7295:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7369:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7378:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7381:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7371:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7371:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7371:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "7355:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7365:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7352:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:16:13"
															},
															"nodeType": "YulIf",
															"src": "7349:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7394:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7425:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "7436:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7421:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7421:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7447:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7404:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6649:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6660:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6672:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6680:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6688:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6696:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6704:6:13",
														"type": ""
													}
												],
												"src": "6518:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7565:103:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7575:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7587:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7598:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7575:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7617:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7632:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7644:3:13",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7649:10:13",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7640:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7640:20:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:33:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7610:52:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7534:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7545:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7556:4:13",
														"type": ""
													}
												],
												"src": "7466:202:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7794:276:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7841:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7850:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7843:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7843:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7843:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7815:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7811:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7836:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:33:13"
															},
															"nodeType": "YulIf",
															"src": "7804:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7866:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7895:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7876:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7876:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7914:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7947:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7924:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7971:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7998:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8009:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7994:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7994:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7981:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7981:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7971:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8022:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8049:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8060:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8045:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8045:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8032:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8032:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7736:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7747:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7759:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7767:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7775:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7783:6:13",
														"type": ""
													}
												],
												"src": "7673:397:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8222:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8269:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8278:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8281:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8271:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8271:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8271:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8243:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8264:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8235:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:33:13"
															},
															"nodeType": "YulIf",
															"src": "8232:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8294:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8323:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8304:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8304:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8294:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8342:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8386:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8352:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8399:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8426:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8437:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8422:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8422:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8409:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8409:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8450:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8460:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8501:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8543:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8528:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8515:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8515:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8505:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8591:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8600:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8603:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8593:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8593:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8593:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8563:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8571:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8560:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:30:13"
															},
															"nodeType": "YulIf",
															"src": "8557:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8616:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8658:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8643:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8667:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8626:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8626:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8156:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8167:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8179:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8187:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8195:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8203:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8211:6:13",
														"type": ""
													}
												],
												"src": "8075:606:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8860:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8877:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8888:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8870:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8870:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8870:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8911:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8922:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8907:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8900:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8950:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8961:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8946:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8966:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8939:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8939:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9010:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9022:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9033:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9010:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8837:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8851:4:13",
														"type": ""
													}
												],
												"src": "8686:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9221:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9238:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9249:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9231:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9272:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9283:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9268:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9288:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9261:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9261:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9322:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:18:13"
																	},
																	{
																		"hexValue": "7374617274206d757374206d6f7265207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9327:27:13",
																		"type": "",
																		"value": "start must more than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9300:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9300:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9364:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9376:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9387:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9372:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9372:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9364:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9198:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9212:4:13",
														"type": ""
													}
												],
												"src": "9047:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9433:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9450:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9457:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9462:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9453:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9453:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9443:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9490:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9493:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9483:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9483:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9483:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9514:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9517:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9507:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9507:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9507:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9401:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9608:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9610:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9610:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9610:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9597:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9604:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9594:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:13:13"
															},
															"nodeType": "YulIf",
															"src": "9591:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9639:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9650:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9653:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9646:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9639:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9564:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9567:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9573:3:13",
														"type": ""
													}
												],
												"src": "9533:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9715:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9737:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9739:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9739:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9739:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9731:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9734:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9728:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9728:8:13"
															},
															"nodeType": "YulIf",
															"src": "9725:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9768:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9780:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9783:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9776:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9776:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9768:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9697:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9700:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9706:4:13",
														"type": ""
													}
												],
												"src": "9666:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9828:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9857:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9848:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9848:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9838:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9838:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9838:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9885:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9888:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9878:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9909:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9912:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9902:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9902:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9902:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9796:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9975:89:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10002:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10004:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10004:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10004:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9995:5:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:13:13"
															},
															"nodeType": "YulIf",
															"src": "9985:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10033:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10044:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10055:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10040:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10040:18:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10033:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9957:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9967:3:13",
														"type": ""
													}
												],
												"src": "9928:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10130:374:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10140:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10160:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10154:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10144:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10182:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10187:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10175:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10175:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10203:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10213:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10207:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10226:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10237:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10242:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10233:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10226:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10254:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10272:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10279:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10258:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10291:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10300:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10295:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10359:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10380:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "10391:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10385:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10385:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10373:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10373:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10373:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10412:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10423:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10428:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10419:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10419:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10412:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10444:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10458:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10466:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10454:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10454:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10444:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10321:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10324:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10318:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10332:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10334:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10343:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10346:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10339:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10339:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10334:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10314:3:13",
																"statements": []
															},
															"src": "10310:169:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10488:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10495:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10107:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10114:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10122:3:13",
														"type": ""
													}
												],
												"src": "10069:435:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10894:504:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10904:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10927:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10918:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10931:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10914:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10914:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10908:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10949:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10964:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10972:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10960:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10942:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10942:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10942:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10996:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11007:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10992:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10992:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11016:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11024:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11012:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10985:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10985:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10985:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11048:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11059:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11044:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11044:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11064:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11037:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11037:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11037:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11077:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11120:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11132:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11143:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11128:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11128:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11091:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:57:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11081:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11179:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11164:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11188:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11196:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11184:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11157:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11216:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11259:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11267:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11230:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:44:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "11220:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11294:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11305:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11290:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "11315:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11311:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11311:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11283:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11283:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "11350:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11358:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11343:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11343:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11343:17:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11369:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "11381:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11377:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11377:15:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11369:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10839:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10850:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10858:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10866:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10874:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10885:4:13",
														"type": ""
													}
												],
												"src": "10509:889:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11577:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11594:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11605:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11587:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11628:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11639:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11624:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11624:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11644:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11617:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11617:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11667:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11678:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11663:18:13"
																	},
																	{
																		"hexValue": "6e6f74207374617274206d6174696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11683:18:13",
																		"type": "",
																		"value": "not start mating"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11656:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11656:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11656:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11711:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11723:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11734:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11719:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11711:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11554:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11568:4:13",
														"type": ""
													}
												],
												"src": "11403:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11922:167:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11939:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11950:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11932:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11932:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11932:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11973:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11984:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11969:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11969:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11962:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11962:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12012:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12023:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12008:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12008:18:13"
																	},
																	{
																		"hexValue": "6e6f742066696e697368206d6174696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12028:19:13",
																		"type": "",
																		"value": "not finish mating"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12001:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12001:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12057:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12069:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12080:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12065:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12065:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12057:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11899:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11913:4:13",
														"type": ""
													}
												],
												"src": "11748:341:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12387:342:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12397:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12415:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12420:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12411:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12424:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12407:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12401:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12457:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12465:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12453:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12453:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12435:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12435:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12489:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12500:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12485:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12485:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12509:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12517:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12505:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12505:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12478:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12478:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12478:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12541:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12552:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12537:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12537:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12557:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12530:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12530:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12584:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12595:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12580:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12580:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12600:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12573:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12573:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12573:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12627:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12638:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12623:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12623:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12644:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12616:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12616:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12616:32:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12668:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12679:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12664:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12664:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12685:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12657:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12657:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12696:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12708:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12719:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12704:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12704:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12696:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12332:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12343:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12351:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12359:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12367:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12378:4:13",
														"type": ""
													}
												],
												"src": "12094:635:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12908:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12925:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12936:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12918:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12918:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12918:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12959:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12970:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12955:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12955:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12975:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12948:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12948:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12948:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12998:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13009:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12994:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12994:18:13"
																	},
																	{
																		"hexValue": "4f6e6c79206272656564206f6e636520617420612074696d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13014:27:13",
																		"type": "",
																		"value": "Only breed once at a time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12987:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12987:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12987:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13051:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13063:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13074:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13059:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13059:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13051:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12885:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12899:4:13",
														"type": ""
													}
												],
												"src": "12734:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13262:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13279:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13290:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13272:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13272:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13272:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13313:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13324:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13309:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13329:2:13",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13302:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13352:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13363:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13348:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13348:18:13"
																	},
																	{
																		"hexValue": "54696d65206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13368:12:13",
																		"type": "",
																		"value": "Time limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13341:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13341:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13341:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13390:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13402:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13413:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13398:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13398:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13390:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13239:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13253:4:13",
														"type": ""
													}
												],
												"src": "13088:334:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13601:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13618:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13629:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13611:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13652:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13663:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13648:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13648:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13668:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13641:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13641:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13641:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13691:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13702:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13687:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13687:18:13"
																	},
																	{
																		"hexValue": "576974686f757420717565656e626565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13707:18:13",
																		"type": "",
																		"value": "Without queenbee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13680:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13680:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13680:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13735:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13747:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13758:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13743:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13743:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13735:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d64d0a786cc713fd2c8333d9b947a55995a64d36731319f2ac7000e32ad35a5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13578:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13592:4:13",
														"type": ""
													}
												],
												"src": "13427:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13946:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13963:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13974:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13956:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13956:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13956:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13997:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14008:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13993:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13993:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14013:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13986:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13986:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13986:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14036:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14047:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14032:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14032:18:13"
																	},
																	{
																		"hexValue": "4d757374204f6e6c79206f6e6520717565656e626565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14052:24:13",
																		"type": "",
																		"value": "Must Only one queenbee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14025:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14025:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14025:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14086:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14098:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14109:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14094:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14094:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14086:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a0a2400dcfc0c7f5084ce41fc2b9240afa3c7fe9d3bf390833e7f97304c3486__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13923:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13937:4:13",
														"type": ""
													}
												],
												"src": "13772:346:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14298:184:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14315:3:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14320:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14308:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14308:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14308:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14347:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14352:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14343:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14343:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14365:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "14369:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14361:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14361:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14382:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "14378:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14378:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14357:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14357:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14336:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14336:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14336:75:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14431:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14436:2:13",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14427:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14427:12:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14441:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14420:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14420:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14420:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14457:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14468:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14473:2:13",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14464:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14464:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14457:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14258:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14263:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14271:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14279:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14290:3:13",
														"type": ""
													}
												],
												"src": "14123:359:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14525:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14556:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14577:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14584:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14589:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14580:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14580:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14570:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14570:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14570:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14621:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14624:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14614:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14614:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14614:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14649:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14652:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14642:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14642:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14642:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14545:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14538:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14538:9:13"
															},
															"nodeType": "YulIf",
															"src": "14535:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14676:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14685:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14688:1:13"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "14681:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14676:1:13"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14510:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14513:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14519:1:13",
														"type": ""
													}
												],
												"src": "14487:209:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14748:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14779:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14781:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14781:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14781:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14764:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14775:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14771:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14771:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14761:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14761:17:13"
															},
															"nodeType": "YulIf",
															"src": "14758:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14810:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14821:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14828:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14817:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14817:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14810:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14730:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14740:3:13",
														"type": ""
													}
												],
												"src": "14701:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14970:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14980:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14992:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15003:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14988:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14988:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14980:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15022:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15033:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15015:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15015:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15015:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15060:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15071:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15056:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15056:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15076:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15049:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15049:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15049:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14931:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14942:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14950:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14961:4:13",
														"type": ""
													}
												],
												"src": "14841:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15476:870:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15486:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15504:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15515:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15500:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15500:19:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15490:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15528:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15546:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15551:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15542:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15542:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15555:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15538:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15538:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15532:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15573:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15588:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15596:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15584:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15584:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15566:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15566:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15566:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15609:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15619:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15613:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15641:9:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15652:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15637:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15661:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15669:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15657:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15630:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15630:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15704:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15689:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15709:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15682:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15682:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15722:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "15733:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "15726:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15748:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15768:6:13"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "15762:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15762:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15752:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15791:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15799:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15784:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15784:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15784:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15815:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15826:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15837:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15822:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15822:19:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15815:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15857:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15860:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15850:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15850:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15850:17:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15876:30:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15900:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "15903:2:13"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15890:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15890:16:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15880:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15915:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15924:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15919:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15983:119:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16004:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "16015:6:13"
																						}
																					],
																					"functionName": {
																						"name": "sload",
																						"nodeType": "YulIdentifier",
																						"src": "16009:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16009:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15997:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15997:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15997:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16036:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "16047:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "16052:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16043:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16043:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16036:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "16068:24:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "16082:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16090:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16078:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16078:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16068:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15945:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15948:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15942:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15942:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15956:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15958:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15967:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15970:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15963:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15963:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15958:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15938:3:13",
																"statements": []
															},
															"src": "15934:168:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16122:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16133:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16118:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16118:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16142:3:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16147:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16138:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16138:19:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16111:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16111:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16111:47:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16167:55:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16210:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16218:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "16181:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16181:41:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "16171:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16242:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16253:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16238:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16238:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "16263:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16271:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16259:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16259:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16231:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16231:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "16298:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16306:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16291:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16291:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16291:17:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16317:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "16329:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "16337:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16325:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16325:15:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16317:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15421:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15432:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15440:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15448:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15456:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15467:4:13",
														"type": ""
													}
												],
												"src": "15094:1252:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16525:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16542:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16553:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16535:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16535:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16535:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16576:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16587:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16572:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16592:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16565:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16565:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16565:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16615:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16626:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16611:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16611:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16631:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16604:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16604:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16604:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16686:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16697:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16682:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16682:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16702:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16675:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16675:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16675:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16720:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16732:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16743:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16728:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16720:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16502:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16516:4:13",
														"type": ""
													}
												],
												"src": "16351:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16932:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16949:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16960:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16942:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16942:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16942:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16983:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16994:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16979:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16979:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16999:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16972:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16972:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16972:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17022:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17033:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17018:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17018:18:13"
																	},
																	{
																		"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17038:34:13",
																		"type": "",
																		"value": "ArrayForUint256: index out of bo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17011:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17011:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17011:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17093:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17104:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17089:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17089:18:13"
																	},
																	{
																		"hexValue": "756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17109:6:13",
																		"type": "",
																		"value": "unds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17082:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17082:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17082:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17125:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17137:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17148:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17133:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17133:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17125:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16909:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16923:4:13",
														"type": ""
													}
												],
												"src": "16758:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17195:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17212:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17219:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17224:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17215:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17215:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17205:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17205:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17205:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17252:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17255:4:13",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17245:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17245:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17245:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17276:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17279:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17269:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17269:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17269:15:13"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "17163:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17452:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17462:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17474:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17485:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17470:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17470:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17462:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17497:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17515:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17520:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17511:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17511:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17524:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17507:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17507:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17501:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17542:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17557:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17565:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17553:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17535:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17535:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17535:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17589:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17600:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17585:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17585:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17609:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17617:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17605:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17605:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17578:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17578:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17578:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17641:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17652:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17637:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17657:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17630:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17630:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17405:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17416:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17424:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17432:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17443:4:13",
														"type": ""
													}
												],
												"src": "17295:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17753:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17799:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17808:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17811:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17801:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17801:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17801:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17774:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17783:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17770:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17770:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17795:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17766:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17766:32:13"
															},
															"nodeType": "YulIf",
															"src": "17763:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17824:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17843:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17837:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "17828:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17906:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17915:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17918:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17908:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17908:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17908:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17875:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "17896:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "17889:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17889:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17882:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17882:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17872:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17872:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17865:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17865:40:13"
															},
															"nodeType": "YulIf",
															"src": "17862:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17931:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17941:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "17931:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17719:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17730:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17742:6:13",
														"type": ""
													}
												],
												"src": "17675:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18131:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18148:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18159:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18141:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18141:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18141:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18182:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18193:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18178:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18178:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18198:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18171:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18171:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18171:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18221:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18232:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18217:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18217:18:13"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18237:34:13",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18210:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18210:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18210:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18292:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18303:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18288:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18288:18:13"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18308:12:13",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18281:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18281:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18281:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18330:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18342:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18353:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18338:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18338:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18330:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18108:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18122:4:13",
														"type": ""
													}
												],
												"src": "17957:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18542:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18559:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18570:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18552:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18552:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18552:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18593:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18604:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18589:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18589:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18609:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18582:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18582:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18582:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18632:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18643:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18628:18:13"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18648:34:13",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18621:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18621:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18703:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18714:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18699:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18699:18:13"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18719:8:13",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18692:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18692:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18692:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18737:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18749:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18760:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18745:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18745:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18737:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18519:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18533:4:13",
														"type": ""
													}
												],
												"src": "18368:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18949:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18966:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18977:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18959:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18959:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18959:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19000:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19011:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18996:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18996:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19016:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18989:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18989:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18989:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19039:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19050:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19035:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19035:18:13"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19055:31:13",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19028:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19028:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19028:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19096:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19108:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19119:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19104:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19104:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19096:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18926:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18940:4:13",
														"type": ""
													}
												],
												"src": "18775:353:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19186:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19196:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19205:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "19200:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19265:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19290:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19295:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19286:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19286:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "19309:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19314:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "19305:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19305:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "19299:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19299:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19279:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19279:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19279:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19226:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19229:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19223:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19223:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19237:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19239:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19248:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19251:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19244:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19244:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19239:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19219:3:13",
																"statements": []
															},
															"src": "19215:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19354:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "19367:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "19372:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19363:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19363:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19381:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19356:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19356:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19356:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19343:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19346:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19340:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19340:13:13"
															},
															"nodeType": "YulIf",
															"src": "19337:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "19164:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "19169:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19174:6:13",
														"type": ""
													}
												],
												"src": "19133:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19533:137:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19543:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19563:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19557:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19557:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19547:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19605:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19613:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19601:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19601:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19620:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19625:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "19579:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19579:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19579:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19641:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19652:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19657:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19648:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19648:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19641:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19509:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19514:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19525:3:13",
														"type": ""
													}
												],
												"src": "19396:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19796:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19813:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19824:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19806:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19806:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19806:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19836:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19856:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19850:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19850:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19840:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19883:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19894:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19879:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19879:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19899:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19872:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19872:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19872:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19941:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19949:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19937:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19937:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19958:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19969:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19954:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19954:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19974:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "19915:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19915:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19915:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19990:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20006:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "20025:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20033:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "20021:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20021:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "20042:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "20038:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20038:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "20017:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20017:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20002:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20049:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19998:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19998:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19990:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19765:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19776:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19787:4:13",
														"type": ""
													}
												],
												"src": "19675:383:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2305__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_struct_NftInfo(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_tuple_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__to_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_NftInfo(value0, headStart)\n        abi_encode_struct_NftInfo(value1, add(headStart, 64))\n        mstore(add(headStart, 128), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value3)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"start must more than zero\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"not start mating\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"not finish mating\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 0)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Only breed once at a time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Time limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d64d0a786cc713fd2c8333d9b947a55995a64d36731319f2ac7000e32ad35a5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Without queenbee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a0a2400dcfc0c7f5084ce41fc2b9240afa3c7fe9d3bf390833e7f97304c3486__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must Only one queenbee\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := sload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        mstore(0, value2)\n        let srcPtr := keccak256(0, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sload(srcPtr))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, 1)\n        }\n        mstore(add(headStart, 96), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, pos)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, _2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ArrayForUint256: index out of bo\")\n        mstore(add(headStart, 96), \"unds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c806379c5e977116100f9578063c409144311610097578063ec3c6dee11610071578063ec3c6dee146104a6578063ed9371d7146104af578063f23a6e61146104b8578063f2fde38b146104d757600080fd5b8063c409144314610462578063c971ebb314610475578063ea8a1af01461049e57600080fd5b80639fdd3a3f116100d35780639fdd3a3f1461034c578063a87430ba1461035f578063bc197c8114610417578063bf90fc1e1461044f57600080fd5b806379c5e977146103155780638705fcd4146103285780638da5cb5b1461033b57600080fd5b80635c39331c1161016657806363c668911161014057806363c66891146102d4578063647846a5146102e75780636b392680146102fa578063715018a61461030d57600080fd5b80635c39331c146102705780635dada3bb146102ae5780635dbc3838146102c157600080fd5b80631df0c04c116101a25780631df0c04c1461022b5780633f3ed4ca146102425780634b02218f146102555780634e71d92d1461026857600080fd5b806301ffc9a7146101c9578063087bc228146101f157806319b8094b14610206575b600080fd5b6101dc6101d7366004611ad3565b6104ea565b60405190151581526020015b60405180910390f35b6102046101ff366004611b19565b610521565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b610234600a5481565b6040519081526020016101e8565b610204610250366004611b6d565b6105de565b610204610263366004611b99565b610616565b610204610810565b61028361027e366004611bcc565b6109b4565b604080516001600160a01b0395861681529490931660208501529183015260608201526080016101e8565b6102046102bc366004611bcc565b610a2b565b6102346102cf366004611bcc565b610a77565b6102046102e2366004611ca3565b610aca565b600254610213906001600160a01b031681565b610204610308366004611d17565b610b7f565b610204610bae565b610204610323366004611d17565b610be4565b610204610336366004611bcc565b610c13565b6000546001600160a01b0316610213565b61020461035a366004611d30565b610c5f565b6103d161036d366004611bcc565b600d602090815260009182526040918290208251808401845281546001600160a01b03908116825260018301548285015284518086019095526002830154811685526003830154938501939093526004820154600590920154909392919091169084565b6040805185516001600160a01b039081168252602096870151878301528551811692820192909252949093015160608501529116608083015260a082015260c0016101e8565b610436610425366004611dd3565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101e8565b61020461045d366004611e7d565b610d15565b610204610470366004611bcc565b611239565b610234610483366004611bcc565b6001600160a01b03166000908152600e602052604090205490565b610204611390565b610234600b5481565b610234600c5481565b6104366104c6366004611ebf565b63f23a6e6160e01b95945050505050565b6102046104e5366004611bcc565b61152b565b60006001600160e01b03198216630271189760e51b148061051b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146105545760405162461bcd60e51b815260040161054b90611f24565b60405180910390fd5b600680546001600160a01b03199081166001600160a01b03968716908117909255600780548216958716959095178555600880548216948716949094178455600980549091169286169290921782556000908152600f6020526040808220600190819055945486168252808220859055925485168152828120939093555490921681522060029055565b6000546001600160a01b031633146106085760405162461bcd60e51b815260040161054b90611f24565b600a92909255600b55600c55565b60008167ffffffffffffffff81111561063157610631611be7565b60405190808252806020026020018201604052801561065a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561067857610678611be7565b6040519080825280602002602001820160405280156106a1578160200160208202803683370190505b509050600084116106f45760405162461bcd60e51b815260206004820152601960248201527f7374617274206d757374206d6f7265207468616e207a65726f00000000000000604482015260640161054b565b600060016107028686611f6f565b61070c9190611f87565b90505b8481106107a45780836107228783611f87565b8151811061073257610732611f9e565b602090810291909101015260018261074a8784611f87565b8151811061075a5761075a611f9e565b6020908102919091018101919091526001600160a01b0387166000908152600e8252604081208054600181018255908252919020018190558061079c81611fb4565b91505061070f565b50604051631759616b60e11b81526001600160a01b03861690632eb2c2d6906107d7903390309087908790600401612006565b600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050505050505050565b336000908152600d6020526040812060058101544292036108665760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b60015460058201546108789084611f87565b10156108ba5760405162461bcd60e51b81526020600482015260116024820152706e6f742066696e697368206d6174696e6760781b604482015260640161054b565b60048101546001600160a01b03166000818152600e6020526040812081906108e1906115c6565b6001600160a01b0385166000908152600e6020526040902091935091506109089082611658565b604051637921219560e11b81526001600160a01b0384169063f242432a9061093b90309033908790600190600401612061565b600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a35050505050565b6001600160a01b0381166000908152600d602052604081206005015481908190819081036109ed57506000925082915081905080610a24565b505050506001600160a01b038181166000908152600d60205260409020805460028201546001830154600390930154918416931691905b9193509193565b6000546001600160a01b03163314610a555760405162461bcd60e51b815260040161054b90611f24565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d60205260408120600501548103610aa157506000919050565b6001546001600160a01b0383166000908152600d602052604090206005015461051b9190611f6f565b6000546001600160a01b03163314610af45760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b0383166000908152600e60205260409020610b16908361174a565b604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610b48903390309087908790600401612006565b600060405180830381600087803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610ba95760405162461bcd60e51b815260040161054b90611f24565b600455565b6000546001600160a01b03163314610bd85760405162461bcd60e51b815260040161054b90611f24565b610be260006117a5565b565b6000546001600160a01b03163314610c0e5760405162461bcd60e51b815260040161054b90611f24565b600155565b6000546001600160a01b03163314610c3d5760405162461bcd60e51b815260040161054b90611f24565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c895760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b038181166000908152600d602052604081206004810180546001600160a01b0319169386169390931790925560058201549003610d10576006546001600160a01b039081166000908152600f6020526040808220600190819055600754841683528183208190556008548416835281832055600954909216815220600290555b505050565b336000908152600d60205260409020600581015415610d765760405162461bcd60e51b815260206004820152601960248201527f4f6e6c79206272656564206f6e636520617420612074696d6500000000000000604482015260640161054b565b6001600160a01b0385166000908152600f60209081526040808320546006850183528184208785529092529091205410610ddf5760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b6001600160a01b0384166000908152600f60209081526040808320546006850183528184208685529092529091205410610e485760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b6009546001600160a01b0386811691161480610e7157506009546001600160a01b038581169116145b610eb05760405162461bcd60e51b815260206004820152601060248201526f576974686f757420717565656e62656560801b604482015260640161054b565b6009546001600160a01b038681169116148015610eda57506009546001600160a01b038581169116145b15610f205760405162461bcd60e51b81526020600482015260166024820152754d757374204f6e6c79206f6e6520717565656e62656560501b604482015260640161054b565b600354600454600254610f44926001600160a01b03918216923392909116906117f5565b604051637921219560e11b81526001600160a01b0386169063f242432a90610f7790339030908890600190600401612061565b600060405180830381600087803b158015610f9157600080fd5b505af1158015610fa5573d6000803e3d6000fd5b5050604051637921219560e11b81526001600160a01b038716925063f242432a9150610fdc90339030908790600190600401612061565b600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505042600584810182905584546001600160a01b038a81166001600160a01b031992831617875560018701899055600287018054918b169190921617905560038501869055546040805160208101939093523360601b6bffffffffffffffffffffffff191690830152605482015260009250606491506074016040516020818303038152906040528051906020012060001c6110a69190612099565b6005805491925060006110b8836120bb565b91905055506000600a548210156110db57506006546001600160a01b031661113d565b600a5482101580156110ee5750600b5482105b1561110557506007546001600160a01b031661113d565b600b5482101580156111185750600c5482105b1561112f57506008546001600160a01b031661113d565b506009546001600160a01b03165b6004830180546001600160a01b0319166001600160a01b0383811691909117909155871660009081526006840160209081526040808320888452909152812080546001929061118d908490611f6f565b90915550506001600160a01b0386166000908152600684016020908152604080832087845290915281208054600192906111c8908490611f6f565b909155505060028301548354600185015460038601546040516001600160a01b0394851694939093169233927fe399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b609261122892918252602082015260400190565b60405180910390a450505050505050565b6000546001600160a01b031633146112635760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b0381166000908152600e6020526040812054908167ffffffffffffffff81111561129657611296611be7565b6040519080825280602002602001820160405280156112bf578160200160208202803683370190505b50905060005b828110156112fe5760018282815181106112e1576112e1611f9e565b6020908102919091010152806112f6816120bb565b9150506112c5565b506001600160a01b0383166000818152600e6020526040908190209051631759616b60e11b8152632eb2c2d69161133d913091339187906004016120d4565b600060405180830381600087803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b505050506001600160a01b0383166000908152600e60205260408120610d1091611aa1565b336000908152600d6020526040812060058101549091036113e65760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b8054600180830154604051637921219560e11b81526001600160a01b039093169263f242432a9261141e923092339290600401612061565b600060405180830381600087803b15801561143857600080fd5b505af115801561144c573d6000803e3d6000fd5b5050505060028101546003820154604051637921219560e11b81526001600160a01b039092169163f242432a9161148c9130913391600190600401612061565b600060405180830381600087803b1580156114a657600080fd5b505af11580156114ba573d6000803e3d6000fd5b505060006005840155505060028101548154600183015460038401546040516001600160a01b0394851694939093169233927f9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d9261152092918252602082015260400190565b60405180910390a450565b6000546001600160a01b031633146115555760405162461bcd60e51b815260040161054b90611f24565b6001600160a01b0381166115ba5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054b565b6115c3816117a5565b50565b600080826000815481106115dc576115dc611f9e565b906000526020600020015491506000905060005b8354811015611652578284828154811061160c5761160c611f9e565b906000526020600020015410156116405783818154811061162f5761162f611f9e565b906000526020600020015492508091505b8061164a816120bb565b9150506115f0565b50915091565b815481106116b45760405162461bcd60e51b8152602060048201526024808201527f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f604482015263756e647360e01b606482015260840161054b565b81546116c290600190611f87565b81101561172057816116d5826001611f6f565b815481106116e5576116e5611f9e565b906000526020600020015482828154811061170257611702611f9e565b60009182526020909120015580611718816120bb565b9150506116b4565b818054806117305761173061215f565b600190038181906000526020600020016000905590555050565b8051156117a15760005b8151811015610d10578282828151811061177057611770611f9e565b6020908102919091018101518254600181018455600093845291909220015580611799816120bb565b915050611754565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261184f908590611855565b50505050565b60006118aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119279092919063ffffffff16565b805190915015610d1057808060200190518101906118c89190612175565b610d105760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054b565b60606119368484600085611940565b90505b9392505050565b6060824710156119a15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161054b565b843b6119ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054b565b600080866001600160a01b03168587604051611a0b91906121c3565b60006040518083038185875af1925050503d8060008114611a48576040519150601f19603f3d011682016040523d82523d6000602084013e611a4d565b606091505b5091509150611a5d828286611a68565b979650505050505050565b60608315611a77575081611939565b825115611a875782518084602001fd5b8160405162461bcd60e51b815260040161054b91906121df565b50805460008255906000526020600020908101906115c391905b80821115611acf5760008155600101611abb565b5090565b600060208284031215611ae557600080fd5b81356001600160e01b03198116811461193957600080fd5b80356001600160a01b0381168114611b1457600080fd5b919050565b60008060008060808587031215611b2f57600080fd5b611b3885611afd565b9350611b4660208601611afd565b9250611b5460408601611afd565b9150611b6260608601611afd565b905092959194509250565b600080600060608486031215611b8257600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215611bae57600080fd5b611bb784611afd565b95602085013595506040909401359392505050565b600060208284031215611bde57600080fd5b61193982611afd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c2657611c26611be7565b604052919050565b600082601f830112611c3f57600080fd5b8135602067ffffffffffffffff821115611c5b57611c5b611be7565b8160051b611c6a828201611bfd565b9283528481018201928281019087851115611c8457600080fd5b83870192505b84831015611a5d57823582529183019190830190611c8a565b600080600060608486031215611cb857600080fd5b611cc184611afd565b9250602084013567ffffffffffffffff80821115611cde57600080fd5b611cea87838801611c2e565b93506040860135915080821115611d0057600080fd5b50611d0d86828701611c2e565b9150509250925092565b600060208284031215611d2957600080fd5b5035919050565b60008060408385031215611d4357600080fd5b611d4c83611afd565b9150611d5a60208401611afd565b90509250929050565b600082601f830112611d7457600080fd5b813567ffffffffffffffff811115611d8e57611d8e611be7565b611da1601f8201601f1916602001611bfd565b818152846020838601011115611db657600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611deb57600080fd5b611df486611afd565b9450611e0260208701611afd565b9350604086013567ffffffffffffffff80821115611e1f57600080fd5b611e2b89838a01611c2e565b94506060880135915080821115611e4157600080fd5b611e4d89838a01611c2e565b93506080880135915080821115611e6357600080fd5b50611e7088828901611d63565b9150509295509295909350565b60008060008060808587031215611e9357600080fd5b611e9c85611afd565b9350611eaa60208601611afd565b93969395505050506040820135916060013590565b600080600080600060a08688031215611ed757600080fd5b611ee086611afd565b9450611eee60208701611afd565b93506040860135925060608601359150608086013567ffffffffffffffff811115611f1857600080fd5b611e7088828901611d63565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611f8257611f82611f59565b500190565b600082821015611f9957611f99611f59565b500390565b634e487b7160e01b600052603260045260246000fd5b600081611fc357611fc3611f59565b506000190190565b600081518084526020808501945080840160005b83811015611ffb57815187529582019590820190600101611fdf565b509495945050505050565b6001600160a01b0385811682528416602082015260a06040820181905260009061203290830185611fcb565b82810360608401526120448185611fcb565b838103608090940193909352505060008152602001949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6000826120b657634e487b7160e01b600052601260045260246000fd5b500690565b6000600182016120cd576120cd611f59565b5060010190565b6001600160a01b038581168252841660208083019190915260a060408301819052845490830181905260008581528281209092909160c085019190845b8181101561212d57845484526001948501949383019301612111565b505084820360608601526121418287611fcb565b85810360809096019590955260008552909301979650505050505050565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561218757600080fd5b8151801515811461193957600080fd5b60005b838110156121b257818101518382015260200161219a565b8381111561184f5750506000910152565b600082516121d5818460208701612197565b9190910192915050565b60208152600082518060208401526121fe816040850160208701612197565b601f01601f1916919091016040019291505056fea26469706673582212207f0cf5ebd275ba066f8c481b04b4ec56f0af722bb21e111db6c5e0c09a35b9d764736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79C5E977 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC4091443 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEC3C6DEE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEC3C6DEE EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xED9371D7 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4091443 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xC971EBB3 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FDD3A3F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9FDD3A3F EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xBF90FC1E EQ PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79C5E977 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x63C66891 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x6B392680 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x5DADA3BB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5DBC3838 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DF0C04C GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1DF0C04C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x3F3ED4CA EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x87BC228 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x19B8094B EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B6D JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x204 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B99 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xA2B JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xA77 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CA3 JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x213 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x204 PUSH2 0xBAE JUMP JUMPDEST PUSH2 0x204 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D17 JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x1D30 JUMP JUMPDEST PUSH2 0xC5F JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP2 AND DUP6 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD MLOAD DUP8 DUP4 ADD MSTORE DUP6 MLOAD DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD3 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x1390 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x4C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EBF JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x204 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0x152B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x51B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR DUP6 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE SWAP5 SLOAD DUP7 AND DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE SWAP3 SLOAD DUP6 AND DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x631 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 GT PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374617274206D757374206D6F7265207468616E207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x702 DUP7 DUP7 PUSH2 0x1F6F JUMP JUMPDEST PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT PUSH2 0x7A4 JUMPI DUP1 DUP4 PUSH2 0x722 DUP8 DUP4 PUSH2 0x1F87 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH2 0x732 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x74A DUP8 DUP5 PUSH2 0x1F87 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x75A JUMPI PUSH2 0x75A PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE DUP1 PUSH2 0x79C DUP2 PUSH2 0x1FB4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0x7D7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP SWAP3 SUB PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0x878 SWAP1 DUP5 PUSH2 0x1F87 JUMP JUMPDEST LT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F742066696E697368206D6174696E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x8E1 SWAP1 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x908 SWAP1 DUP3 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0x93B SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x955 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SUB PUSH2 0x9ED JUMPI POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xA24 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP5 AND SWAP4 AND SWAP2 SWAP1 JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SUB PUSH2 0xAA1 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB16 SWAP1 DUP4 PUSH2 0x174A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xB48 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH2 0xBE2 PUSH1 0x0 PUSH2 0x17A5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 SUB PUSH2 0xD10 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD ISZERO PUSH2 0xD76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206272656564206F6E636520617420612074696D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xDDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 PUSH2 0xE71 JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0xEB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x576974686F757420717565656E626565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0xEDA JUMPI POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0xF20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4D757374204F6E6C79206F6E6520717565656E626565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH2 0xF44 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0xF77 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0xF242432A SWAP2 POP PUSH2 0xFDC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x100A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x5 DUP5 DUP2 ADD DUP3 SWAP1 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP8 SSTORE PUSH1 0x1 DUP8 ADD DUP10 SWAP1 SSTORE PUSH1 0x2 DUP8 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 ADD DUP7 SWAP1 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH1 0x64 SWAP2 POP PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x2099 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0x10B8 DUP4 PUSH2 0x20BB JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x10DB JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113D JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x10EE JUMPI POP PUSH1 0xB SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x1105 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113D JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI POP PUSH1 0xC SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x112F JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x113D JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x118D SWAP1 DUP5 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11C8 SWAP1 DUP5 SWAP1 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0xE399CB3F10D63D6491D8CD021AEC1FD1690F49C5FF42AFE1002D5C4C07B63B60 SWAP3 PUSH2 0x1228 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1296 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12FE JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E1 JUMPI PUSH2 0x12E1 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x12F6 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0x2EB2C2D6 SWAP2 PUSH2 0x133D SWAP2 ADDRESS SWAP2 CALLER SWAP2 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x20D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xD10 SWAP2 PUSH2 0x1AA1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x13E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xF242432A SWAP3 PUSH2 0x141E SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF242432A SWAP2 PUSH2 0x148C SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0x9C625EE4C8BE2EB2762502530F265AD033D6ED61845F91EA555A4A271E73EE9D SWAP3 PUSH2 0x1520 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x15C3 DUP2 PUSH2 0x17A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x15DC JUMPI PUSH2 0x15DC PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x1652 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x160C JUMPI PUSH2 0x160C PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0x1640 JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x162F JUMPI PUSH2 0x162F PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x164A DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15F0 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x16B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP2 SLOAD PUSH2 0x16C2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1720 JUMPI DUP2 PUSH2 0x16D5 DUP3 PUSH1 0x1 PUSH2 0x1F6F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x16E5 JUMPI PUSH2 0x16E5 PUSH2 0x1F9E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1702 JUMPI PUSH2 0x1702 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0x1718 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16B4 JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0x1730 JUMPI PUSH2 0x1730 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD10 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1770 JUMPI PUSH2 0x1770 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x1799 DUP2 PUSH2 0x20BB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1754 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x184F SWAP1 DUP6 SWAP1 PUSH2 0x1855 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18AA DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1927 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD10 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x18C8 SWAP2 SWAP1 PUSH2 0x2175 JUMP JUMPDEST PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1936 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1940 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x19A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x19EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1A0B SWAP2 SWAP1 PUSH2 0x21C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1A48 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A4D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A5D DUP3 DUP3 DUP7 PUSH2 0x1A68 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A77 JUMPI POP DUP2 PUSH2 0x1939 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1A87 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x21DF JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x15C3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1ABB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B38 DUP6 PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B46 PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP PUSH2 0x1B54 PUSH1 0x40 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1B62 PUSH1 0x60 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB7 DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1939 DUP3 PUSH2 0x1AFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1C26 JUMPI PUSH2 0x1C26 PUSH2 0x1BE7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x1BE7 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1C6A DUP3 DUP3 ADD PUSH2 0x1BFD JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1A5D JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1C8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CC1 DUP5 PUSH2 0x1AFD JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1CDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CEA DUP8 DUP4 DUP9 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0D DUP7 DUP3 DUP8 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D4C DUP4 PUSH2 0x1AFD JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5A PUSH1 0x20 DUP5 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D8E JUMPI PUSH2 0x1D8E PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1DA1 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1BFD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1DB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF4 DUP7 PUSH2 0x1AFD JUMP JUMPDEST SWAP5 POP PUSH2 0x1E02 PUSH1 0x20 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E2B DUP10 DUP4 DUP11 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E4D DUP10 DUP4 DUP11 ADD PUSH2 0x1C2E JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E70 DUP9 DUP3 DUP10 ADD PUSH2 0x1D63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9C DUP6 PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH2 0x1EAA PUSH1 0x20 DUP7 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1ED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EE0 DUP7 PUSH2 0x1AFD JUMP JUMPDEST SWAP5 POP PUSH2 0x1EEE PUSH1 0x20 DUP8 ADD PUSH2 0x1AFD JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E70 DUP9 DUP3 DUP10 ADD PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F82 JUMPI PUSH2 0x1F82 PUSH2 0x1F59 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F99 JUMPI PUSH2 0x1F99 PUSH2 0x1F59 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1FC3 JUMPI PUSH2 0x1FC3 PUSH2 0x1F59 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FFB JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1FDF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2032 SWAP1 DUP4 ADD DUP6 PUSH2 0x1FCB JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2044 DUP2 DUP6 PUSH2 0x1FCB JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x20B6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x20CD JUMPI PUSH2 0x20CD PUSH2 0x1F59 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 SLOAD SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x212D JUMPI DUP5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 ADD PUSH2 0x2111 JUMP JUMPDEST POP POP DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2141 DUP3 DUP8 PUSH2 0x1FCB JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 DUP6 MSTORE SWAP1 SWAP4 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x219A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x184F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x21D5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x21FE DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2197 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xCF5EBD275BA066F8C481B04B4EC56F0AF722BB21E111DB6C5E0C09A35B9D764 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "6648:8478:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:5;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;387:221:5;;;;;;;;8096:514:0;;;;;;:::i;:::-;;:::i;:::-;;14909:102;14994:8;;-1:-1:-1;;;;;14994:8:0;14909:102;;;-1:-1:-1;;;;;1253:32:13;;;1235:51;;1223:2;1208:18;14909:102:0;1089:203:13;7440:25:0;;;;;;;;;1443::13;;;1431:2;1416:18;7440:25:0;1297:177:13;8618:167:0;;;;;;:::i;:::-;;:::i;9139:622::-;;;;;;:::i;:::-;;:::i;12954:638::-;;;:::i;10002:353::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2605:15:13;;;2587:34;;2657:15;;;;2652:2;2637:18;;2630:43;2689:18;;;2682:34;2747:2;2732:18;;2725:34;2536:3;2521:19;10002:353:0;2318:447:13;14801:100:0;;;;;;:::i;:::-;;:::i;9769:225::-;;;;;;:::i;:::-;;:::i;8793:338::-;;;;;;:::i;:::-;;:::i;7151:22::-;;;;;-1:-1:-1;;;;;7151:22:0;;;14701:92;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;15019:104:0:-;;;;;;:::i;:::-;;:::i;14605:88::-;;;;;;:::i;:::-;;:::i;1036:85:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;14184:413:0;;;;;;:::i;:::-;;:::i;7545:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7545:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5323:12:13;;-1:-1:-1;;;;;5319:38:13;;;5307:51;;5407:4;5396:16;;;5390:23;5374:14;;;5367:47;5323:12;;5319:38;;5839:18;;;5307:51;;;;5396:16;;;;5390:23;5374:14;;;5367:47;5895:32;;5889:3;5874:19;;5867:61;5915:3;5944:19;;5937:35;5739:3;5724:19;7545:41:0;5425:553:13;477:247:4;;;;;;:::i;:::-;-1:-1:-1;;;477:247:4;;;;;;;;;;;-1:-1:-1;;;;;;7628:33:13;;;7610:52;;7598:2;7583:18;477:247:4;7466:202:13;10363:2032:0;;;;;;:::i;:::-;;:::i;13717:459::-;;;;;;:::i;:::-;;:::i;13604:105::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13683:11:0;13656:7;13683:11;;;:6;:11;;;;;:18;;13604:105;12403:543;;;:::i;7472:25::-;;;;;;7504:26;;;;;;252:219:4;;;;;;:::i;:::-;-1:-1:-1;;;252:219:4;;;;;;;;1918:198:1;;;;;;:::i;:::-;;:::i;387:221:5:-;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:5;505:96;387:221;-1:-1:-1;;387:221:5:o;8096:514:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;8233:19:0::1;:34:::0;;-1:-1:-1;;;;;;8233:34:0;;::::1;-1:-1:-1::0;;;;;8233:34:0;;::::1;::::0;;::::1;::::0;;;8278:18:::1;:32:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8321:20:::1;:36:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8368:19:::1;:34:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;8413:35:0;;;:14:::1;:35;::::0;;;;;-1:-1:-1;8413:39:0;;;;8478:18;;;::::1;8463:34:::0;;;;;:38;;;8527:20;;;::::1;8512:36:::0;;;;;:40;;;;8578:19;;;::::1;8563:35:::0;;;8601:1:::1;8563:39:::0;;8096:514::o;8618:167::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;8713:5:0::1;:14:::0;;;;8738:5:::1;:14:::0;8763:5:::1;:14:::0;8618:167::o;9139:622::-;9284:20;9321:9;9307:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9307:24:0;;9284:47;;9342:24;9383:9;9369:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9369:24:0;;9342:51;;9420:1;9412:5;:9;9404:47;;;;-1:-1:-1;;;9404:47:0;;9249:2:13;9404:47:0;;;9231:21:13;9288:2;9268:18;;;9261:30;9327:27;9307:18;;;9300:55;9372:18;;9404:47:0;9047:349:13;9404:47:0;9467:9;9500:1;9480:17;9492:5;9480:9;:17;:::i;:::-;:21;;;;:::i;:::-;9467:35;;9462:186;9509:5;9504:1;:10;9462:186;;9551:1;9536:3;9540:7;9542:5;9551:1;9540:7;:::i;:::-;9536:12;;;;;;;;:::i;:::-;;;;;;;;;;:16;9586:1;9567:7;9575;9577:5;9575:1;:7;:::i;:::-;9567:16;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;-1:-1:-1;;;;;9602:26:0;;;;;;:6;:26;;;;;:34;;;;;;;;;;;;;;;;;9634:1;9516:3;9634:1;9516:3;:::i;:::-;;;;9462:186;;;-1:-1:-1;9658:95:0;;-1:-1:-1;;;9658:95:0;;-1:-1:-1;;;;;9658:50:0;;;;;:95;;9709:10;;9729:4;;9736:3;;9741:7;;9658:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9273:488;;9139:622;;;:::o;12954:638::-;13068:10;12989:20;13062:17;;;:5;:17;;;;;13098:19;;;;13012:15;;13098:24;13090:53;;;;-1:-1:-1;;;13090:53:0;;11605:2:13;13090:53:0;;;11587:21:13;11644:2;11624:18;;;11617:30;-1:-1:-1;;;11663:18:13;;;11656:46;11719:18;;13090:53:0;11403:340:13;13090:53:0;13200:13;;13177:19;;;;13162:34;;:12;:34;:::i;:::-;:51;;13154:81;;;;-1:-1:-1;;;13154:81:0;;11950:2:13;13154:81:0;;;11932:21:13;11989:2;11969:18;;;11962:30;-1:-1:-1;;;12008:18:13;;;12001:47;12065:18;;13154:81:0;11748:341:13;13154:81:0;13266:6;;;;-1:-1:-1;;;;;13266:6:0;13248:15;13349;;;:6;:15;;;;;13248;;13321:44;;:27;:44::i;:::-;-1:-1:-1;;;;;13414:15:0;;;;;;:6;:15;;;;;13283:82;;-1:-1:-1;13283:82:0;-1:-1:-1;13376:61:0;;13283:82;13376:37;:61::i;:::-;13450:80;;-1:-1:-1;;;13450:80:0;;-1:-1:-1;;;;;13450:34:0;;;;;:80;;13493:4;;13500:10;;13512;;13524:1;;13450:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13546:38:0;;1443:25:13;;;-1:-1:-1;;;;;13546:38:0;;;-1:-1:-1;13552:10:0;;-1:-1:-1;13546:38:0;;1431:2:13;1416:18;13546:38:0;;;;;;;12978:614;;;;;12954:638::o;10002:353::-;-1:-1:-1;;;;;10113:11:0;;10063:7;10113:11;;;:5;:11;;;;;:26;;;10063:7;;;;;;10113:31;;10109:101;;-1:-1:-1;10177:1:0;;-1:-1:-1;10177:1:0;;-1:-1:-1;10177:1:0;;-1:-1:-1;10177:1:0;10161:37;;10109:101;-1:-1:-1;;;;;;;;;10228:11:0;;;;;;;:5;:11;;;;;:32;;10262:16;;;:32;10228;10296:24;;;10322;;;;;10228:32;;;;10262;;10296:24;10002:353;;;;;;:::o;14801:100::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14870:8:0::1;:23:::0;;-1:-1:-1;;;;;;14870:23:0::1;-1:-1:-1::0;;;;;14870:23:0;;;::::1;::::0;;;::::1;::::0;;14801:100::o;9769:225::-;-1:-1:-1;;;;;9859:11:0;;9836:7;9859:11;;;:5;:11;;;;;:26;;;:31;;9855:72;;-1:-1:-1;9914:1:0;;9769:225;-1:-1:-1;9769:225:0:o;9855:72::-;9973:13;;-1:-1:-1;;;;;9944:11:0;;;;;;:5;:11;;;;;:26;;;:42;;9973:13;9944:42;:::i;8793:338::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8985:26:0;::::1;;::::0;;;:6:::1;:26;::::0;;;;8954:63:::1;::::0;9013:3;8954:30:::1;:63::i;:::-;9028:95;::::0;-1:-1:-1;;;9028:95:0;;-1:-1:-1;;;;;9028:50:0;::::1;::::0;::::1;::::0;:95:::1;::::0;9079:10:::1;::::0;9099:4:::1;::::0;9106:3;;9111:7;;9028:95:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8793:338:::0;;;:::o;14701:92::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14767:9:0::1;:18:::0;14701:92::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;15019:104:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;15091:13:0::1;:24:::0;15019:104::o;14605:88::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14669:10:0::1;:16:::0;;-1:-1:-1;;;;;;14669:16:0::1;-1:-1:-1::0;;;;;14669:16:0;;;::::1;::::0;;;::::1;::::0;;14605:88::o;14184:413::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;14281:9:0;;::::1;14253:25;14281:9:::0;;;:5:::1;:9;::::0;;;;14301:10:::1;::::0;::::1;:16:::0;;-1:-1:-1;;;;;;14301:16:0::1;::::0;;::::1;::::0;;;::::1;::::0;;;14332:23:::1;::::0;::::1;::::0;:28;;14328:262:::1;;14392:19;::::0;-1:-1:-1;;;;;14392:19:0;;::::1;14377:35;::::0;;;:14:::1;:35;::::0;;;;;14415:1:::1;14377:39:::0;;;;14446:18:::1;::::0;;::::1;14431:34:::0;;;;;:38;;;14499:20:::1;::::0;;::::1;14484:36:::0;;;;;:40;14554:19:::1;::::0;;;::::1;14539:35:::0;;;14577:1:::1;14539:39:::0;;14328:262:::1;14242:355;14184:413:::0;;:::o;10363:2032::-;10510:10;10480:21;10504:17;;;:5;:17;;;;;10540:19;;;;:24;10532:62;;;;-1:-1:-1;;;10532:62:0;;12936:2:13;10532:62:0;;;12918:21:13;12975:2;12955:18;;;12948:30;13014:27;12994:18;;;12987:55;13059:18;;10532:62:0;12734:349:13;10532:62:0;-1:-1:-1;;;;;10658:28:0;;;;;;:14;:28;;;;;;;;;10613:18;;;:32;;;;;:42;;;;;;;;;;:73;10605:96;;;;-1:-1:-1;;;10605:96:0;;13290:2:13;10605:96:0;;;13272:21:13;13329:2;13309:18;;;13302:30;-1:-1:-1;;;13348:18:13;;;13341:40;13398:18;;10605:96:0;13088:334:13;10605:96:0;-1:-1:-1;;;;;10765:28:0;;;;;;:14;:28;;;;;;;;;10720:18;;;:32;;;;;:42;;;;;;;;;;:73;10712:96;;;;-1:-1:-1;;;10712:96:0;;13290:2:13;10712:96:0;;;13272:21:13;13329:2;13309:18;;;13302:30;-1:-1:-1;;;13348:18:13;;;13341:40;13398:18;;10712:96:0;13088:334:13;10712:96:0;10827:19;;-1:-1:-1;;;;;10827:35:0;;;:19;;:35;;:74;;-1:-1:-1;10866:19:0;;-1:-1:-1;;;;;10866:35:0;;;:19;;:35;10827:74;10819:103;;;;-1:-1:-1;;;10819:103:0;;13629:2:13;10819:103:0;;;13611:21:13;13668:2;13648:18;;;13641:30;-1:-1:-1;;;13687:18:13;;;13680:46;13743:18;;10819:103:0;13427:340:13;10819:103:0;10943:19;;-1:-1:-1;;;;;10943:35:0;;;:19;;:35;:74;;;;-1:-1:-1;10982:19:0;;-1:-1:-1;;;;;10982:35:0;;;:19;;:35;10943:74;10941:77;10933:112;;;;-1:-1:-1;;;10933:112:0;;13974:2:13;10933:112:0;;;13956:21:13;14013:2;13993:18;;;13986:30;-1:-1:-1;;;14032:18:13;;;14025:52;14094:18;;10933:112:0;13772:346:13;10933:112:0;11123:10;;11148:9;;11058:8;;:110;;-1:-1:-1;;;;;11058:8:0;;;;11098:10;;11123;;;;11058:25;:110::i;:::-;11179:83;;-1:-1:-1;;;11179:83:0;;-1:-1:-1;;;;;11179:39:0;;;;;:83;;11219:10;;11239:4;;11246:8;;11256:1;;11179:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11273:83:0;;-1:-1:-1;;;11273:83:0;;-1:-1:-1;;;;;11273:39:0;;;-1:-1:-1;11273:39:0;;-1:-1:-1;11273:83:0;;11313:10;;11333:4;;11340:8;;11350:1;;11273:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11399:15:0;11377:19;;;;:37;;;11425:40;;-1:-1:-1;;;;;11425:40:0;;;-1:-1:-1;;;;;;11425:40:0;;;;;;-1:-1:-1;11476:17:0;;:28;;;11515:9;;;:40;;;;;;;;;;;;-1:-1:-1;11566:17:0;;:28;;;11682:9;11636:56;;;;;;14308:19:13;;;;11670:10:0;14365:2:13;14361:15;-1:-1:-1;;14357:53:13;14343:12;;;14336:75;14427:12;;;14420:28;-1:-1:-1;;;11697:3:0;;-1:-1:-1;14464:12:13;;11636:56:0;;;;;;;;;;;;11626:67;;;;;;11621:73;;:79;;;;:::i;:::-;11711:9;:11;;11607:93;;-1:-1:-1;11711:9:0;:11;;;:::i;:::-;;;;;;11735:15;11791:5;;11782:6;:14;11779:340;;;-1:-1:-1;11823:19:0;;-1:-1:-1;;;;;11823:19:0;11779:340;;;11874:5;;11864:6;:15;;:33;;;;;11892:5;;11883:6;:14;11864:33;11860:259;;;-1:-1:-1;11925:18:0;;-1:-1:-1;;;;;11925:18:0;11860:259;;;11975:5;;11965:6;:15;;:33;;;;;11993:5;;11984:6;:14;11965:33;11961:158;;;-1:-1:-1;12025:20:0;;-1:-1:-1;;;;;12025:20:0;11961:158;;;-1:-1:-1;12088:19:0;;-1:-1:-1;;;;;12088:19:0;11961:158;12129:6;;;:16;;-1:-1:-1;;;;;;12129:16:0;-1:-1:-1;;;;;12129:16:0;;;;;;;;;;12156:32;;-1:-1:-1;12156:32:0;;;:18;;;:32;;;;;;;;:42;;;;;;;;:47;;-1:-1:-1;;;12156:47:0;;-1:-1:-1;;12156:47:0;:::i;:::-;;;;-1:-1:-1;;;;;;;12214:32:0;;;;;;:18;;;:32;;;;;;;;:42;;;;;;;;:47;;12260:1;;12214:32;:47;;12260:1;;12214:47;:::i;:::-;;;;-1:-1:-1;;12323:9:0;;;:25;12296;;12323;12350:17;;;12369;;;;12277:110;;-1:-1:-1;;;;;12323:25:0;;;;12296;;;;;12284:10;;12277:110;;;;15015:25:13;;;15071:2;15056:18;;15049:34;15003:2;14988:18;;14841:248;12277:110:0;;;;;;;;10469:1926;;;10363:2032;;;;:::o;13717:459::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;13814:26:0;::::1;13797:14;13814:26:::0;;;:6:::1;:26;::::0;;;;:33;;;13885:21:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;13885:21:0::1;;13858:48;;13922:9;13917:78;13941:6;13937:1;:10;13917:78;;;13982:1;13969:7;13977:1;13969:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:14;13949:3;::::1;::::0;::::1;:::i;:::-;;;;13917:78;;;-1:-1:-1::0;;;;;;14005:50:0;::::1;14084:26;::::0;;;:6:::1;:26;::::0;;;;;;14005:119;;-1:-1:-1;;;14005:119:0;;:50:::1;::::0;:119:::1;::::0;14065:4:::1;::::0;14072:10:::1;::::0;14112:7;;14005:119:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;;14142:26:0;::::1;;::::0;;;:6:::1;:26;::::0;;;;14135:33:::1;::::0;::::1;:::i;12403:543::-:0;12469:10;12439:21;12463:17;;;:5;:17;;;;;12499:19;;;;12463:17;;12499:24;12491:53;;;;-1:-1:-1;;;12491:53:0;;11605:2:13;12491:53:0;;;11587:21:13;11644:2;11624:18;;;11617:30;-1:-1:-1;;;11663:18:13;;;11656:46;11719:18;;12491:53:0;11403:340:13;12491:53:0;12566:25;;;12637:17;;;;12557:105;;-1:-1:-1;;;12557:105:0;;-1:-1:-1;;;;;12566:25:0;;;;12557:52;;:105;;12618:4;;12625:10;;12566:25;12557:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12682:9:0;;;:25;12753:17;;;;12673:105;;-1:-1:-1;;;12673:105:0;;-1:-1:-1;;;;;12682:25:0;;;;12673:52;;:105;;12734:4;;12741:10;;12682:25;;12673:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12811:1:0;12789:19;;;:23;-1:-1:-1;;12874:9:0;;;:25;12847;;12874;12901:17;;;12920;;;;12828:110;;-1:-1:-1;;;;;12874:25:0;;;;12847;;;;;12835:10;;12828:110;;;;15015:25:13;;;15071:2;15056:18;;15049:34;15003:2;14988:18;;14841:248;12828:110:0;;;;;;;;12428:518;12403:543::o;1918:198:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;16553:2:13;1998:73:1::1;::::0;::::1;16535:21:13::0;16592:2;16572:18;;;16565:30;16631:34;16611:18;;;16604:62;-1:-1:-1;;;16682:18:13;;;16675:36;16728:19;;1998:73:1::1;16351:402:13::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6298:341:0:-;6359:16;6377;6417:5;6423:1;6417:8;;;;;;;;:::i;:::-;;;;;;;;;6406:19;;6447:1;6436:12;;6463:9;6459:173;6481:12;;6477:16;;6459:173;;;6527:8;6516:5;6522:1;6516:8;;;;;;;;:::i;:::-;;;;;;;;;:19;6513:108;;;6566:5;6572:1;6566:8;;;;;;;;:::i;:::-;;;;;;;;;6555:19;;6604:1;6593:12;;6513:108;6494:3;;;;:::i;:::-;;;;6459:173;;;;6298:341;;;:::o;4212:300::-;4304:12;;4296:20;;4288:69;;;;-1:-1:-1;;;4288:69:0;;16960:2:13;4288:69:0;;;16942:21:13;16999:2;16979:18;;;16972:30;17038:34;17018:18;;;17011:62;-1:-1:-1;;;17089:18:13;;;17082:34;17133:19;;4288:69:0;16758:400:13;4288:69:0;4385:12;;:16;;4400:1;;4385:16;:::i;:::-;4377:5;:24;4370:113;;;4433:5;4439:9;:5;4447:1;4439:9;:::i;:::-;4433:16;;;;;;;;:::i;:::-;;;;;;;;;4418:5;4424;4418:12;;;;;;;;:::i;:::-;;;;;;;;;;:31;4464:7;;;;:::i;:::-;;;;4370:113;;;4493:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4212:300;;:::o;5008:181::-;5085:8;;:13;5082:100;;5112:6;5108:66;5128:1;:8;5124:1;:12;5108:66;;;5152:1;5159;5161;5159:4;;;;;;;;:::i;:::-;;;;;;;;;;;;5152:12;;;;;;;-1:-1:-1;5152:12:0;;;;;;;;;5138:3;;;;:::i;:::-;;;;5108:66;;5082:100;5008:181;;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:7:-;1077:68;;;-1:-1:-1;;;;;17553:15:13;;;1077:68:7;;;17535:34:13;17605:15;;17585:18;;;17578:43;17637:18;;;;17630:34;;;1077:68:7;;;;;;;;;;17470:18:13;;;;1077:68:7;;;;;;;;-1:-1:-1;;;;;1077:68:7;-1:-1:-1;;;1077:68:7;;;1050:96;;1070:5;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:7;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:7;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:7;;18159:2:13;3811:85:7;;;18141:21:13;18198:2;18178:18;;;18171:30;18237:34;18217:18;;;18210:62;-1:-1:-1;;;18288:18:13;;;18281:40;18338:19;;3811:85:7;17957:406:13;3514:223:8;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;;3514:223;;;;;;:::o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:8;;18570:2:13;4790:81:8;;;18552:21:13;18609:2;18589:18;;;18582:30;18648:34;18628:18;;;18621:62;-1:-1:-1;;;18699:18:13;;;18692:36;18745:19;;4790:81:8;18368:402:13;4790:81:8;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:8;;18977:2:13;4881:60:8;;;18959:21:13;19016:2;18996:18;;;18989:30;19055:31;19035:18;;;19028:59;19104:18;;4881:60:8;18775:353:13;4881:60:8;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:8;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:8:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:8;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:409::-;761:6;769;777;785;838:3;826:9;817:7;813:23;809:33;806:53;;;855:1;852;845:12;806:53;878:29;897:9;878:29;:::i;:::-;868:39;;926:38;960:2;949:9;945:18;926:38;:::i;:::-;916:48;;983:38;1017:2;1006:9;1002:18;983:38;:::i;:::-;973:48;;1040:38;1074:2;1063:9;1059:18;1040:38;:::i;:::-;1030:48;;675:409;;;;;;;:::o;1479:316::-;1556:6;1564;1572;1625:2;1613:9;1604:7;1600:23;1596:32;1593:52;;;1641:1;1638;1631:12;1593:52;-1:-1:-1;;1664:23:13;;;1734:2;1719:18;;1706:32;;-1:-1:-1;1785:2:13;1770:18;;;1757:32;;1479:316;-1:-1:-1;1479:316:13:o;1800:322::-;1877:6;1885;1893;1946:2;1934:9;1925:7;1921:23;1917:32;1914:52;;;1962:1;1959;1952:12;1914:52;1985:29;2004:9;1985:29;:::i;:::-;1975:39;2061:2;2046:18;;2033:32;;-1:-1:-1;2112:2:13;2097:18;;;2084:32;;1800:322;-1:-1:-1;;;1800:322:13:o;2127:186::-;2186:6;2239:2;2227:9;2218:7;2214:23;2210:32;2207:52;;;2255:1;2252;2245:12;2207:52;2278:29;2297:9;2278:29;:::i;2770:127::-;2831:10;2826:3;2822:20;2819:1;2812:31;2862:4;2859:1;2852:15;2886:4;2883:1;2876:15;2902:275;2973:2;2967:9;3038:2;3019:13;;-1:-1:-1;;3015:27:13;3003:40;;3073:18;3058:34;;3094:22;;;3055:62;3052:88;;;3120:18;;:::i;:::-;3156:2;3149:22;2902:275;;-1:-1:-1;2902:275:13:o;3182:712::-;3236:5;3289:3;3282:4;3274:6;3270:17;3266:27;3256:55;;3307:1;3304;3297:12;3256:55;3343:6;3330:20;3369:4;3392:18;3388:2;3385:26;3382:52;;;3414:18;;:::i;:::-;3460:2;3457:1;3453:10;3483:28;3507:2;3503;3499:11;3483:28;:::i;:::-;3545:15;;;3615;;;3611:24;;;3576:12;;;;3647:15;;;3644:35;;;3675:1;3672;3665:12;3644:35;3711:2;3703:6;3699:15;3688:26;;3723:142;3739:6;3734:3;3731:15;3723:142;;;3805:17;;3793:30;;3756:12;;;;3843;;;;3723:142;;3899:669;4026:6;4034;4042;4095:2;4083:9;4074:7;4070:23;4066:32;4063:52;;;4111:1;4108;4101:12;4063:52;4134:29;4153:9;4134:29;:::i;:::-;4124:39;;4214:2;4203:9;4199:18;4186:32;4237:18;4278:2;4270:6;4267:14;4264:34;;;4294:1;4291;4284:12;4264:34;4317:61;4370:7;4361:6;4350:9;4346:22;4317:61;:::i;:::-;4307:71;;4431:2;4420:9;4416:18;4403:32;4387:48;;4460:2;4450:8;4447:16;4444:36;;;4476:1;4473;4466:12;4444:36;;4499:63;4554:7;4543:8;4532:9;4528:24;4499:63;:::i;:::-;4489:73;;;3899:669;;;;;:::o;4796:180::-;4855:6;4908:2;4896:9;4887:7;4883:23;4879:32;4876:52;;;4924:1;4921;4914:12;4876:52;-1:-1:-1;4947:23:13;;4796:180;-1:-1:-1;4796:180:13:o;4981:260::-;5049:6;5057;5110:2;5098:9;5089:7;5085:23;5081:32;5078:52;;;5126:1;5123;5116:12;5078:52;5149:29;5168:9;5149:29;:::i;:::-;5139:39;;5197:38;5231:2;5220:9;5216:18;5197:38;:::i;:::-;5187:48;;4981:260;;;;;:::o;5983:530::-;6025:5;6078:3;6071:4;6063:6;6059:17;6055:27;6045:55;;6096:1;6093;6086:12;6045:55;6132:6;6119:20;6158:18;6154:2;6151:26;6148:52;;;6180:18;;:::i;:::-;6224:55;6267:2;6248:13;;-1:-1:-1;;6244:27:13;6273:4;6240:38;6224:55;:::i;:::-;6304:2;6295:7;6288:19;6350:3;6343:4;6338:2;6330:6;6326:15;6322:26;6319:35;6316:55;;;6367:1;6364;6357:12;6316:55;6432:2;6425:4;6417:6;6413:17;6406:4;6397:7;6393:18;6380:55;6480:1;6455:16;;;6473:4;6451:27;6444:38;;;;6459:7;5983:530;-1:-1:-1;;;5983:530:13:o;6518:943::-;6672:6;6680;6688;6696;6704;6757:3;6745:9;6736:7;6732:23;6728:33;6725:53;;;6774:1;6771;6764:12;6725:53;6797:29;6816:9;6797:29;:::i;:::-;6787:39;;6845:38;6879:2;6868:9;6864:18;6845:38;:::i;:::-;6835:48;;6934:2;6923:9;6919:18;6906:32;6957:18;6998:2;6990:6;6987:14;6984:34;;;7014:1;7011;7004:12;6984:34;7037:61;7090:7;7081:6;7070:9;7066:22;7037:61;:::i;:::-;7027:71;;7151:2;7140:9;7136:18;7123:32;7107:48;;7180:2;7170:8;7167:16;7164:36;;;7196:1;7193;7186:12;7164:36;7219:63;7274:7;7263:8;7252:9;7248:24;7219:63;:::i;:::-;7209:73;;7335:3;7324:9;7320:19;7307:33;7291:49;;7365:2;7355:8;7352:16;7349:36;;;7381:1;7378;7371:12;7349:36;;7404:51;7447:7;7436:8;7425:9;7421:24;7404:51;:::i;:::-;7394:61;;;6518:943;;;;;;;;:::o;7673:397::-;7759:6;7767;7775;7783;7836:3;7824:9;7815:7;7811:23;7807:33;7804:53;;;7853:1;7850;7843:12;7804:53;7876:29;7895:9;7876:29;:::i;:::-;7866:39;;7924:38;7958:2;7947:9;7943:18;7924:38;:::i;:::-;7673:397;;7914:48;;-1:-1:-1;;;;8009:2:13;7994:18;;7981:32;;8060:2;8045:18;8032:32;;7673:397::o;8075:606::-;8179:6;8187;8195;8203;8211;8264:3;8252:9;8243:7;8239:23;8235:33;8232:53;;;8281:1;8278;8271:12;8232:53;8304:29;8323:9;8304:29;:::i;:::-;8294:39;;8352:38;8386:2;8375:9;8371:18;8352:38;:::i;:::-;8342:48;;8437:2;8426:9;8422:18;8409:32;8399:42;;8488:2;8477:9;8473:18;8460:32;8450:42;;8543:3;8532:9;8528:19;8515:33;8571:18;8563:6;8560:30;8557:50;;;8603:1;8600;8593:12;8557:50;8626:49;8667:7;8658:6;8647:9;8643:22;8626:49;:::i;8686:356::-;8888:2;8870:21;;;8907:18;;;8900:30;8966:34;8961:2;8946:18;;8939:62;9033:2;9018:18;;8686:356::o;9401:127::-;9462:10;9457:3;9453:20;9450:1;9443:31;9493:4;9490:1;9483:15;9517:4;9514:1;9507:15;9533:128;9573:3;9604:1;9600:6;9597:1;9594:13;9591:39;;;9610:18;;:::i;:::-;-1:-1:-1;9646:9:13;;9533:128::o;9666:125::-;9706:4;9734:1;9731;9728:8;9725:34;;;9739:18;;:::i;:::-;-1:-1:-1;9776:9:13;;9666:125::o;9796:127::-;9857:10;9852:3;9848:20;9845:1;9838:31;9888:4;9885:1;9878:15;9912:4;9909:1;9902:15;9928:136;9967:3;9995:5;9985:39;;10004:18;;:::i;:::-;-1:-1:-1;;;10040:18:13;;9928:136::o;10069:435::-;10122:3;10160:5;10154:12;10187:6;10182:3;10175:19;10213:4;10242:2;10237:3;10233:12;10226:19;;10279:2;10272:5;10268:14;10300:1;10310:169;10324:6;10321:1;10318:13;10310:169;;;10385:13;;10373:26;;10419:12;;;;10454:15;;;;10346:1;10339:9;10310:169;;;-1:-1:-1;10495:3:13;;10069:435;-1:-1:-1;;;;;10069:435:13:o;10509:889::-;-1:-1:-1;;;;;10960:15:13;;;10942:34;;11012:15;;11007:2;10992:18;;10985:43;10922:3;11059:2;11044:18;;11037:31;;;10885:4;;11091:57;;11128:19;;11120:6;11091:57;:::i;:::-;11196:9;11188:6;11184:22;11179:2;11168:9;11164:18;11157:50;11230:44;11267:6;11259;11230:44;:::i;:::-;11311:22;;;11305:3;11290:19;;;11283:51;;;;-1:-1:-1;;11358:1:13;11343:17;;11389:2;11377:15;;10509:889;-1:-1:-1;;;;10509:889:13:o;12094:635::-;-1:-1:-1;;;;;12453:15:13;;;12435:34;;12505:15;;;;12500:2;12485:18;;12478:43;12552:2;12537:18;;12530:34;12595:2;12580:18;;12573:34;;;;12415:3;12638;12623:19;;12616:32;;;12378:4;12664:19;;;12657:30;12719:3;12704:19;;12094:635::o;14487:209::-;14519:1;14545;14535:132;;14589:10;14584:3;14580:20;14577:1;14570:31;14624:4;14621:1;14614:15;14652:4;14649:1;14642:15;14535:132;-1:-1:-1;14681:9:13;;14487:209::o;14701:135::-;14740:3;14761:17;;;14758:43;;14781:18;;:::i;:::-;-1:-1:-1;14828:1:13;14817:13;;14701:135::o;15094:1252::-;-1:-1:-1;;;;;15584:15:13;;;15566:34;;15657:15;;15619:2;15637:18;;;15630:43;;;;15515:3;15704:2;15689:18;;15682:31;;;15762:13;;15500:19;;;15784:22;;;15467:4;15850:17;;;15890:16;;;15467:4;;15890:16;;15837:3;15822:19;;;15619:2;15467:4;15934:168;15948:6;15945:1;15942:13;15934:168;;;16009:13;;15997:26;;16090:1;16078:14;;;;16043:12;;;;15963:9;15934:168;;;15938:3;;16147:9;16142:3;16138:19;16133:2;16122:9;16118:18;16111:47;16181:41;16218:3;16210:6;16181:41;:::i;:::-;16259:22;;;16253:3;16238:19;;;16231:51;;;;16306:1;16291:17;;16325:15;;;;15094:1252;-1:-1:-1;;;;;;;15094:1252:13:o;17163:127::-;17224:10;17219:3;17215:20;17212:1;17205:31;17255:4;17252:1;17245:15;17279:4;17276:1;17269:15;17675:277;17742:6;17795:2;17783:9;17774:7;17770:23;17766:32;17763:52;;;17811:1;17808;17801:12;17763:52;17843:9;17837:16;17896:5;17889:13;17882:21;17875:5;17872:32;17862:60;;17918:1;17915;17908:12;19133:258;19205:1;19215:113;19229:6;19226:1;19223:13;19215:113;;;19305:11;;;19299:18;19286:11;;;19279:39;19251:2;19244:10;19215:113;;;19346:6;19343:1;19340:13;19337:48;;;-1:-1:-1;;19381:1:13;19363:16;;19356:27;19133:258::o;19396:274::-;19525:3;19563:6;19557:13;19579:53;19625:6;19620:3;19613:4;19605:6;19601:17;19579:53;:::i;:::-;19648:16;;;;;19396:274;-1:-1:-1;;19396:274:13:o;19675:383::-;19824:2;19813:9;19806:21;19787:4;19856:6;19850:13;19899:6;19894:2;19883:9;19879:18;19872:34;19915:66;19974:6;19969:2;19958:9;19954:18;19949:2;19941:6;19937:15;19915:66;:::i;:::-;20042:2;20021:15;-1:-1:-1;;20017:29:13;20002:45;;;;20049:2;19998:54;;19675:383;-1:-1:-1;;19675:383:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1755200",
								"executionCost": "121119",
								"totalCost": "1876319"
							},
							"external": {
								"JPDA1()": "2341",
								"JPDA2()": "2339",
								"JPDA3()": "2361",
								"addNFTBatch(address,uint256[],uint256[])": "infinite",
								"addNftBatchWithNumber(address,uint256,uint256)": "infinite",
								"cancel()": "infinite",
								"claim()": "infinite",
								"feeToken()": "2404",
								"getFeeMintAddress()": "2411",
								"getUserMatingNft(address)": "11290",
								"getUserOvipositionTime(address)": "7044",
								"mating(address,address,uint256,uint256)": "infinite",
								"nftCount(address)": "2604",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2421",
								"renounceOwnership()": "28225",
								"setBreedInterval(uint256)": "24510",
								"setConfig(address,address,address,address)": "infinite",
								"setFeeAddress(address)": "26779",
								"setFeeAmount(uint256)": "24553",
								"setFeeMintAddress(address)": "26779",
								"setJPDA(uint256,uint256,uint256)": "68793",
								"setNFT(address,address)": "infinite",
								"supportsInterface(bytes4)": "473",
								"transferOwnership(address)": "28419",
								"urgentWithdraw(address)": "infinite",
								"users(address)": "13467"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7140,
									"end": 7144,
									"name": "PUSH",
									"source": 0,
									"value": "1C20"
								},
								{
									"begin": 7108,
									"end": 7144,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7108,
									"end": 7144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7262,
									"end": 7263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7245,
									"end": 7263,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7245,
									"end": 7263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7463,
									"end": 7465,
									"name": "PUSH",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 7440,
									"end": 7465,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 7440,
									"end": 7465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7497,
									"name": "PUSH",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 7472,
									"end": 7497,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7472,
									"end": 7497,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7527,
									"end": 7530,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 7504,
									"end": 7530,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 7504,
									"end": 7530,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 15126,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207f0cf5ebd275ba066f8c481b04b4ec56f0af722bb21e111db6c5e0c09a35b9d764736f6c634300080d0033",
									".code": [
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "79C5E977"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "EC3C6DEE"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "EC3C6DEE"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "ED9371D7"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "C971EBB3"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "EA8A1AF0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "9FDD3A3F"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "9FDD3A3F"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "BF90FC1E"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "79C5E977"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "8705FCD4"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "5C39331C"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "63C66891"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "63C66891"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "647846A5"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "6B392680"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "5C39331C"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "5DADA3BB"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "5DBC3838"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "1DF0C04C"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "1DF0C04C"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "3F3ED4CA"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "4B02218F"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "87BC228"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "19B8094B"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 15126,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14994,
											"end": 15002,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14994,
											"end": 15002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14994,
											"end": 15002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1286,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1286,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14909,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1089,
											"end": 1292,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1474,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2587,
											"end": 2621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2587,
											"end": 2621,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2682,
											"end": 2716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2759,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2521,
											"end": 2540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2318,
											"end": 2765,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5413,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5414,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5413,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5414,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5927,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5889,
											"end": 5892,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5874,
											"end": 5893,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5928,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5944,
											"end": 5963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 5972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5739,
											"end": 5742,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 5724,
											"end": 5743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5425,
											"end": 5978,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7628,
											"end": 7661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7661,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7661,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7598,
											"end": 7600,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7583,
											"end": 7601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7466,
											"end": 7668,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13689,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13694,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13701,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13683,
											"end": 13701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13604,
											"end": 13709,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8252,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8341,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8387,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8427,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8501,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8563,
											"end": 8602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8718,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8738,
											"end": 8752,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8763,
											"end": 8777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9383,
											"end": 9392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9421,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9252,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9288,
											"end": 9290,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9261,
											"end": 9291,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9354,
											"name": "PUSH",
											"source": 13,
											"value": "7374617274206D757374206D6F7265207468616E207A65726F00000000000000"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9300,
											"end": 9355,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9047,
											"end": 9396,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9492,
											"end": 9497,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9489,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9514,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9542,
											"end": 9547,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9567,
											"end": 9574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 9577,
											"end": 9582,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9719,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9273,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9273,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13068,
											"end": 13078,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12989,
											"end": 13009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13067,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13062,
											"end": 13079,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13098,
											"end": 13117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13027,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13098,
											"end": 13122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11647,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F74207374617274206D6174696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11656,
											"end": 11702,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11403,
											"end": 11743,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 13090,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13200,
											"end": 13213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13200,
											"end": 13213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13196,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13177,
											"end": 13196,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13196,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13162,
											"end": 13196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 13162,
											"end": 13196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13162,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 13162,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11950,
											"end": 11952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 11953,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11962,
											"end": 11992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F742066696E697368206D6174696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12001,
											"end": 12048,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11748,
											"end": 12089,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 13154,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13266,
											"end": 13272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13266,
											"end": 13272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13266,
											"end": 13272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13266,
											"end": 13272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13266,
											"end": 13272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13248,
											"end": 13263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13355,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13349,
											"end": 13364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13248,
											"end": 13263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13248,
											"end": 13263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13321,
											"end": 13365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13321,
											"end": 13365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13321,
											"end": 13365,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13321,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13420,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13414,
											"end": 13429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13283,
											"end": 13365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13376,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13376,
											"end": 13437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13283,
											"end": 13365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13376,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 13376,
											"end": 13437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13376,
											"end": 13437,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13376,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13450,
											"end": 13484,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13484,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 13450,
											"end": 13484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13497,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13510,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13500,
											"end": 13510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13512,
											"end": 13522,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13512,
											"end": 13522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 13450,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13552,
											"end": 13562,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13552,
											"end": 13562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "PUSH",
											"source": 0,
											"value": "70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068"
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13584,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12978,
											"end": 13592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12978,
											"end": 13592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12978,
											"end": 13592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12978,
											"end": 13592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12978,
											"end": 13592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 13592,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10118,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10161,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10161,
											"end": 10198,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10233,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14870,
											"end": 14878,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14870,
											"end": 14893,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14801,
											"end": 14901,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9836,
											"end": 9843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9885,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9859,
											"end": 9885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9949,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9970,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9944,
											"end": 9970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9079,
											"end": 9089,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9079,
											"end": 9089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14767,
											"end": 14776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14767,
											"end": 14785,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14701,
											"end": 14793,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15091,
											"end": 15104,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15091,
											"end": 15115,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15019,
											"end": 15123,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14669,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14605,
											"end": 14693,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14253,
											"end": 14278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14286,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14281,
											"end": 14290,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14301,
											"end": 14311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14355,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14332,
											"end": 14355,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14355,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14328,
											"end": 14590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14392,
											"end": 14411,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14392,
											"end": 14411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14392,
											"end": 14411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14392,
											"end": 14411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14392,
											"end": 14411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14391,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14412,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14415,
											"end": 14416,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14377,
											"end": 14416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14377,
											"end": 14416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14464,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14446,
											"end": 14464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14446,
											"end": 14464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14465,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14431,
											"end": 14469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14499,
											"end": 14519,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14499,
											"end": 14519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14499,
											"end": 14519,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14499,
											"end": 14519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14524,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14554,
											"end": 14573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14577,
											"end": 14578,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14539,
											"end": 14578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14539,
											"end": 14578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14328,
											"end": 14590,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14328,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14242,
											"end": 14597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14597,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10510,
											"end": 10520,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10480,
											"end": 10501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10509,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12918,
											"end": 12939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12975,
											"end": 12977,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12948,
											"end": 12978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13041,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C79206272656564206F6E636520617420612074696D6500000000000000"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12734,
											"end": 13083,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10686,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13290,
											"end": 13292,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13331,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13332,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B59481B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13088,
											"end": 13422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13290,
											"end": 13292,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13331,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13332,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B59481B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13088,
											"end": 13422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10846,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10827,
											"end": 10846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10827,
											"end": 10862,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10862,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 10827,
											"end": 10901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10866,
											"end": 10885,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10866,
											"end": 10885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10866,
											"end": 10901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10866,
											"end": 10901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10866,
											"end": 10901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10866,
											"end": 10885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10866,
											"end": 10885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10866,
											"end": 10901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10901,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 10827,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13629,
											"end": 13631,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13611,
											"end": 13632,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13668,
											"end": 13670,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 13648,
											"end": 13666,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13648,
											"end": 13666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13648,
											"end": 13666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13641,
											"end": 13671,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "576974686F757420717565656E626565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13680,
											"end": 13726,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13743,
											"end": 13761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13427,
											"end": 13767,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 10819,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10978,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 10978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 11017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 11017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10943,
											"end": 11017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10982,
											"end": 11001,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10982,
											"end": 11001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10982,
											"end": 11017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11017,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10943,
											"end": 11017,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 10943,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10941,
											"end": 11018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13974,
											"end": 13976,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13956,
											"end": 13977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14013,
											"end": 14015,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13993,
											"end": 14011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13986,
											"end": 14016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D757374204F6E6C79206F6E6520717565656E626565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14032,
											"end": 14050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14025,
											"end": 14077,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14094,
											"end": 14112,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14094,
											"end": 14112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13772,
											"end": 14118,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 10933,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11133,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11123,
											"end": 11133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11148,
											"end": 11157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11148,
											"end": 11157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11066,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11058,
											"end": 11066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 11058,
											"end": 11168,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11058,
											"end": 11066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11098,
											"end": 11108,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11098,
											"end": 11108,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11058,
											"end": 11083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 11058,
											"end": 11168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11058,
											"end": 11168,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 11058,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11179,
											"end": 11218,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11218,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 11179,
											"end": 11218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11229,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11219,
											"end": 11229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11254,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11246,
											"end": 11254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 11179,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11273,
											"end": 11312,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11312,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11273,
											"end": 11312,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 11273,
											"end": 11312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11313,
											"end": 11323,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11313,
											"end": 11323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11333,
											"end": 11337,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11333,
											"end": 11337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11348,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11340,
											"end": 11348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11350,
											"end": 11351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 11273,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11399,
											"end": 11414,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11396,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11377,
											"end": 11396,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11377,
											"end": 11414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11425,
											"end": 11465,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11476,
											"end": 11493,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11504,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11476,
											"end": 11504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11524,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11515,
											"end": 11524,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11515,
											"end": 11555,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": 11566,
											"end": 11583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11594,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11594,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11682,
											"end": 11691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14308,
											"end": 14327,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11670,
											"end": 11680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14365,
											"end": 14367,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14361,
											"end": 14376,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14357,
											"end": 14410,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14343,
											"end": 14355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14343,
											"end": 14355,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14343,
											"end": 14355,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14336,
											"end": 14411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14439,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 14427,
											"end": 14439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14420,
											"end": 14448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14464,
											"end": 14476,
											"name": "PUSH",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 14464,
											"end": 14476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11636,
											"end": 11692,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11693,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11626,
											"end": 11693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11621,
											"end": 11694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11621,
											"end": 11694,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11720,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11607,
											"end": 11700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11607,
											"end": 11700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11711,
											"end": 11720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11791,
											"end": 11796,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 11791,
											"end": 11796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11788,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11782,
											"end": 11796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11823,
											"end": 11842,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11823,
											"end": 11842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11823,
											"end": 11842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 11779,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11879,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 11874,
											"end": 11879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11879,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11897,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 11892,
											"end": 11897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11883,
											"end": 11889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11883,
											"end": 11897,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 11864,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 11860,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11975,
											"end": 11980,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 11975,
											"end": 11980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11980,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11980,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11993,
											"end": 11998,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 11993,
											"end": 11998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 11990,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11984,
											"end": 11998,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 11965,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12025,
											"end": 12045,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 12025,
											"end": 12045,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12025,
											"end": 12045,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12088,
											"end": 12107,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12088,
											"end": 12107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12088,
											"end": 12107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 11961,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12129,
											"end": 12135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12129,
											"end": 12145,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12156,
											"end": 12203,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12256,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12261,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12260,
											"end": 12261,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12261,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12214,
											"end": 12261,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12323,
											"end": 12332,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12323,
											"end": 12332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12323,
											"end": 12332,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12350,
											"end": 12367,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12350,
											"end": 12367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12350,
											"end": 12367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12369,
											"end": 12386,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12369,
											"end": 12386,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12369,
											"end": 12386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12369,
											"end": 12386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12323,
											"end": 12348,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12296,
											"end": 12321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12284,
											"end": 12294,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12284,
											"end": 12294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "E399CB3F10D63D6491D8CD021AEC1FD1690F49C5FF42AFE1002D5C4C07B63B60"
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15015,
											"end": 15040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15040,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15040,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15071,
											"end": 15073,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15056,
											"end": 15074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15056,
											"end": 15074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15049,
											"end": 15083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15003,
											"end": 15005,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14841,
											"end": 15089,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12387,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13717,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13797,
											"end": 13811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13847,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13814,
											"end": 13847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13885,
											"end": 13906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13858,
											"end": 13906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13922,
											"end": 13931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13941,
											"end": 13947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 13938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13937,
											"end": 13947,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13982,
											"end": 13983,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13969,
											"end": 13976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13977,
											"end": 13978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13979,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13949,
											"end": 13952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 13917,
											"end": 13995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14055,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14090,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14084,
											"end": 14110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14055,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 14005,
											"end": 14055,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14065,
											"end": 14069,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14065,
											"end": 14069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14082,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 14005,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14168,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14135,
											"end": 14168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14135,
											"end": 14168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 14135,
											"end": 14168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12479,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12439,
											"end": 12460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12468,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12518,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12499,
											"end": 12518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12463,
											"end": 12480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11647,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F74207374617274206D6174696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11656,
											"end": 11702,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11403,
											"end": 11743,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 12491,
											"end": 12544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12637,
											"end": 12654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12609,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 12557,
											"end": 12609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12622,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12618,
											"end": 12622,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12625,
											"end": 12635,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12625,
											"end": 12635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12566,
											"end": 12591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 12557,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12682,
											"end": 12691,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12682,
											"end": 12691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12753,
											"end": 12770,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12753,
											"end": 12770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12753,
											"end": 12770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12753,
											"end": 12770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 12673,
											"end": 12725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12738,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 12751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 12751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12682,
											"end": 12707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 12673,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12811,
											"end": 12812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12789,
											"end": 12808,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12789,
											"end": 12808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12874,
											"end": 12883,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12874,
											"end": 12883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12901,
											"end": 12918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 12918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12901,
											"end": 12918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12920,
											"end": 12937,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12920,
											"end": 12937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12920,
											"end": 12937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12920,
											"end": 12937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12847,
											"end": 12872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12835,
											"end": 12845,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12835,
											"end": 12845,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "9C625EE4C8BE2EB2762502530F265AD033D6ED61845F91EA555A4A271E73EE9D"
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15015,
											"end": 15040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15040,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15015,
											"end": 15040,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15071,
											"end": 15073,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15056,
											"end": 15074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15056,
											"end": 15074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15049,
											"end": 15083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15003,
											"end": 15005,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14841,
											"end": 15089,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12938,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12403,
											"end": 12946,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16553,
											"end": 16555,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16535,
											"end": 16556,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16592,
											"end": 16594,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16565,
											"end": 16595,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16631,
											"end": 16665,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16611,
											"end": 16629,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16611,
											"end": 16629,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16611,
											"end": 16629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16604,
											"end": 16666,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16682,
											"end": 16700,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16682,
											"end": 16700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16682,
											"end": 16700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16711,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16728,
											"end": 16747,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 16728,
											"end": 16747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 16351,
											"end": 16753,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16960,
											"end": 16962,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16942,
											"end": 16963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16999,
											"end": 17001,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16979,
											"end": 16997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16972,
											"end": 17002,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17038,
											"end": 17072,
											"name": "PUSH",
											"source": 13,
											"value": "4172726179466F7255696E743235363A20696E646578206F7574206F6620626F"
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17018,
											"end": 17036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17011,
											"end": 17073,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17089,
											"end": 17107,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17089,
											"end": 17107,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17089,
											"end": 17107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17082,
											"end": 17116,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17133,
											"end": 17152,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 17133,
											"end": 17152,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16758,
											"end": 17158,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17553,
											"end": 17568,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17553,
											"end": 17568,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17553,
											"end": 17568,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17535,
											"end": 17569,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17605,
											"end": 17620,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17605,
											"end": 17620,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17585,
											"end": 17603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17578,
											"end": 17621,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17637,
											"end": 17655,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17637,
											"end": 17655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17637,
											"end": 17655,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17637,
											"end": 17655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17630,
											"end": 17664,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17630,
											"end": 17664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17630,
											"end": 17664,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17470,
											"end": 17488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18159,
											"end": 18161,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18141,
											"end": 18162,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18198,
											"end": 18200,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18178,
											"end": 18196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18201,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18237,
											"end": 18271,
											"name": "PUSH",
											"source": 13,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 18217,
											"end": 18235,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 18217,
											"end": 18235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18217,
											"end": 18235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18210,
											"end": 18272,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18288,
											"end": 18306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18281,
											"end": 18321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18338,
											"end": 18357,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 18338,
											"end": 18357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 17957,
											"end": 18363,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3729,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3671,
											"end": 3730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3671,
											"end": 3730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4823,
											"end": 4828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4819,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4828,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18570,
											"end": 18572,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18552,
											"end": 18573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18611,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 18589,
											"end": 18607,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18589,
											"end": 18607,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18589,
											"end": 18607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18582,
											"end": 18612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18648,
											"end": 18682,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 18628,
											"end": 18646,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 18628,
											"end": 18646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18628,
											"end": 18646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18621,
											"end": 18683,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18699,
											"end": 18717,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 18699,
											"end": 18717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18699,
											"end": 18717,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18692,
											"end": 18728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18745,
											"end": 18764,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 18745,
											"end": 18764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 18368,
											"end": 18770,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18977,
											"end": 18979,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18959,
											"end": 18980,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19016,
											"end": 19018,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 18996,
											"end": 19014,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18996,
											"end": 19014,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18996,
											"end": 19014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18989,
											"end": 19019,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19055,
											"end": 19086,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19028,
											"end": 19087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19104,
											"end": 19122,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 19104,
											"end": 19122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 18775,
											"end": 19128,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5092,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5035,
											"end": 5093,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7214,
											"end": 7906,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7214,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7372,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7388,
											"end": 7395,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7550,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7734,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7783,
											"end": 7798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7770,
											"end": 7780,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7799,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "362"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "454"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "453"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "454"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 838,
											"end": 841,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 817,
											"end": 824,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 809,
											"end": 842,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 806,
											"end": 859,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 806,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 806,
											"end": 859,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 855,
											"end": 856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 845,
											"end": 857,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 806,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 806,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 897,
											"end": 906,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 878,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 868,
											"end": 907,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 868,
											"end": 907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 926,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 958,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 945,
											"end": 963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 916,
											"end": 964,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 916,
											"end": 964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1015,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1002,
											"end": 1020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1021,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1570,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1611,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1600,
											"end": 1623,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1628,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1734,
											"end": 1736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1944,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1975,
											"end": 2014,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2127,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2127,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2237,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2210,
											"end": 2242,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2245,
											"end": 2257,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2770,
											"end": 2897,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2770,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2831,
											"end": 2841,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2826,
											"end": 2829,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2822,
											"end": 2842,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2852,
											"end": 2867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2891,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3042,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3003,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3003,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3092,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3117,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3140,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3052,
											"end": 3140,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3182,
											"end": 3894,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 3182,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3236,
											"end": 3241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3286,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3274,
											"end": 3280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3350,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3434,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 3382,
											"end": 3434,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3453,
											"end": 3463,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3677,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3734,
											"end": 3737,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3822,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3822,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3823,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4040,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4048,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4081,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4109,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4163,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4186,
											"end": 4218,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4255,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4267,
											"end": 4281,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4296,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 4370,
											"end": 4377,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4367,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4346,
											"end": 4368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4378,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4435,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4463,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4554,
											"end": 4561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4551,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4541,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4887,
											"end": 4894,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4911,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4947,
											"end": 4970,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4947,
											"end": 4970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5063,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5096,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5108,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5113,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5116,
											"end": 5128,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5229,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6075,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6082,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6119,
											"end": 6139,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6148,
											"end": 6200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6148,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 6148,
											"end": 6200,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6244,
											"end": 6271,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6277,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6295,
											"end": 6302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6354,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6393,
											"end": 6411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6380,
											"end": 6435,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6471,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6477,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6451,
											"end": 6478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 6710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6760,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6745,
											"end": 6754,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6736,
											"end": 6743,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6732,
											"end": 6755,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6728,
											"end": 6761,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6764,
											"end": 6776,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6826,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6879,
											"end": 6881,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6883,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6923,
											"end": 6932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7001,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7004,
											"end": 7016,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7081,
											"end": 7087,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7070,
											"end": 7079,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 7066,
											"end": 7088,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7098,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7123,
											"end": 7155,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7107,
											"end": 7155,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7107,
											"end": 7155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7182,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7167,
											"end": 7183,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7186,
											"end": 7198,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7263,
											"end": 7271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7282,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7307,
											"end": 7340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7355,
											"end": 7363,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7368,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7383,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 7447,
											"end": 7454,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7425,
											"end": 7434,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7773,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7789,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7836,
											"end": 7839,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7822,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7811,
											"end": 7834,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7840,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7853,
											"end": 7854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7855,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 7895,
											"end": 7904,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7905,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7914,
											"end": 7962,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7914,
											"end": 7962,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7994,
											"end": 8012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7994,
											"end": 8012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8064,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8064,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8075,
											"end": 8681,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 8075,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8185,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8187,
											"end": 8193,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 8252,
											"end": 8261,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8243,
											"end": 8250,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8262,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8268,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8281,
											"end": 8282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8271,
											"end": 8283,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 8323,
											"end": 8332,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8294,
											"end": 8333,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8294,
											"end": 8333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 8386,
											"end": 8388,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8384,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8390,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8439,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8426,
											"end": 8435,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8409,
											"end": 8441,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8441,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8492,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8450,
											"end": 8492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8450,
											"end": 8492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8515,
											"end": 8548,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8590,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8605,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8626,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 8667,
											"end": 8674,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8643,
											"end": 8665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8626,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 8626,
											"end": 8675,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8686,
											"end": 9042,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 8686,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8888,
											"end": 8890,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 8930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8966,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8961,
											"end": 8963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8939,
											"end": 9001,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9035,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8686,
											"end": 9042,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9401,
											"end": 9528,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9401,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9462,
											"end": 9472,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9453,
											"end": 9473,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9493,
											"end": 9497,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9483,
											"end": 9498,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9522,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9533,
											"end": 9661,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 9533,
											"end": 9661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9573,
											"end": 9576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9605,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9600,
											"end": 9606,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9591,
											"end": 9630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9591,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 9591,
											"end": 9630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9533,
											"end": 9661,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9666,
											"end": 9791,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9666,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9706,
											"end": 9710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 9736,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9725,
											"end": 9759,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9725,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 9725,
											"end": 9759,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9791,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9796,
											"end": 9923,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 9796,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9857,
											"end": 9867,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9888,
											"end": 9892,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9885,
											"end": 9886,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9912,
											"end": 9916,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9909,
											"end": 9910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9917,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 10064,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 9928,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9985,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 9985,
											"end": 10024,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 10064,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10154,
											"end": 10166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10193,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10185,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10194,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10226,
											"end": 10245,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10226,
											"end": 10245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10272,
											"end": 10277,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10268,
											"end": 10282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10331,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10398,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10399,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10399,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10339,
											"end": 10348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10960,
											"end": 10975,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10960,
											"end": 10975,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10960,
											"end": 10975,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10976,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10976,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10985,
											"end": 11028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10922,
											"end": 10925,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11059,
											"end": 11061,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11120,
											"end": 11126,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "tag",
											"source": 13,
											"value": "563"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11188,
											"end": 11194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11184,
											"end": 11206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11179,
											"end": 11181,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11207,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 11267,
											"end": 11273,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11333,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11333,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11308,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11343,
											"end": 11360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11343,
											"end": 11360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 11392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11377,
											"end": 11392,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12094,
											"end": 12729,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 12094,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12453,
											"end": 12468,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12453,
											"end": 12468,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12453,
											"end": 12468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12435,
											"end": 12469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12435,
											"end": 12469,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12500,
											"end": 12502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12485,
											"end": 12503,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12485,
											"end": 12503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12521,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12552,
											"end": 12554,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12595,
											"end": 12597,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12415,
											"end": 12418,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12648,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12648,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12722,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12729,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14487,
											"end": 14696,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 14487,
											"end": 14696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14519,
											"end": 14520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14545,
											"end": 14546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14535,
											"end": 14667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 14535,
											"end": 14667,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14589,
											"end": 14599,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 14584,
											"end": 14587,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 14580,
											"end": 14600,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 14577,
											"end": 14578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14570,
											"end": 14601,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14624,
											"end": 14628,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 14621,
											"end": 14622,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14614,
											"end": 14629,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14652,
											"end": 14656,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14649,
											"end": 14650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14657,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14535,
											"end": 14667,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 14535,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14681,
											"end": 14690,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 14681,
											"end": 14690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14696,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14701,
											"end": 14836,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 14701,
											"end": 14836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14740,
											"end": 14743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14761,
											"end": 14778,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14761,
											"end": 14778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14761,
											"end": 14778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14758,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 14758,
											"end": 14801,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14828,
											"end": 14829,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14817,
											"end": 14830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14817,
											"end": 14830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14701,
											"end": 14836,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15094,
											"end": 16346,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 15094,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15584,
											"end": 15599,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15566,
											"end": 15600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15566,
											"end": 15600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15657,
											"end": 15672,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15657,
											"end": 15672,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15621,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15673,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15630,
											"end": 15673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15515,
											"end": 15518,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 15704,
											"end": 15706,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15689,
											"end": 15707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15682,
											"end": 15713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15682,
											"end": 15713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15682,
											"end": 15713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 15775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15762,
											"end": 15775,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15500,
											"end": 15519,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15500,
											"end": 15519,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15500,
											"end": 15519,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15784,
											"end": 15806,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15784,
											"end": 15806,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15784,
											"end": 15806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15467,
											"end": 15471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15850,
											"end": 15867,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15850,
											"end": 15867,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15850,
											"end": 15867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 15906,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 15906,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 15906,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 15467,
											"end": 15471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15467,
											"end": 15471,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 15906,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 15906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15837,
											"end": 15840,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 15822,
											"end": 15841,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15822,
											"end": 15841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15822,
											"end": 15841,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15619,
											"end": 15621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15467,
											"end": 15471,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15948,
											"end": 15954,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15945,
											"end": 15946,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15942,
											"end": 15955,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16009,
											"end": 16022,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16009,
											"end": 16022,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15997,
											"end": 16023,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15997,
											"end": 16023,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16090,
											"end": 16091,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16078,
											"end": 16092,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16078,
											"end": 16092,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16078,
											"end": 16092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16078,
											"end": 16092,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16055,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16055,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15963,
											"end": 15972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 15934,
											"end": 16102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 15941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15938,
											"end": 15941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16147,
											"end": 16156,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16142,
											"end": 16145,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16138,
											"end": 16157,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16133,
											"end": 16135,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 16122,
											"end": 16131,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16118,
											"end": 16136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16111,
											"end": 16158,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16181,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 16218,
											"end": 16221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16210,
											"end": 16216,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16181,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 16181,
											"end": 16222,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 16181,
											"end": 16222,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 16181,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16259,
											"end": 16281,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16259,
											"end": 16281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16259,
											"end": 16281,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16253,
											"end": 16256,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 16238,
											"end": 16257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16238,
											"end": 16257,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 16238,
											"end": 16257,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16231,
											"end": 16282,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16306,
											"end": 16307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16291,
											"end": 16308,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16291,
											"end": 16308,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16325,
											"end": 16340,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16325,
											"end": 16340,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16325,
											"end": 16340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16325,
											"end": 16340,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 15094,
											"end": 16346,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15094,
											"end": 16346,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 17163,
											"end": 17290,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 17163,
											"end": 17290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17224,
											"end": 17234,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 17219,
											"end": 17222,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 17215,
											"end": 17235,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 17212,
											"end": 17213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17205,
											"end": 17236,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17255,
											"end": 17259,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 17252,
											"end": 17253,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17245,
											"end": 17260,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17279,
											"end": 17283,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17276,
											"end": 17277,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17269,
											"end": 17284,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17675,
											"end": 17952,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 17675,
											"end": 17952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17742,
											"end": 17748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17795,
											"end": 17797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17783,
											"end": 17792,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17774,
											"end": 17781,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17770,
											"end": 17793,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17798,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17763,
											"end": 17815,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17763,
											"end": 17815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 17763,
											"end": 17815,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17811,
											"end": 17812,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17808,
											"end": 17809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17801,
											"end": 17813,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17763,
											"end": 17815,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 17763,
											"end": 17815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17843,
											"end": 17852,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17837,
											"end": 17853,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17896,
											"end": 17901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17889,
											"end": 17902,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17882,
											"end": 17903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17875,
											"end": 17880,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17872,
											"end": 17904,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17862,
											"end": 17922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 17862,
											"end": 17922,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17918,
											"end": 17919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17915,
											"end": 17916,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17908,
											"end": 17920,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19133,
											"end": 19391,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 19133,
											"end": 19391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19205,
											"end": 19206,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19229,
											"end": 19235,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19226,
											"end": 19227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19223,
											"end": 19236,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19305,
											"end": 19316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19305,
											"end": 19316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19305,
											"end": 19316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19299,
											"end": 19317,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19297,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19286,
											"end": 19297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19279,
											"end": 19318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19251,
											"end": 19253,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19244,
											"end": 19254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 19215,
											"end": 19328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19346,
											"end": 19352,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19343,
											"end": 19344,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19340,
											"end": 19353,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 19337,
											"end": 19385,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 19337,
											"end": 19385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 19337,
											"end": 19385,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19381,
											"end": 19382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19363,
											"end": 19379,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19363,
											"end": 19379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19356,
											"end": 19383,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19133,
											"end": 19391,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 19396,
											"end": 19670,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 19396,
											"end": 19670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19525,
											"end": 19528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19563,
											"end": 19569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19557,
											"end": 19570,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 19625,
											"end": 19631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19620,
											"end": 19623,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19613,
											"end": 19617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19605,
											"end": 19611,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19601,
											"end": 19618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 19579,
											"end": 19632,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 19579,
											"end": 19632,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 19579,
											"end": 19632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19648,
											"end": 19664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19648,
											"end": 19664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19648,
											"end": 19664,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19648,
											"end": 19664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19648,
											"end": 19664,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19396,
											"end": 19670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19396,
											"end": 19670,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 19675,
											"end": 20058,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 19675,
											"end": 20058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19824,
											"end": 19826,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19813,
											"end": 19822,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19806,
											"end": 19827,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19787,
											"end": 19791,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19856,
											"end": 19862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19850,
											"end": 19863,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19899,
											"end": 19905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19894,
											"end": 19896,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19883,
											"end": 19892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19879,
											"end": 19897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 19906,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19915,
											"end": 19981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 19974,
											"end": 19980,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19969,
											"end": 19971,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19958,
											"end": 19967,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19954,
											"end": 19972,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19949,
											"end": 19951,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19941,
											"end": 19947,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 19952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19915,
											"end": 19981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 19915,
											"end": 19981,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 19915,
											"end": 19981,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 19915,
											"end": 19981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20042,
											"end": 20044,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 20021,
											"end": 20036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20017,
											"end": 20046,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20049,
											"end": 20051,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19998,
											"end": 20052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19998,
											"end": 20052,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19675,
											"end": 20058,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19675,
											"end": 20058,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"JPDA1()": "1df0c04c",
							"JPDA2()": "ec3c6dee",
							"JPDA3()": "ed9371d7",
							"addNFTBatch(address,uint256[],uint256[])": "63c66891",
							"addNftBatchWithNumber(address,uint256,uint256)": "4b02218f",
							"cancel()": "ea8a1af0",
							"claim()": "4e71d92d",
							"feeToken()": "647846a5",
							"getFeeMintAddress()": "19b8094b",
							"getUserMatingNft(address)": "5c39331c",
							"getUserOvipositionTime(address)": "5dbc3838",
							"mating(address,address,uint256,uint256)": "bf90fc1e",
							"nftCount(address)": "c971ebb3",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBreedInterval(uint256)": "79c5e977",
							"setConfig(address,address,address,address)": "087bc228",
							"setFeeAddress(address)": "8705fcd4",
							"setFeeAmount(uint256)": "6b392680",
							"setFeeMintAddress(address)": "5dada3bb",
							"setJPDA(uint256,uint256,uint256)": "3f3ed4ca",
							"setNFT(address,address)": "9fdd3a3f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"urgentWithdraw(address)": "c4091443",
							"users(address)": "a87430ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdB\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdB\",\"type\":\"uint256\"}],\"name\":\"Mating\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"JPDA1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JPDA2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JPDA3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addNFTBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"addNftBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeMintAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserMatingNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserOvipositionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenIdA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIdB\",\"type\":\"uint256\"}],\"name\":\"mating\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBreedInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"luckybeeMint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hashbeeMint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"knightbeeMint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"queenbeeMint\",\"type\":\"address\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mint\",\"type\":\"address\"}],\"name\":\"setFeeMintAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_JPDA1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_JPDA2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_JPDA3\",\"type\":\"uint256\"}],\"name\":\"setJPDA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"urgentWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Breed.NftInfo\",\"name\":\"nftA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Breed.NftInfo\",\"name\":\"nftB\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/NFTBreed.sol\":\"Breed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/NFTBreed.sol\":{\"keccak256\":\"0x53547c830edd98bde3de8ef2155eed257a657c74af2ec6c5c8f159100516dcab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b3d88775a3c953e8f639dae44c9d682226c678490958dea9c41d11e35b3626\",\"dweb:/ipfs/QmWrCVJa1eZ2uLrNFYbQ3UuvSTmC5iV5UhHN9PjgSug4cc\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1882,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 884,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "breedInterval",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 887,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "feeToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)2305"
							},
							{
								"astId": 889,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "feeAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 891,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "feeAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 894,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "randNonce",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 896,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "luckybeeMintAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 898,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "hashbeeMintAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 900,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "knightbeeMintAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 902,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "queenbeeMintAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 905,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "JPDA1",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 908,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "JPDA2",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 911,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "JPDA3",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 916,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_struct(UserInfo)881_storage)"
							},
							{
								"astId": 921,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "nftIds",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 925,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "breedTimeLimit",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)2305": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(UserInfo)881_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Breed.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)881_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(NftInfo)864_storage": {
								"encoding": "inplace",
								"label": "struct Breed.NftInfo",
								"members": [
									{
										"astId": 861,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 863,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)881_storage": {
								"encoding": "inplace",
								"label": "struct Breed.UserInfo",
								"members": [
									{
										"astId": 867,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "nftA",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(NftInfo)864_storage"
									},
									{
										"astId": 870,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "nftB",
										"offset": 0,
										"slot": "2",
										"type": "t_struct(NftInfo)864_storage"
									},
									{
										"astId": 872,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "t",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 874,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "startTimestamp",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 880,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "nftBreedTimes",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibArrayForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/NFTBreed.sol\":2267:6644  library LibArrayForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/NFTBreed.sol\":2267:6644  library LibArrayForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c0513c88461624ce513d6b4f3f6a5c173099cf623b5a7c264e2be63902bdac8f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0513c88461624ce513d6b4f3f6a5c173099cf623b5a7c264e2be63902bdac8f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 MLOAD EXTCODECOPY DUP9 CHAINID AND 0x24 0xCE MLOAD RETURNDATASIZE PUSH12 0x4F3F6A5C173099CF623B5A7C 0x26 0x4E 0x2B 0xE6 CODECOPY MUL 0xBD 0xAC DUP16 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2267:4377:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0513c88461624ce513d6b4f3f6a5c173099cf623b5a7c264e2be63902bdac8f64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 MLOAD EXTCODECOPY DUP9 CHAINID AND 0x24 0xCE MLOAD RETURNDATASIZE PUSH12 0x4F3F6A5C173099CF623B5A7C 0x26 0x4E 0x2B 0xE6 CODECOPY MUL 0xBD 0xAC DUP16 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"addValue(uint256[] storage pointer,uint256)": "infinite",
								"binarySearch(uint256[] storage pointer,uint256)": "infinite",
								"distinct(uint256[] storage pointer)": "infinite",
								"equals(uint256[] storage pointer,uint256[] storage pointer)": "infinite",
								"extend(uint256[] storage pointer,uint256[] memory)": "infinite",
								"firstIndexOf(uint256[] storage pointer,uint256)": "infinite",
								"max(uint256[] storage pointer)": "infinite",
								"min(uint256[] storage pointer)": "infinite",
								"removeByIndex(uint256[] storage pointer,uint256)": "infinite",
								"removeByValue(uint256[] storage pointer,uint256)": "infinite",
								"reverse(uint256[] storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0513c88461624ce513d6b4f3f6a5c173099cf623b5a7c264e2be63902bdac8f64736f6c634300080d0033",
									".code": [
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/NFTBreed.sol\":\"LibArrayForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/NFTBreed.sol\":{\"keccak256\":\"0x53547c830edd98bde3de8ef2155eed257a657c74af2ec6c5c8f159100516dcab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b3d88775a3c953e8f639dae44c9d682226c678490958dea9c41d11e35b3626\",\"dweb:/ipfs/QmWrCVJa1eZ2uLrNFYbQ3UuvSTmC5iV5UhHN9PjgSug4cc\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibSafeMathForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/NFTBreed.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/NFTBreed.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208531efb43154e3a6080847bdf37a71b27831b7b439528e483c9c67284ecbda9664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208531efb43154e3a6080847bdf37a71b27831b7b439528e483c9c67284ecbda9664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 BALANCE 0xEF 0xB4 BALANCE SLOAD 0xE3 0xA6 ADDMOD ADDMOD SELFBALANCE 0xBD RETURN PUSH27 0x71B27831B7B439528E483C9C67284ECBDA9664736F6C634300080D STOP CALLER ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;559:1704:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208531efb43154e3a6080847bdf37a71b27831b7b439528e483c9c67284ecbda9664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 BALANCE 0xEF 0xB4 BALANCE SLOAD 0xE3 0xA6 ADDMOD ADDMOD SELFBALANCE 0xBD RETURN PUSH27 0x71B27831B7B439528E483C9C67284ECBDA9664736F6C634300080D STOP CALLER ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"power(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208531efb43154e3a6080847bdf37a71b27831b7b439528e483c9c67284ecbda9664736f6c634300080d0033",
									".code": [
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/NFTBreed.sol\":\"LibSafeMathForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/NFTBreed.sol\":{\"keccak256\":\"0x53547c830edd98bde3de8ef2155eed257a657c74af2ec6c5c8f159100516dcab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b3d88775a3c953e8f639dae44c9d682226c678490958dea9c41d11e35b3626\",\"dweb:/ipfs/QmWrCVJa1eZ2uLrNFYbQ3UuvSTmC5iV5UhHN9PjgSug4cc\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1882,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":204:726  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":204:726  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_12:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3449:3482   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3431:3483   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3419:3421   */\n      0x20\n        /* \"#utility.yul\":3404:3422   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n      tag_10\n        /* \"#utility.yul\":3287:3489   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":252:471  function onERC1155Received(... */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_25\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_37:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_38:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_30:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_41:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:802   */\n    tag_31:\n        /* \"#utility.yul\":736:746   */\n      0x4e487b71\n        /* \"#utility.yul\":731:734   */\n      0xe0\n        /* \"#utility.yul\":727:747   */\n      shl\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:748   */\n      mstore\n        /* \"#utility.yul\":767:771   */\n      0x41\n        /* \"#utility.yul\":764:765   */\n      0x04\n        /* \"#utility.yul\":757:772   */\n      mstore\n        /* \"#utility.yul\":791:795   */\n      0x24\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":781:796   */\n      revert\n        /* \"#utility.yul\":807:1082   */\n    tag_32:\n        /* \"#utility.yul\":878:880   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      mload\n        /* \"#utility.yul\":943:945   */\n      0x1f\n        /* \"#utility.yul\":924:937   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":920:947   */\n      and\n        /* \"#utility.yul\":908:948   */\n      dup2\n      add\n        /* \"#utility.yul\":978:996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":963:997   */\n      dup2\n      gt\n        /* \"#utility.yul\":999:1021   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":960:1022   */\n      or\n        /* \"#utility.yul\":957:1045   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1025:1043   */\n      tag_45\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1061:1063   */\n      0x40\n        /* \"#utility.yul\":1054:1076   */\n      mstore\n        /* \"#utility.yul\":807:1082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1087:1799   */\n    tag_33:\n        /* \"#utility.yul\":1141:1146   */\n      0x00\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1191   */\n      0x1f\n        /* \"#utility.yul\":1179:1185   */\n      dup4\n        /* \"#utility.yul\":1175:1192   */\n      add\n        /* \"#utility.yul\":1171:1198   */\n      slt\n        /* \"#utility.yul\":1161:1216   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1212:1213   */\n      0x00\n        /* \"#utility.yul\":1209:1210   */\n      dup1\n        /* \"#utility.yul\":1202:1214   */\n      revert\n        /* \"#utility.yul\":1161:1216   */\n    tag_47:\n        /* \"#utility.yul\":1248:1254   */\n      dup2\n        /* \"#utility.yul\":1235:1255   */\n      calldataload\n        /* \"#utility.yul\":1274:1278   */\n      0x20\n        /* \"#utility.yul\":1297:1315   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1293:1295   */\n      dup3\n        /* \"#utility.yul\":1290:1316   */\n      gt\n        /* \"#utility.yul\":1287:1339   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1319:1337   */\n      tag_49\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1365:1367   */\n      dup2\n        /* \"#utility.yul\":1362:1363   */\n      0x05\n        /* \"#utility.yul\":1358:1368   */\n      shl\n        /* \"#utility.yul\":1388:1416   */\n      tag_50\n        /* \"#utility.yul\":1412:1414   */\n      dup3\n        /* \"#utility.yul\":1408:1410   */\n      dup3\n        /* \"#utility.yul\":1404:1415   */\n      add\n        /* \"#utility.yul\":1388:1416   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1450:1465   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1520:1535   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":1516:1540   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":1481:1493   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1552:1567   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":1549:1584   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1577:1578   */\n      dup1\n        /* \"#utility.yul\":1570:1582   */\n      revert\n        /* \"#utility.yul\":1549:1584   */\n    tag_51:\n        /* \"#utility.yul\":1616:1618   */\n      dup4\n        /* \"#utility.yul\":1608:1614   */\n      dup8\n        /* \"#utility.yul\":1604:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap3\n      pop\n        /* \"#utility.yul\":1628:1770   */\n    tag_52:\n        /* \"#utility.yul\":1644:1650   */\n      dup5\n        /* \"#utility.yul\":1639:1642   */\n      dup4\n        /* \"#utility.yul\":1636:1651   */\n      lt\n        /* \"#utility.yul\":1628:1770   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1710:1727   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1698:1728   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1661:1673   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1748:1760   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1628:1770   */\n      jump(tag_52)\n    tag_54:\n        /* \"#utility.yul\":1788:1793   */\n      swap8\n        /* \"#utility.yul\":1087:1799   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1804:2334   */\n    tag_34:\n        /* \"#utility.yul\":1846:1851   */\n      0x00\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1892:1896   */\n      0x1f\n        /* \"#utility.yul\":1884:1890   */\n      dup4\n        /* \"#utility.yul\":1880:1897   */\n      add\n        /* \"#utility.yul\":1876:1903   */\n      slt\n        /* \"#utility.yul\":1866:1921   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1914:1915   */\n      dup1\n        /* \"#utility.yul\":1907:1919   */\n      revert\n        /* \"#utility.yul\":1866:1921   */\n    tag_56:\n        /* \"#utility.yul\":1953:1959   */\n      dup2\n        /* \"#utility.yul\":1940:1960   */\n      calldataload\n        /* \"#utility.yul\":1979:1997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1975:1977   */\n      dup2\n        /* \"#utility.yul\":1972:1998   */\n      gt\n        /* \"#utility.yul\":1969:2021   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":2001:2019   */\n      tag_58\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2045:2100   */\n      tag_59\n        /* \"#utility.yul\":2088:2090   */\n      0x1f\n        /* \"#utility.yul\":2069:2082   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2065:2092   */\n      and\n        /* \"#utility.yul\":2094:2098   */\n      0x20\n        /* \"#utility.yul\":2061:2099   */\n      add\n        /* \"#utility.yul\":2045:2100   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2125:2127   */\n      dup2\n        /* \"#utility.yul\":2116:2123   */\n      dup2\n        /* \"#utility.yul\":2109:2128   */\n      mstore\n        /* \"#utility.yul\":2171:2174   */\n      dup5\n        /* \"#utility.yul\":2164:2168   */\n      0x20\n        /* \"#utility.yul\":2159:2161   */\n      dup4\n        /* \"#utility.yul\":2151:2157   */\n      dup7\n        /* \"#utility.yul\":2147:2162   */\n      add\n        /* \"#utility.yul\":2143:2169   */\n      add\n        /* \"#utility.yul\":2140:2175   */\n      gt\n        /* \"#utility.yul\":2137:2192   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2185:2186   */\n      dup1\n        /* \"#utility.yul\":2178:2190   */\n      revert\n        /* \"#utility.yul\":2137:2192   */\n    tag_60:\n        /* \"#utility.yul\":2253:2255   */\n      dup2\n        /* \"#utility.yul\":2246:2250   */\n      0x20\n        /* \"#utility.yul\":2238:2244   */\n      dup6\n        /* \"#utility.yul\":2234:2251   */\n      add\n        /* \"#utility.yul\":2227:2231   */\n      0x20\n        /* \"#utility.yul\":2218:2225   */\n      dup4\n        /* \"#utility.yul\":2214:2232   */\n      add\n        /* \"#utility.yul\":2201:2256   */\n      calldatacopy\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2276:2292   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2294:2298   */\n      0x20\n        /* \"#utility.yul\":2272:2299   */\n      add\n        /* \"#utility.yul\":2265:2303   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2280:2287   */\n      swap4\n        /* \"#utility.yul\":1804:2334   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:3282   */\n    tag_14:\n        /* \"#utility.yul\":2493:2499   */\n      0x00\n        /* \"#utility.yul\":2501:2507   */\n      dup1\n        /* \"#utility.yul\":2509:2515   */\n      0x00\n        /* \"#utility.yul\":2517:2523   */\n      dup1\n        /* \"#utility.yul\":2525:2531   */\n      0x00\n        /* \"#utility.yul\":2578:2581   */\n      0xa0\n        /* \"#utility.yul\":2566:2575   */\n      dup7\n        /* \"#utility.yul\":2557:2564   */\n      dup9\n        /* \"#utility.yul\":2553:2576   */\n      sub\n        /* \"#utility.yul\":2549:2582   */\n      slt\n        /* \"#utility.yul\":2546:2599   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2546:2599   */\n    tag_62:\n        /* \"#utility.yul\":2618:2647   */\n      tag_63\n        /* \"#utility.yul\":2637:2646   */\n      dup7\n        /* \"#utility.yul\":2618:2647   */\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2608:2647   */\n      swap5\n      pop\n        /* \"#utility.yul\":2666:2704   */\n      tag_64\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup8\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2666:2704   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2656:2704   */\n      swap4\n      pop\n        /* \"#utility.yul\":2755:2757   */\n      0x40\n        /* \"#utility.yul\":2744:2753   */\n      dup7\n        /* \"#utility.yul\":2740:2758   */\n      add\n        /* \"#utility.yul\":2727:2759   */\n      calldataload\n        /* \"#utility.yul\":2778:2796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2819:2821   */\n      dup1\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2808:2822   */\n      gt\n        /* \"#utility.yul\":2805:2839   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2835:2836   */\n      0x00\n        /* \"#utility.yul\":2832:2833   */\n      dup1\n        /* \"#utility.yul\":2825:2837   */\n      revert\n        /* \"#utility.yul\":2805:2839   */\n    tag_65:\n        /* \"#utility.yul\":2858:2919   */\n      tag_66\n        /* \"#utility.yul\":2911:2918   */\n      dup10\n        /* \"#utility.yul\":2902:2908   */\n      dup4\n        /* \"#utility.yul\":2891:2900   */\n      dup11\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2858:2919   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2848:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2972:2974   */\n      0x60\n        /* \"#utility.yul\":2961:2970   */\n      dup9\n        /* \"#utility.yul\":2957:2975   */\n      add\n        /* \"#utility.yul\":2944:2976   */\n      calldataload\n        /* \"#utility.yul\":2928:2976   */\n      swap2\n      pop\n        /* \"#utility.yul\":3001:3003   */\n      dup1\n        /* \"#utility.yul\":2991:2999   */\n      dup3\n        /* \"#utility.yul\":2988:3004   */\n      gt\n        /* \"#utility.yul\":2985:3021   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3014:3015   */\n      dup1\n        /* \"#utility.yul\":3007:3019   */\n      revert\n        /* \"#utility.yul\":2985:3021   */\n    tag_67:\n        /* \"#utility.yul\":3040:3103   */\n      tag_68\n        /* \"#utility.yul\":3095:3102   */\n      dup10\n        /* \"#utility.yul\":3084:3092   */\n      dup4\n        /* \"#utility.yul\":3073:3082   */\n      dup11\n        /* \"#utility.yul\":3069:3093   */\n      add\n        /* \"#utility.yul\":3040:3103   */\n      tag_33\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3030:3103   */\n      swap4\n      pop\n        /* \"#utility.yul\":3156:3159   */\n      0x80\n        /* \"#utility.yul\":3145:3154   */\n      dup9\n        /* \"#utility.yul\":3141:3160   */\n      add\n        /* \"#utility.yul\":3128:3161   */\n      calldataload\n        /* \"#utility.yul\":3112:3161   */\n      swap2\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      dup1\n        /* \"#utility.yul\":3176:3184   */\n      dup3\n        /* \"#utility.yul\":3173:3189   */\n      gt\n        /* \"#utility.yul\":3170:3206   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":3202:3203   */\n      0x00\n        /* \"#utility.yul\":3199:3200   */\n      dup1\n        /* \"#utility.yul\":3192:3204   */\n      revert\n        /* \"#utility.yul\":3170:3206   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":3225:3276   */\n      tag_70\n        /* \"#utility.yul\":3268:3275   */\n      dup9\n        /* \"#utility.yul\":3257:3265   */\n      dup3\n        /* \"#utility.yul\":3246:3255   */\n      dup10\n        /* \"#utility.yul\":3242:3266   */\n      add\n        /* \"#utility.yul\":3225:3276   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3215:3276   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2339:3282   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:4100   */\n    tag_20:\n        /* \"#utility.yul\":3598:3604   */\n      0x00\n        /* \"#utility.yul\":3606:3612   */\n      dup1\n        /* \"#utility.yul\":3614:3620   */\n      0x00\n        /* \"#utility.yul\":3622:3628   */\n      dup1\n        /* \"#utility.yul\":3630:3636   */\n      0x00\n        /* \"#utility.yul\":3683:3686   */\n      0xa0\n        /* \"#utility.yul\":3671:3680   */\n      dup7\n        /* \"#utility.yul\":3662:3669   */\n      dup9\n        /* \"#utility.yul\":3658:3681   */\n      sub\n        /* \"#utility.yul\":3654:3687   */\n      slt\n        /* \"#utility.yul\":3651:3704   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3651:3704   */\n    tag_73:\n        /* \"#utility.yul\":3723:3752   */\n      tag_74\n        /* \"#utility.yul\":3742:3751   */\n      dup7\n        /* \"#utility.yul\":3723:3752   */\n      tag_30\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3713:3752   */\n      swap5\n      pop\n        /* \"#utility.yul\":3771:3809   */\n      tag_75\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"#utility.yul\":3794:3803   */\n      dup8\n        /* \"#utility.yul\":3790:3808   */\n      add\n        /* \"#utility.yul\":3771:3809   */\n      tag_30\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3761:3809   */\n      swap4\n      pop\n        /* \"#utility.yul\":3856:3858   */\n      0x40\n        /* \"#utility.yul\":3845:3854   */\n      dup7\n        /* \"#utility.yul\":3841:3859   */\n      add\n        /* \"#utility.yul\":3828:3860   */\n      calldataload\n        /* \"#utility.yul\":3818:3860   */\n      swap3\n      pop\n        /* \"#utility.yul\":3907:3909   */\n      0x60\n        /* \"#utility.yul\":3896:3905   */\n      dup7\n        /* \"#utility.yul\":3892:3910   */\n      add\n        /* \"#utility.yul\":3879:3911   */\n      calldataload\n        /* \"#utility.yul\":3869:3911   */\n      swap2\n      pop\n        /* \"#utility.yul\":3962:3965   */\n      0x80\n        /* \"#utility.yul\":3951:3960   */\n      dup7\n        /* \"#utility.yul\":3947:3966   */\n      add\n        /* \"#utility.yul\":3934:3967   */\n      calldataload\n        /* \"#utility.yul\":3990:4008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3982:3988   */\n      dup2\n        /* \"#utility.yul\":3979:4009   */\n      gt\n        /* \"#utility.yul\":3976:4026   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4019:4020   */\n      dup1\n        /* \"#utility.yul\":4012:4024   */\n      revert\n        /* \"#utility.yul\":3976:4026   */\n    tag_76:\n        /* \"#utility.yul\":4045:4094   */\n      tag_70\n        /* \"#utility.yul\":4086:4093   */\n      dup9\n        /* \"#utility.yul\":4077:4083   */\n      dup3\n        /* \"#utility.yul\":4066:4075   */\n      dup10\n        /* \"#utility.yul\":4062:4084   */\n      add\n        /* \"#utility.yul\":4045:4094   */\n      tag_34\n      jump\t// in\n\n    auxdata: 0xa264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCC RETURNDATACOPY DUP11 PUSH13 0x42A70AD7499ABCAF01740F1499 DUP1 DUP11 GASPRICE 0xE9 ADDMOD 0xE5 0xC4 0x2E 0xBB 0xA9 0xDF EQ PUSH18 0x5064736F6C634300080D0033000000000000 ",
							"sourceMap": "204:522:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_2192": {
									"entryPoint": null,
									"id": 2192,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_2169": {
									"entryPoint": null,
									"id": 2169,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_2226": {
									"entryPoint": 197,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2871": {
									"entryPoint": null,
									"id": 2871,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4102:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:13"
															},
															"nodeType": "YulIf",
															"src": "594:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:13",
														"type": ""
													}
												],
												"src": "497:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "707:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "731:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "736:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "727:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "764:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "781:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "675:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "852:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "862:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "890:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "912:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "928:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "934:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "924:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "943:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "894:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1025:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "966:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "978:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "963:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1002:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "999:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:62:13"
															},
															"nodeType": "YulIf",
															"src": "957:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1065:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "832:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "841:6:13",
														"type": ""
													}
												],
												"src": "807:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1187:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1175:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1175:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1194:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:35:13"
															},
															"nodeType": "YulIf",
															"src": "1161:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1235:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1229:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1274:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1319:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1293:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1290:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:26:13"
															},
															"nodeType": "YulIf",
															"src": "1287:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1348:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1365:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1408:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1412:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1388:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1381:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1425:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1438:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1429:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1485:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1474:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1532:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1537:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1506:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1568:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1570:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1570:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1570:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1555:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1563:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1552:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:15:13"
															},
															"nodeType": "YulIf",
															"src": "1549:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1608:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1616:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1597:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1684:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1705:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1723:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1710:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1710:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1698:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1741:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1752:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1757:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1748:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1644:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1636:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1652:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1654:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1665:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1670:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1661:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1661:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1654:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1632:3:13",
																"statements": []
															},
															"src": "1628:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1788:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1125:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1133:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1141:5:13",
														"type": ""
													}
												],
												"src": "1087:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1884:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1892:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1880:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1899:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:35:13"
															},
															"nodeType": "YulIf",
															"src": "1866:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1940:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1934:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1999:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2001:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2001:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2001:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1975:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1972:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:26:13"
															},
															"nodeType": "YulIf",
															"src": "1969:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2073:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2077:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2088:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2084:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2084:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2065:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2065:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2094:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2045:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2034:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2116:7:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2125:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2109:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2109:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2176:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2178:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2178:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2178:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2151:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2159:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2147:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2147:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2164:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:35:13"
															},
															"nodeType": "YulIf",
															"src": "2137:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2253:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2201:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2280:7:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2289:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2276:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2294:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:16:13",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2321:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2312:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1830:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1838:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1846:5:13",
														"type": ""
													}
												],
												"src": "1804:530:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2585:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:33:13"
															},
															"nodeType": "YulIf",
															"src": "2546:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2656:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2666:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2727:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2717:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2768:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2778:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2772:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2823:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2832:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2835:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2825:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2825:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2825:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2808:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:14:13"
															},
															"nodeType": "YulIf",
															"src": "2805:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2848:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2911:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2858:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2928:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2972:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2944:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2932:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3005:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3017:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2991:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3001:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2988:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:16:13"
															},
															"nodeType": "YulIf",
															"src": "2985:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3084:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3095:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3040:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3112:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3156:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3116:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3190:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3192:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3192:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3192:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3176:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3186:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3173:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:16:13"
															},
															"nodeType": "YulIf",
															"src": "3170:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3257:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3268:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3225:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2470:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2481:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2493:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2501:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2509:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2517:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2525:6:13",
														"type": ""
													}
												],
												"src": "2339:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:103:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3396:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3396:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3438:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3453:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:3:13",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3470:10:13",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:20:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3449:33:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3431:52:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3355:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3366:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3377:4:13",
														"type": ""
													}
												],
												"src": "3287:202:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:33:13"
															},
															"nodeType": "YulIf",
															"src": "3651:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3713:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3723:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3761:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3771:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3818:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3841:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3841:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3828:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3907:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3879:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3920:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3962:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3934:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3924:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4019:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4022:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4012:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3982:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3990:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3979:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:30:13"
															},
															"nodeType": "YulIf",
															"src": "3976:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4035:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4086:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4045:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3586:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3598:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3606:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3614:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3622:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3630:6:13",
														"type": ""
													}
												],
												"src": "3494:606:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCC RETURNDATACOPY DUP11 PUSH13 0x42A70AD7499ABCAF01740F1499 DUP1 DUP11 GASPRICE 0xE9 ADDMOD 0xE5 0xC4 0x2E 0xBB 0xA9 0xDF EQ PUSH18 0x5064736F6C634300080D0033000000000000 ",
							"sourceMap": "204:522:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:5;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;387:221:5;;;;;;;;477:247:4;;;;;;:::i;:::-;-1:-1:-1;;;477:247:4;;;;;;;;;;;-1:-1:-1;;;;;;3449:33:13;;;3431:52;;3419:2;3404:18;477:247:4;3287:202:13;252:219:4;;;;;;:::i;:::-;-1:-1:-1;;;252:219:4;;;;;;;;387:221:5;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:5;505:96;387:221;-1:-1:-1;;387:221:5:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:275;878:2;872:9;943:2;924:13;;-1:-1:-1;;920:27:13;908:40;;978:18;963:34;;999:22;;;960:62;957:88;;;1025:18;;:::i;:::-;1061:2;1054:22;807:275;;-1:-1:-1;807:275:13:o;1087:712::-;1141:5;1194:3;1187:4;1179:6;1175:17;1171:27;1161:55;;1212:1;1209;1202:12;1161:55;1248:6;1235:20;1274:4;1297:18;1293:2;1290:26;1287:52;;;1319:18;;:::i;:::-;1365:2;1362:1;1358:10;1388:28;1412:2;1408;1404:11;1388:28;:::i;:::-;1450:15;;;1520;;;1516:24;;;1481:12;;;;1552:15;;;1549:35;;;1580:1;1577;1570:12;1549:35;1616:2;1608:6;1604:15;1593:26;;1628:142;1644:6;1639:3;1636:15;1628:142;;;1710:17;;1698:30;;1661:12;;;;1748;;;;1628:142;;;1788:5;1087:712;-1:-1:-1;;;;;;;1087:712:13:o;1804:530::-;1846:5;1899:3;1892:4;1884:6;1880:17;1876:27;1866:55;;1917:1;1914;1907:12;1866:55;1953:6;1940:20;1979:18;1975:2;1972:26;1969:52;;;2001:18;;:::i;:::-;2045:55;2088:2;2069:13;;-1:-1:-1;;2065:27:13;2094:4;2061:38;2045:55;:::i;:::-;2125:2;2116:7;2109:19;2171:3;2164:4;2159:2;2151:6;2147:15;2143:26;2140:35;2137:55;;;2188:1;2185;2178:12;2137:55;2253:2;2246:4;2238:6;2234:17;2227:4;2218:7;2214:18;2201:55;2301:1;2276:16;;;2294:4;2272:27;2265:38;;;;2280:7;1804:530;-1:-1:-1;;;1804:530:13:o;2339:943::-;2493:6;2501;2509;2517;2525;2578:3;2566:9;2557:7;2553:23;2549:33;2546:53;;;2595:1;2592;2585:12;2546:53;2618:29;2637:9;2618:29;:::i;:::-;2608:39;;2666:38;2700:2;2689:9;2685:18;2666:38;:::i;:::-;2656:48;;2755:2;2744:9;2740:18;2727:32;2778:18;2819:2;2811:6;2808:14;2805:34;;;2835:1;2832;2825:12;2805:34;2858:61;2911:7;2902:6;2891:9;2887:22;2858:61;:::i;:::-;2848:71;;2972:2;2961:9;2957:18;2944:32;2928:48;;3001:2;2991:8;2988:16;2985:36;;;3017:1;3014;3007:12;2985:36;3040:63;3095:7;3084:8;3073:9;3069:24;3040:63;:::i;:::-;3030:73;;3156:3;3145:9;3141:19;3128:33;3112:49;;3186:2;3176:8;3173:16;3170:36;;;3202:1;3199;3192:12;3170:36;;3225:51;3268:7;3257:8;3246:9;3242:24;3225:51;:::i;:::-;3215:61;;;2339:943;;;;;;;;:::o;3494:606::-;3598:6;3606;3614;3622;3630;3683:3;3671:9;3662:7;3658:23;3654:33;3651:53;;;3700:1;3697;3690:12;3651:53;3723:29;3742:9;3723:29;:::i;:::-;3713:39;;3771:38;3805:2;3794:9;3790:18;3771:38;:::i;:::-;3761:48;;3856:2;3845:9;3841:18;3828:32;3818:42;;3907:2;3896:9;3892:18;3879:32;3869:42;;3962:3;3951:9;3947:19;3934:33;3990:18;3982:6;3979:30;3976:50;;;4022:1;4019;4012:12;3976:50;4045:49;4086:7;4077:6;4066:9;4062:22;4045:49;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193000",
								"executionCost": "238",
								"totalCost": "193238"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
									".code": [
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3287,
											"end": 3489,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 736,
											"end": 746,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 731,
											"end": 734,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 924,
											"end": 937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 920,
											"end": 947,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 908,
											"end": 948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 908,
											"end": 948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 978,
											"end": 996,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 963,
											"end": 997,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1198,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1960,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1972,
											"end": 1998,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2092,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2128,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2161,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2201,
											"end": 2256,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2581,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2549,
											"end": 2582,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2974,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2988,
											"end": 3004,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 3069,
											"end": 3093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3189,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3242,
											"end": 3266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3687,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3860,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3911,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3965,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3967,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4024,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4086,
											"end": 4093,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLOAD SWAP6 PUSH13 0xDA34E5429E1FE807F02690D059 DUP9 0x5C ORIGIN DIV PUSH23 0x5AA20A59893EFAAC130564736F6C634300080D00330000 ",
							"sourceMap": "645:3270:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLOAD SWAP6 PUSH13 0xDA34E5429E1FE807F02690D059 DUP9 0x5C ORIGIN DIV PUSH23 0x5AA20A59893EFAAC130564736F6C634300080D00330000 ",
							"sourceMap": "645:3270:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4D SLT PUSH12 0x27E5770565AF6A4A784B9602 SELFDESTRUCT 0xCB 0xE1 CALLDATALOAD SWAP2 MSTORE 0x29 0xD2 SELFBALANCE 0xCF 0xBE CALL PUSH1 0xF4 0xA7 PUSH16 0x64736F6C634300080D00330000000000 ",
							"sourceMap": "467:6301:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4D SLT PUSH12 0x27E5770565AF6A4A784B9602 SELFDESTRUCT 0xCB 0xE1 CALLDATALOAD SWAP2 MSTORE 0x29 0xD2 SELFBALANCE 0xCF 0xBE CALL PUSH1 0xF4 0xA7 PUSH16 0x64736F6C634300080D00330000000000 ",
							"sourceMap": "467:6301:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> nft/NFTBreed.sol:48:65:\n   |\n48 |     function power(uint256 a, uint256 b) internal pure returns (uint256){\n   |                                                                 ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1708,
					"file": "nft/NFTBreed.sol",
					"start": 1701
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/NFTBreed.sol": {
				"ast": {
					"absolutePath": "nft/NFTBreed.sol",
					"exportedSymbols": {
						"Address": [
							2826
						],
						"Breed": [
							1874
						],
						"Context": [
							2848
						],
						"ERC1155Holder": [
							2193
						],
						"ERC1155Receiver": [
							2227
						],
						"ERC165": [
							2872
						],
						"IERC1155": [
							2101
						],
						"IERC1155Receiver": [
							2142
						],
						"IERC165": [
							2884
						],
						"IERC20": [
							2305
						],
						"LibArrayForUint256Utils": [
							848
						],
						"LibSafeMathForUint256Utils": [
							253
						],
						"Ownable": [
							1979
						],
						"SafeERC20": [
							2529
						],
						"SafeMath": [
							3196
						]
					},
					"id": 1875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 3197,
							"src": "86:73:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 2530,
							"src": "161:81:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 1980,
							"src": "244:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 2306,
							"src": "314:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 2102,
							"src": "388:76:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1875,
							"sourceUnit": 2194,
							"src": "466:87:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSafeMathForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "LibSafeMathForUint256Utils",
							"nameLocation": "567:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "670:122:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "689:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "681:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 16,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 18,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 19,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "681:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 23,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206164646974696f6e206f766572666c6f77",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "725:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															},
															"value": "SafeMathForUint256: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "709:56:0"
											},
											{
												"expression": {
													"id": 29,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "783:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 30,
												"nodeType": "Return",
												"src": "776:8:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "612:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "624:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "616:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "635:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "627:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:0"
									},
									"scope": 253,
									"src": "603:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "867:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 43,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a207375627472616374696f6e206f766572666c6f77",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															},
															"value": "SafeMathForUint256: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "878:59:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "956:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "948:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 51,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "964:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "948:17:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "983:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 55,
												"nodeType": "Return",
												"src": "976:8:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "809:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "824:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:22:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "858:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:9:0"
									},
									"scope": 253,
									"src": "800:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1067:201:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1082:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 69,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1092:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1082:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "1078:57:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "1100:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 65,
															"id": 74,
															"nodeType": "Return",
															"src": "1115:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1155:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "1147:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1147:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 84,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 85,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1183:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 87,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1183:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1195:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															},
															"value": "SafeMathForUint256: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1175:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1175:66:0"
											},
											{
												"expression": {
													"id": 92,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1259:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 93,
												"nodeType": "Return",
												"src": "1252:8:0"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1009:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1024:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:22:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:9:0"
									},
									"scope": 253,
									"src": "1000:268:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1343:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1362:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1362:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206469766973696f6e206279207a65726f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															},
															"value": "SafeMathForUint256: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1354:54:0"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1427:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1419:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 114,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1419:17:0"
											},
											{
												"expression": {
													"id": 117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1454:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 118,
												"nodeType": "Return",
												"src": "1447:8:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1285:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1297:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1289:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1308:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1300:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:22:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:9:0"
									},
									"scope": 253,
									"src": "1276:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1538:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d6f64756c6f206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															},
															"value": "SafeMathForUint256: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1549:53:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1624:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 139,
												"nodeType": "Return",
												"src": "1613:12:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1480:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1495:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:22:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:9:0"
									},
									"scope": 253,
									"src": "1471:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1709:176:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "1722:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1740:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 149,
													"id": 154,
													"nodeType": "Return",
													"src": "1733:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 156,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1752:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 149,
													"id": 160,
													"nodeType": "Return",
													"src": "1763:8:0"
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1792:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "1784:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"hexValue": "31",
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1796:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:13:0"
											},
											{
												"body": {
													"id": 183,
													"nodeType": "Block",
													"src": "1838:40:0",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "1861:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 179,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1864:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 177,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "1857:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1857:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1853:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "1853:13:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1827:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"initializationExpression": {
													"assignments": [
														167
													],
													"declarations": [
														{
															"constant": false,
															"id": 167,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1820:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 184,
															"src": "1812:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 166,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 169,
													"initialValue": {
														"hexValue": "30",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1812:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1834:3:0",
														"subExpression": {
															"id": 173,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 175,
													"nodeType": "ExpressionStatement",
													"src": "1834:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1808:70:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "1650:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1675:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:22:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:9:0"
									},
									"scope": 253,
									"src": "1641:244:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1960:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 195,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 196,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1978:14:0",
													"trueExpression": {
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 201,
												"nodeType": "Return",
												"src": "1971:21:0"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1902:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1914:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1906:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:9:0"
									},
									"scope": 253,
									"src": "1893:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2075:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 213,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2093:13:0",
													"trueExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 218,
												"nodeType": "Return",
												"src": "2086:20:0"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2017:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2029:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2066:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:9:0"
									},
									"scope": 253,
									"src": "2008:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2193:67:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "2212:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2216:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2212:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2222:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2211:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "2233:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2237:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2233:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 241,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "2241:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2245:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2241:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2233:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2232:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2232:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 248,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2231:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 250,
												"nodeType": "Return",
												"src": "2204:48:0"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2147:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2139:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2150:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:22:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2183:9:0"
									},
									"scope": 253,
									"src": "2122:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1875,
							"src": "559:1704:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibArrayForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 848,
							"linearizedBaseContracts": [
								848
							],
							"name": "LibArrayForUint256Utils",
							"nameLocation": "2275:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2802:497:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 266,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2832:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2816:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2813:62:0",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2834:41:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2854:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2861:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2853:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 265,
															"id": 273,
															"nodeType": "Return",
															"src": "2846:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "2895:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2887:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"hexValue": "30",
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2901:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2887:15:0"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "2921:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2913:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 282,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2928:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2928:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:29:0"
											},
											{
												"body": {
													"id": 329,
													"nodeType": "Block",
													"src": "2973:289:0",
													"statements": [
														{
															"assignments": [
																291
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 291,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "2993:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 329,
																	"src": "2985:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 290,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2985:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 297,
															"initialValue": {
																"arguments": [
																	{
																		"id": 294,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "3034:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 295,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3039:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 292,
																		"name": "LibSafeMathForUint256Utils",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "2999:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibSafeMathForUint256Utils_$253_$",
																			"typeString": "type(library LibSafeMathForUint256Utils)"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 252,
																	"src": "2999:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2999:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2985:59:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 298,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3059:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "3065:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3059:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 301,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "3073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 308,
																			"name": "array",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "3130:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[] storage pointer"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 309,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "3136:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3130:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 311,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "3143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3130:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 326,
																	"nodeType": "Block",
																	"src": "3203:48:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 320,
																					"name": "low",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "3222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 321,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3228:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3234:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3228:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3222:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 325,
																			"nodeType": "ExpressionStatement",
																			"src": "3222:13:0"
																		}
																	]
																},
																"id": 327,
																"nodeType": "IfStatement",
																"src": "3126:125:0",
																"trueBody": {
																	"id": 319,
																	"nodeType": "Block",
																	"src": "3148:49:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 313,
																					"name": "high",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "3167:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 314,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3174:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3180:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3174:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3167:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 318,
																			"nodeType": "ExpressionStatement",
																			"src": "3167:14:0"
																		}
																	]
																}
															},
															"id": 328,
															"nodeType": "IfStatement",
															"src": "3056:195:0",
															"trueBody": {
																"id": 307,
																"nodeType": "Block",
																"src": "3077:44:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3098:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 304,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 291,
																					"src": "3104:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3097:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 265,
																		"id": 306,
																		"nodeType": "Return",
																		"src": "3090:18:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 287,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2961:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 288,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2968:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2961:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "WhileStatement",
												"src": "2955:307:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 333,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3281:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 265,
												"id": 334,
												"nodeType": "Return",
												"src": "3274:17:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2305:399:0",
										"text": " @dev Searches a sortd uint256 array and returns the first element index that \n match the key value, Time complexity O(log n)\n @param array is expected to be sorted in ascending order\n @param key is element \n @return if matches key in the array return true,else return false \n @return the first element index that match the key value,if not exist,return 0"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binarySearch",
									"nameLocation": "2716:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "2747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2729:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 256,
													"nodeType": "ArrayTypeName",
													"src": "2729:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2762:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2754:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2790:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2796:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:12:0"
									},
									"scope": 848,
									"src": "2707:592:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3405:220:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 348,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3418:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "3415:56:0",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "3436:35:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3453:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3460:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3452:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 347,
															"id": 355,
															"nodeType": "Return",
															"src": "3445:17:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 380,
													"nodeType": "Block",
													"src": "3521:72:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 369,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "3533:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 371,
																	"indexExpression": {
																		"id": 370,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "3539:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3533:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 372,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3545:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3533:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "IfStatement",
															"src": "3530:55:0",
															"trueBody": {
																"id": 378,
																"nodeType": "Block",
																"src": "3549:36:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3567:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 375,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 359,
																					"src": "3573:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 376,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3566:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 347,
																		"id": 377,
																		"nodeType": "Return",
																		"src": "3559:16:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3499:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 363,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3499:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"initializationExpression": {
													"assignments": [
														359
													],
													"declarations": [
														{
															"constant": false,
															"id": 359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3492:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 381,
															"src": "3484:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 361,
													"initialValue": {
														"hexValue": "30",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3484:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3517:3:0",
														"subExpression": {
															"id": 366,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3517:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "3517:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3480:113:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3607:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 347,
												"id": 385,
												"nodeType": "Return",
												"src": "3600:17:0"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "firstIndexOf",
									"nameLocation": "3316:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3329:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "3329:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3362:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3354:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:38:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3389:15:0"
									},
									"scope": 848,
									"src": "3307:318:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3684:229:0",
										"statements": [
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "3703:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3695:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:12:0"
											},
											{
												"body": {
													"id": 439,
													"nodeType": "Block",
													"src": "3762:144:0",
													"statements": [
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 409,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3777:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 410,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3784:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 412,
																	"indexExpression": {
																		"id": 411,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3784:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3777:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "3777:15:0"
														},
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 415,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 417,
																	"indexExpression": {
																		"id": 416,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3813:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3807:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 418,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3818:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 425,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 419,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3824:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3824:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3839:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3824:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 423,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3843:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3824:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3818:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3807:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "3807:38:0"
														},
														{
															"expression": {
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 428,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3860:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 435,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 429,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3866:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3866:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3881:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3866:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 433,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3860:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 436,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3890:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3860:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "3860:34:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 400,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 401,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3739:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3739:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3739:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3735:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 440,
												"initializationExpression": {
													"assignments": [
														397
													],
													"declarations": [
														{
															"constant": false,
															"id": 397,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3728:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 440,
															"src": "3723:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 396,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3723:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 399,
													"initialValue": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3723:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3757:3:0",
														"subExpression": {
															"id": 406,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 408,
													"nodeType": "ExpressionStatement",
													"src": "3757:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3718:188:0"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reverse",
									"nameLocation": "3642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3650:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 389,
													"nodeType": "ArrayTypeName",
													"src": "3650:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3649:25:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:0:0"
									},
									"scope": 848,
									"src": "3633:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "4007:197:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 455,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4018:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "4015:54:0",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "4039:30:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 452,
															"id": 459,
															"nodeType": "Return",
															"src": "4048:12:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 484,
													"nodeType": "Block",
													"src": "4113:65:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "4125:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 475,
																	"indexExpression": {
																		"id": 474,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4127:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "4133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 478,
																	"indexExpression": {
																		"id": 477,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4125:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "4122:48:0",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "4138:32:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 452,
																		"id": 481,
																		"nodeType": "Return",
																		"src": "4148:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "4095:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 467,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4099:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4099:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4095:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"initializationExpression": {
													"assignments": [
														463
													],
													"declarations": [
														{
															"constant": false,
															"id": 463,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4088:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 485,
															"src": "4080:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 462,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 465,
													"initialValue": {
														"hexValue": "30",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4092:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4080:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4109:3:0",
														"subExpression": {
															"id": 470,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "4109:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4076:102:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 487,
												"nodeType": "Return",
												"src": "4185:11:0"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "3930:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3955:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3937:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "3937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3958:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 446,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 447,
													"nodeType": "ArrayTypeName",
													"src": "3958:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:42:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4002:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:6:0"
									},
									"scope": 848,
									"src": "3921:283:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "4280:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "4296:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 499,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "4304:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4296:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f756e6473",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4318:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															},
															"value": "ArrayForUint256: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "4288:69:0"
											},
											{
												"body": {
													"id": 524,
													"nodeType": "Block",
													"src": "4403:80:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 511,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4418:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"id": 512,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "4424:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4418:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4433:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 515,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "4439:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4447:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4439:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4433:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4418:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "4418:31:0"
														},
														{
															"expression": {
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4464:7:0",
																"subExpression": {
																	"id": 521,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4464:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "4464:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 505,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4377:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4385:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4385:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4377:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "WhileStatement",
												"src": "4370:113:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 526,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "4493:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4493:11:0"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByIndex",
									"nameLocation": "4221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4235:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ArrayTypeName",
													"src": "4235:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4265:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:37:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:0:0"
									},
									"scope": 848,
									"src": "4212:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4595:172:0",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4611:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4606:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"nodeType": "VariableDeclarationStatement",
												"src": "4606:10:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4632:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4627:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4627:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"nodeType": "VariableDeclarationStatement",
												"src": "4627:9:0"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 546,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "4648:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 547,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "4654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4647:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 550,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 549,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4663:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4663:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4647:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4647:42:0"
											},
											{
												"condition": {
													"id": 555,
													"name": "isIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "4703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "4700:60:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "4708:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 557,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "4735:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"id": 558,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "4742:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 556,
																	"name": "removeByIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4721:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4721:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "4721:27:0"
														}
													]
												}
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByValue",
									"nameLocation": "4533:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4547:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "4547:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4580:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:40:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4595:0:0"
									},
									"scope": 848,
									"src": "4524:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4841:159:0",
										"statements": [
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4854:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4849:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"nodeType": "VariableDeclarationStatement",
												"src": "4849:10:0"
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4875:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:9:0"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 578,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "4891:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 579,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "4897:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 580,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4890:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 582,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "4919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 583,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "4926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 581,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4906:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4906:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4890:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4890:42:0"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4946:5:0",
													"subExpression": {
														"id": 587,
														"name": "isIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "4947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "4943:50:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "4952:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "4975:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 589,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "4964:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4964:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4964:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "4964:17:0"
														}
													]
												}
											}
										]
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addValue",
									"nameLocation": "4784:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4793:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 565,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 566,
													"nodeType": "ArrayTypeName",
													"src": "4793:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:40:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4841:0:0"
									},
									"scope": 848,
									"src": "4775:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5074:115:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 607,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5085:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5097:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "5082:100:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "5099:83:0",
													"statements": [
														{
															"body": {
																"id": 630,
																"nodeType": "Block",
																"src": "5142:32:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 625,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 604,
																						"src": "5159:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 627,
																					"indexExpression": {
																						"id": 626,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 612,
																						"src": "5161:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5159:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 622,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "5152:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "5152:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer,uint256)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5152:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "5152:12:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 615,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 616,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "5128:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5128:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"initializationExpression": {
																"assignments": [
																	612
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 612,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5117:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 631,
																		"src": "5112:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 611,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5112:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 614,
																"initialValue": {
																	"hexValue": "30",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5112:10:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5138:3:0",
																	"subExpression": {
																		"id": 619,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "5138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 621,
																"nodeType": "ExpressionStatement",
																"src": "5138:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5108:66:0"
														}
													]
												}
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extend",
									"nameLocation": "5017:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5042:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5024:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 600,
													"nodeType": "ArrayTypeName",
													"src": "5024:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5045:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "5045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:41:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5074:0:0"
									},
									"scope": 848,
									"src": "5008:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "5274:667:0",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "contains",
														"nameLocation": "5290:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5285:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 643,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:13:0"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5314:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5309:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"nodeType": "VariableDeclarationStatement",
												"src": "5309:10:0"
											},
											{
												"body": {
													"id": 737,
													"nodeType": "Block",
													"src": "5370:532:0",
													"statements": [
														{
															"expression": {
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 660,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "5385:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5396:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5385:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "5385:16:0"
														},
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5416:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "5416:9:0"
														},
														{
															"assignments": [
																669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 669,
																	"mutability": "mutable",
																	"name": "j",
																	"nameLocation": "5445:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 737,
																	"src": "5440:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5440:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 673,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 670,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "5449:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5440:12:0"
														},
														{
															"body": {
																"id": 699,
																"nodeType": "Block",
																"src": "5494:175:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 681,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5516:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 683,
																				"indexExpression": {
																					"id": 682,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5522:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5516:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 684,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5528:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 686,
																				"indexExpression": {
																					"id": 685,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 650,
																					"src": "5534:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5528:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5516:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 698,
																		"nodeType": "IfStatement",
																		"src": "5513:141:0",
																		"trueBody": {
																			"id": 697,
																			"nodeType": "Block",
																			"src": "5537:117:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 688,
																							"name": "contains",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "5560:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 689,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5570:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "5560:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 691,
																					"nodeType": "ExpressionStatement",
																					"src": "5560:14:0"
																				},
																				{
																					"expression": {
																						"id": 694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 692,
																							"name": "index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 647,
																							"src": "5597:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 693,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 650,
																							"src": "5605:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5597:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 695,
																					"nodeType": "ExpressionStatement",
																					"src": "5597:9:0"
																				},
																				{
																					"id": 696,
																					"nodeType": "Break",
																					"src": "5629:5:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "5472:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 675,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5476:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5472:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 700,
															"loopExpression": {
																"expression": {
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5490:3:0",
																	"subExpression": {
																		"id": 678,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "5490:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 680,
																"nodeType": "ExpressionStatement",
																"src": "5490:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5467:202:0"
														},
														{
															"condition": {
																"id": 701,
																"name": "contains",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "5687:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "5683:208:0",
															"trueBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "5697:194:0",
																"statements": [
																	{
																		"body": {
																			"id": 725,
																			"nodeType": "Block",
																			"src": "5758:66:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 715,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5781:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 717,
																							"indexExpression": {
																								"id": 716,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 669,
																								"src": "5787:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "5781:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 718,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5792:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 722,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 721,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 719,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 669,
																									"src": "5798:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 720,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5802:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5798:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5792:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5781:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 724,
																					"nodeType": "ExpressionStatement",
																					"src": "5781:23:0"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 706,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "5732:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 707,
																						"name": "array",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 638,
																						"src": "5736:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																							"typeString": "uint256[] storage pointer"
																						}
																					},
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "5736:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5751:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5736:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5732:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 726,
																		"initializationExpression": {
																			"expression": {
																				"id": 704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 702,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 703,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "5725:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5721:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 705,
																			"nodeType": "ExpressionStatement",
																			"src": "5721:9:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5754:3:0",
																				"subExpression": {
																					"id": 712,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 714,
																			"nodeType": "ExpressionStatement",
																			"src": "5754:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "5716:108:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 727,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5842:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5842:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5842:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 731,
																		"nodeType": "ExpressionStatement",
																		"src": "5842:11:0"
																	},
																	{
																		"expression": {
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "5872:3:0",
																			"subExpression": {
																				"id": 732,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "5872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "5872:3:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 654,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5347:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"initializationExpression": {
													"assignments": [
														650
													],
													"declarations": [
														{
															"constant": false,
															"id": 650,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5340:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 738,
															"src": "5335:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 649,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 652,
													"initialValue": {
														"hexValue": "30",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5344:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5335:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5365:3:0",
														"subExpression": {
															"id": 657,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5365:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 659,
													"nodeType": "ExpressionStatement",
													"src": "5365:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5330:572:0"
											},
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "5912:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 740,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5921:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5921:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5912:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "5912:21:0"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distinct",
									"nameLocation": "5206:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5233:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5215:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 636,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 637,
													"nodeType": "ArrayTypeName",
													"src": "5215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:25:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "5266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:16:0"
									},
									"scope": 848,
									"src": "5197:744:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "6046:244:0",
										"statements": [
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "maxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "6057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 756,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 758,
														"indexExpression": {
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6074:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6057:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6057:19:0"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "maxIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "6087:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6087:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "6087:12:0"
											},
											{
												"body": {
													"id": 793,
													"nodeType": "Block",
													"src": "6149:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 776,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "6167:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 778,
																	"indexExpression": {
																		"id": 777,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "6173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6167:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 779,
																	"name": "maxValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6178:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6167:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 792,
															"nodeType": "IfStatement",
															"src": "6164:108:0",
															"trueBody": {
																"id": 791,
																"nodeType": "Block",
																"src": "6187:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 781,
																				"name": "maxValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "6206:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 782,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "6217:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 784,
																				"indexExpression": {
																					"id": 783,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "6223:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6217:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6206:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 786,
																		"nodeType": "ExpressionStatement",
																		"src": "6206:19:0"
																	},
																	{
																		"expression": {
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 787,
																				"name": "maxIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "6244:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "6255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6244:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 790,
																		"nodeType": "ExpressionStatement",
																		"src": "6244:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "6128:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 770,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6132:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6132:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6128:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"initializationExpression": {
													"assignments": [
														766
													],
													"declarations": [
														{
															"constant": false,
															"id": 766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6122:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 794,
															"src": "6114:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 768,
													"initialValue": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6114:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6145:3:0",
														"subExpression": {
															"id": 773,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "6145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 775,
													"nodeType": "ExpressionStatement",
													"src": "6145:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6110:173:0"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5958:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "5962:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 746,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 747,
													"nodeType": "ArrayTypeName",
													"src": "5962:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:25:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "maxValue",
												"nameLocation": "6018:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "maxIndex",
												"nameLocation": "6036:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6028:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:36:0"
									},
									"scope": 848,
									"src": "5949:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "6395:244:0",
										"statements": [
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "minValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 807,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 809,
														"indexExpression": {
															"hexValue": "30",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6406:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "6406:19:0"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "minIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "6436:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6436:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "6436:12:0"
											},
											{
												"body": {
													"id": 844,
													"nodeType": "Block",
													"src": "6498:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 827,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "6516:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 829,
																	"indexExpression": {
																		"id": 828,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "6522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6516:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 830,
																	"name": "minValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "6527:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6516:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "IfStatement",
															"src": "6513:108:0",
															"trueBody": {
																"id": 842,
																"nodeType": "Block",
																"src": "6536:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 832,
																				"name": "minValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "6555:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 833,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6566:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 835,
																				"indexExpression": {
																					"id": 834,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "6572:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6566:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6555:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 837,
																		"nodeType": "ExpressionStatement",
																		"src": "6555:19:0"
																	},
																	{
																		"expression": {
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 838,
																				"name": "minIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "6593:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 839,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "6604:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6593:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 841,
																		"nodeType": "ExpressionStatement",
																		"src": "6593:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "6477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 821,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6481:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6477:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"initializationExpression": {
													"assignments": [
														817
													],
													"declarations": [
														{
															"constant": false,
															"id": 817,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6471:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 845,
															"src": "6463:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 816,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 819,
													"initialValue": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6463:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6494:3:0",
														"subExpression": {
															"id": 824,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"nodeType": "ExpressionStatement",
													"src": "6494:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6459:173:0"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6307:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "6329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6311:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 797,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ArrayTypeName",
													"src": "6311:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6310:25:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "minValue",
												"nameLocation": "6367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "minIndex",
												"nameLocation": "6385:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6377:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:36:0"
									},
									"scope": 848,
									"src": "6298:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1875,
							"src": "2267:4377:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1979,
										"src": "6666:7:0"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "6666:7:0"
								},
								{
									"baseName": {
										"id": 851,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2193,
										"src": "6676:13:0"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "6676:13:0"
								}
							],
							"canonicalName": "Breed",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1874,
							"linearizedBaseContracts": [
								1874,
								2193,
								2227,
								2142,
								2872,
								2884,
								1979,
								2848
							],
							"name": "Breed",
							"nameLocation": "6657:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 855,
									"libraryName": {
										"id": 853,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3196,
										"src": "6702:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6696:27:0",
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6715:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 859,
									"libraryName": {
										"id": 856,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2529,
										"src": "6735:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6729:27:0",
									"typeName": {
										"id": 858,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 857,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2305,
											"src": "6749:6:0"
										},
										"referencedDeclaration": 2305,
										"src": "6749:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2305",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Breed.NftInfo",
									"id": 864,
									"members": [
										{
											"constant": false,
											"id": 861,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "6798:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 864,
											"src": "6790:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 860,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6790:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 863,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6832:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 864,
											"src": "6824:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 862,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6824:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftInfo",
									"nameLocation": "6771:7:0",
									"nodeType": "StructDefinition",
									"scope": 1874,
									"src": "6764:83:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Breed.UserInfo",
									"id": 881,
									"members": [
										{
											"constant": false,
											"id": 867,
											"mutability": "mutable",
											"name": "nftA",
											"nameLocation": "6894:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6886:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
												"typeString": "struct Breed.NftInfo"
											},
											"typeName": {
												"id": 866,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 865,
													"name": "NftInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 864,
													"src": "6886:7:0"
												},
												"referencedDeclaration": 864,
												"src": "6886:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
													"typeString": "struct Breed.NftInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "nftB",
											"nameLocation": "6917:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6909:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
												"typeString": "struct Breed.NftInfo"
											},
											"typeName": {
												"id": 869,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 868,
													"name": "NftInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 864,
													"src": "6909:7:0"
												},
												"referencedDeclaration": 864,
												"src": "6909:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
													"typeString": "struct Breed.NftInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "t",
											"nameLocation": "6940:1:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6932:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 871,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6932:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "6960:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6952:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 873,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6952:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "nftBreedTimes",
											"nameLocation": "7079:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "7034:58:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(uint256 => uint256))"
											},
											"typeName": {
												"id": 879,
												"keyType": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "7034:44:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(uint256 => uint256))"
												},
												"valueType": {
													"id": 878,
													"keyType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Mapping",
													"src": "7053:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
														"typeString": "mapping(uint256 => uint256)"
													},
													"valueType": {
														"id": 877,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7072:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "6866:8:0",
									"nodeType": "StructDefinition",
									"scope": 1874,
									"src": "6859:241:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 884,
									"mutability": "mutable",
									"name": "breedInterval",
									"nameLocation": "7124:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7108:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 882,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7108:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37323030",
										"id": 883,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7140:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7200_by_1",
											"typeString": "int_const 7200"
										},
										"value": "7200"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "647846a5",
									"id": 887,
									"mutability": "mutable",
									"name": "feeToken",
									"nameLocation": "7165:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7151:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2305",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 886,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 885,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2305,
											"src": "7151:6:0"
										},
										"referencedDeclaration": 2305,
										"src": "7151:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2305",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "feeAddress",
									"nameLocation": "7196:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7180:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 888,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7180:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 891,
									"mutability": "mutable",
									"name": "feeAmount",
									"nameLocation": "7229:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7213:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7213:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 894,
									"mutability": "mutable",
									"name": "randNonce",
									"nameLocation": "7250:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7245:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 892,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7245:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 893,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7262:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 896,
									"mutability": "mutable",
									"name": "luckybeeMintAddress",
									"nameLocation": "7288:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7272:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 895,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7272:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 898,
									"mutability": "mutable",
									"name": "hashbeeMintAddress",
									"nameLocation": "7330:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7314:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 897,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7314:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 900,
									"mutability": "mutable",
									"name": "knightbeeMintAddress",
									"nameLocation": "7371:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7355:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 899,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7355:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 902,
									"mutability": "mutable",
									"name": "queenbeeMintAddress",
									"nameLocation": "7414:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7398:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 901,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7398:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1df0c04c",
									"id": 905,
									"mutability": "mutable",
									"name": "JPDA1",
									"nameLocation": "7455:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7440:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7440:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537",
										"id": 904,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7463:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57_by_1",
											"typeString": "int_const 57"
										},
										"value": "57"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec3c6dee",
									"id": 908,
									"mutability": "mutable",
									"name": "JPDA2",
									"nameLocation": "7487:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7472:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7472:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3832",
										"id": 907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7495:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_82_by_1",
											"typeString": "int_const 82"
										},
										"value": "82"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed9371d7",
									"id": 911,
									"mutability": "mutable",
									"name": "JPDA3",
									"nameLocation": "7519:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7504:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 909,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7504:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 910,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7527:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 916,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "7581:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7545:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
										"typeString": "mapping(address => struct Breed.UserInfo)"
									},
									"typeName": {
										"id": 915,
										"keyType": {
											"id": 912,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7545:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
											"typeString": "mapping(address => struct Breed.UserInfo)"
										},
										"valueType": {
											"id": 914,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 913,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 881,
												"src": "7564:8:0"
											},
											"referencedDeclaration": 881,
											"src": "7564:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
												"typeString": "struct Breed.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 921,
									"mutability": "mutable",
									"name": "nftIds",
									"nameLocation": "7631:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7593:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 920,
										"keyType": {
											"id": 917,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7601:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7593:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7612:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 919,
											"nodeType": "ArrayTypeName",
											"src": "7612:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 925,
									"mutability": "mutable",
									"name": "breedTimeLimit",
									"nameLocation": "7677:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1874,
									"src": "7644:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 924,
										"keyType": {
											"id": 922,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7652:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7644:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 923,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7663:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b60",
									"id": 937,
									"name": "Mating",
									"nameLocation": "7706:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7713:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractA",
												"nameLocation": "7751:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7735:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractB",
												"nameLocation": "7781:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7765:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdA",
												"nameLocation": "7803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdB",
												"nameLocation": "7821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7712:118:0"
									},
									"src": "7700:131:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d",
									"id": 949,
									"name": "Cancel",
									"nameLocation": "7843:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7866:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7850:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractA",
												"nameLocation": "7888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7872:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractB",
												"nameLocation": "7918:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7902:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdA",
												"nameLocation": "7940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7932:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdB",
												"nameLocation": "7958:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7950:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7849:118:0"
									},
									"src": "7837:131:0"
								},
								{
									"anonymous": false,
									"eventSelector": "70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068",
									"id": 957,
									"name": "Claim",
									"nameLocation": "7980:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8002:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7986:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "8024:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "8008:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "8037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7985:68:0"
									},
									"src": "7974:80:0"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "8080:8:0",
										"statements": []
									},
									"id": 961,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8077:2:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8080:0:0"
									},
									"scope": 1874,
									"src": "8066:22:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "8222:388:0",
										"statements": [
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "luckybeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "8233:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "luckybeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "8255:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8233:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "8233:34:0"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 978,
														"name": "hashbeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "8278:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "hashbeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "8299:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8278:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "8278:32:0"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "knightbeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "8321:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 983,
														"name": "knightbeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "8344:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8321:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "8321:36:0"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "queenbeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "8368:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 987,
														"name": "queenbeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "8390:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8368:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "8368:34:0"
											},
											{
												"expression": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 990,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8413:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 992,
														"indexExpression": {
															"id": 991,
															"name": "luckybeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "8428:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8413:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8413:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "8413:39:0"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 996,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8463:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 997,
															"name": "hashbeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "8478:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8463:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8463:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "8463:38:0"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1002,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8512:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1004,
														"indexExpression": {
															"id": 1003,
															"name": "knightbeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "8527:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8512:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8512:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "8512:40:0"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1008,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8563:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1010,
														"indexExpression": {
															"id": 1009,
															"name": "queenbeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "8578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8563:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8601:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "8563:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "8563:39:0"
											}
										]
									},
									"functionSelector": "087bc228",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 971,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "8212:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8212:9:0"
										}
									],
									"name": "setConfig",
									"nameLocation": "8105:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "luckybeeMint",
												"nameLocation": "8123:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8115:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "hashbeeMint",
												"nameLocation": "8145:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8137:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "knightbeeMint",
												"nameLocation": "8166:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8158:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "queenbeeMint",
												"nameLocation": "8189:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8181:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8114:88:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8222:0:0"
									},
									"scope": 1874,
									"src": "8096:514:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "8702:83:0",
										"statements": [
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "JPDA1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1027,
														"name": "_JPDA1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "8721:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8713:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "8713:14:0"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "JPDA2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "8738:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1031,
														"name": "_JPDA2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "8746:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8738:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "8738:14:0"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1034,
														"name": "JPDA3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8763:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "_JPDA3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "8771:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8763:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "8763:14:0"
											}
										]
									},
									"functionSelector": "3f3ed4ca",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "8692:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8692:9:0"
										}
									],
									"name": "setJPDA",
									"nameLocation": "8627:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "_JPDA1",
												"nameLocation": "8643:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "_JPDA2",
												"nameLocation": "8659:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8651:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "_JPDA3",
												"nameLocation": "8675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:48:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8702:0:0"
									},
									"scope": 1874,
									"src": "8618:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "8943:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1055,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "8985:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1057,
															"indexExpression": {
																"id": 1056,
																"name": "nftContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "8992:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8985:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1058,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "9013:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1052,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8954:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "extend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "8954:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256[] memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8954:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "8954:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9079:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9079:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1069,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9099:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9091:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9091:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9091:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "9106:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1072,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "9111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9120:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1062,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "9037:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1061,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "9028:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9028:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "9028:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "9028:95:0"
											}
										]
									},
									"functionSelector": "63c66891",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "8933:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8933:9:0"
										}
									],
									"name": "addNFTBatch",
									"nameLocation": "8802:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "8832:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8824:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "8878:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8861:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "8861:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8892:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1045,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1046,
													"nodeType": "ArrayTypeName",
													"src": "8892:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8813:110:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8943:0:0"
									},
									"scope": 1874,
									"src": "8793:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "9273:488:0",
										"statements": [
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9301:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "9284:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1088,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9284:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1089,
															"nodeType": "ArrayTypeName",
															"src": "9284:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9321:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9307:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1091,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1092,
															"nodeType": "ArrayTypeName",
															"src": "9311:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9307:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9284:47:0"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9359:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "9342:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9342:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "9342:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"arguments": [
														{
															"id": 1105,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9383:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9369:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1103,
															"nodeType": "ArrayTypeName",
															"src": "9373:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9369:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9342:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "9412:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9420:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374617274206d757374206d6f7265207468616e207a65726f",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9423:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270",
																"typeString": "literal_string \"start must more than zero\""
															},
															"value": "start must more than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270",
																"typeString": "literal_string \"start must more than zero\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "9404:47:0"
											},
											{
												"body": {
													"id": 1153,
													"nodeType": "Block",
													"src": "9521:127:0",
													"statements": [
														{
															"expression": {
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1130,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "9536:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1134,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1131,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "9540:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1132,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "9542:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9540:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9536:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1135,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "9551:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9536:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "9536:16:0"
														},
														{
															"expression": {
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1138,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "9567:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1142,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1139,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "9575:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1140,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "9577:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9575:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9567:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9567:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "9567:20:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1150,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "9634:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1146,
																			"name": "nftIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "9602:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1148,
																		"indexExpression": {
																			"id": 1147,
																			"name": "nftContractAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "9609:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9602:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9602:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9602:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "9602:34:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "9504:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1125,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "9509:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9504:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"initializationExpression": {
													"assignments": [
														1116
													],
													"declarations": [
														{
															"constant": false,
															"id": 1116,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9475:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1154,
															"src": "9467:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1115,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1123,
													"initialValue": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1117,
																		"name": "idsNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "9480:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1118,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "9492:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9480:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9480:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1122,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9479:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9467:35:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "9516:3:0",
														"subExpression": {
															"id": 1127,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "9516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1129,
													"nodeType": "ExpressionStatement",
													"src": "9516:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9462:186:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9709:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9709:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1163,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9721:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9721:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9721:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "9736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1166,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "9741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9750:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1156,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "9667:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1155,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "9658:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9658:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "9658:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9658:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "9658:95:0"
											}
										]
									},
									"functionSelector": "4b02218f",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addNftBatchWithNumber",
									"nameLocation": "9148:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "9188:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "9180:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "9225:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "9217:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "9249:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "9241:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9169:96:0"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9273:0:0"
									},
									"scope": 1874,
									"src": "9139:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "9844:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1178,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "9859:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																	"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																}
															},
															"id": 1180,
															"indexExpression": {
																"id": 1179,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "9865:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9859:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																"typeString": "struct Breed.UserInfo storage ref"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "9859:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9889:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9859:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "9855:72:0",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "9892:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9914:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1177,
															"id": 1185,
															"nodeType": "Return",
															"src": "9907:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1188,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "9944:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																	"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																}
															},
															"id": 1190,
															"indexExpression": {
																"id": 1189,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "9950:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9944:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																"typeString": "struct Breed.UserInfo storage ref"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "9944:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1192,
														"name": "breedInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "9973:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9944:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1194,
												"nodeType": "Return",
												"src": "9937:49:0"
											}
										]
									},
									"functionSelector": "5dbc3838",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserOvipositionTime",
									"nameLocation": "9778:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9809:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9801:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9800:14:0"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9836:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9835:9:0"
									},
									"scope": 1874,
									"src": "9769:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "10098:257:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1209,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "10113:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																	"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																}
															},
															"id": 1211,
															"indexExpression": {
																"id": 1210,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "10119:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10113:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																"typeString": "struct Breed.UserInfo storage ref"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "10113:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10113:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "10109:101:0",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "10146:64:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10169:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1215,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10169:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10169:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10189:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10181:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1219,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10181:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10181:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10193:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10168:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address,address,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1208,
															"id": 1226,
															"nodeType": "Return",
															"src": "10161:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1229,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10228:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1231,
																	"indexExpression": {
																		"id": 1230,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10234:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10228:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "10228:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "10228:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1234,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10262:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1236,
																	"indexExpression": {
																		"id": 1235,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10268:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10262:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "10262:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "10262:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1239,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10296:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1241,
																	"indexExpression": {
																		"id": 1240,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10302:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10296:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "10296:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "10296:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1244,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1246,
																	"indexExpression": {
																		"id": 1245,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10328:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10322:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "10322:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "10322:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1249,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10227:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1250,
												"nodeType": "Return",
												"src": "10220:127:0"
											}
										]
									},
									"functionSelector": "5c39331c",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserMatingNft",
									"nameLocation": "10011:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10036:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10028:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10027:14:0"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10072:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10081:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10062:36:0"
									},
									"scope": 1874,
									"src": "10002:353:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "10469:1926:0",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10497:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "10480:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1264,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1263,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "10480:8:0"
															},
															"referencedDeclaration": 881,
															"src": "10480:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"baseExpression": {
														"id": 1266,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "10504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1269,
													"indexExpression": {
														"expression": {
															"id": 1267,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10510:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10504:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10480:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1272,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "10540:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "10540:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10563:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10540:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206272656564206f6e636520617420612074696d65",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10566:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26",
																"typeString": "literal_string \"Only breed once at a time\""
															},
															"value": "Only breed once at a time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26",
																"typeString": "literal_string \"Only breed once at a time\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10532:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "10532:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1280,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "10613:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftBreedTimes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "10613:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1283,
																	"indexExpression": {
																		"id": 1282,
																		"name": "nftContractA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "10632:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10613:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1285,
																"indexExpression": {
																	"id": 1284,
																	"name": "tokenIdA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "10646:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10613:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1286,
																	"name": "breedTimeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "10658:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1288,
																"indexExpression": {
																	"id": 1287,
																	"name": "nftContractA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "10673:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10658:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10613:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d65206c696d6974",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10688:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															},
															"value": "Time limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10605:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "10605:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1294,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "10720:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftBreedTimes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "10720:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1297,
																	"indexExpression": {
																		"id": 1296,
																		"name": "nftContractB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "10739:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10720:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1299,
																"indexExpression": {
																	"id": 1298,
																	"name": "tokenIdB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "10753:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10720:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1300,
																	"name": "breedTimeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "10765:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1302,
																"indexExpression": {
																	"id": 1301,
																	"name": "nftContractB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "10780:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10765:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10720:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d65206c696d6974",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10795:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															},
															"value": "Time limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10712:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "10712:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1308,
																	"name": "queenbeeMintAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "10827:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1309,
																	"name": "nftContractA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "10850:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10827:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1311,
																	"name": "queenbeeMintAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "10866:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1312,
																	"name": "nftContractB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "10889:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10866:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10827:74:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "576974686f757420717565656e626565",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10903:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d64d0a786cc713fd2c8333d9b947a55995a64d36731319f2ac7000e32ad35a5",
																"typeString": "literal_string \"Without queenbee\""
															},
															"value": "Without queenbee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d64d0a786cc713fd2c8333d9b947a55995a64d36731319f2ac7000e32ad35a5",
																"typeString": "literal_string \"Without queenbee\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10819:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "10819:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10941:77:0",
															"subExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1319,
																				"name": "queenbeeMintAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 902,
																				"src": "10943:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1320,
																				"name": "nftContractA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1254,
																				"src": "10966:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10943:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1322,
																				"name": "queenbeeMintAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 902,
																				"src": "10982:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1323,
																				"name": "nftContractB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "11005:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "10982:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "10943:74:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10942:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374204f6e6c79206f6e6520717565656e626565",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11020:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a0a2400dcfc0c7f5084ce41fc2b9240afa3c7fe9d3bf390833e7f97304c3486",
																"typeString": "literal_string \"Must Only one queenbee\""
															},
															"value": "Must Only one queenbee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a0a2400dcfc0c7f5084ce41fc2b9240afa3c7fe9d3bf390833e7f97304c3486",
																"typeString": "literal_string \"Must Only one queenbee\""
															}
														],
														"id": 1318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10933:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "10933:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11098:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11098:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1336,
															"name": "feeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "11123:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "11148:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1331,
															"name": "feeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "11058:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2362,
														"src": "11058:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2305_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2305_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11058:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "11058:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1344,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11219:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11219:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1348,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11239:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1346,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11231:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11231:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "tokenIdA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "11246:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11256:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11259:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1341,
																	"name": "nftContractA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "11188:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1340,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "11179:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11179:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2084,
														"src": "11179:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11179:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "11179:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1359,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11313:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11313:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1363,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11333:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1361,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11325:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11325:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1365,
															"name": "tokenIdB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "11340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11350:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11353:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1356,
																	"name": "nftContractB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "11282:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1355,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "11273:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11273:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2084,
														"src": "11273:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11273:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "11273:83:0"
											},
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1370,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "11377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "11377:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1373,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11399:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11399:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11377:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "11377:37:0"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1377,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11425:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftA",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 867,
															"src": "11425:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "11425:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1382,
														"name": "nftContractA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "11453:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11425:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "11425:40:0"
											},
											{
												"expression": {
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1385,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11476:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftA",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 867,
															"src": "11476:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "11476:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1390,
														"name": "tokenIdA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "11496:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11476:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "11476:28:0"
											},
											{
												"expression": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1393,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11515:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftB",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "11515:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "11515:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1398,
														"name": "nftContractB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "11543:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11515:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "11515:40:0"
											},
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1401,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11566:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftB",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "11566:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "11566:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1406,
														"name": "tokenIdB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "11586:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11566:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "11566:28:0"
											},
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "random",
														"nameLocation": "11612:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "11607:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1409,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11607:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1416,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11653:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11653:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1418,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11670:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11670:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1420,
																				"name": "randNonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "11682:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1414,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "11636:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "11636:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11636:56:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1413,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "11626:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11626:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11621:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1411,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11621:4:0",
																"typeDescriptions": {}
															}
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11621:73:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11697:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "11621:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11607:93:0"
											},
											{
												"expression": {
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11711:11:0",
													"subExpression": {
														"id": 1427,
														"name": "randNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "11711:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "11711:11:0"
											},
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "nftMint",
														"nameLocation": "11743:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "11735:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11735:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"nodeType": "VariableDeclarationStatement",
												"src": "11735:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1433,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "11782:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1434,
														"name": "JPDA1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "11791:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11782:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1441,
																"name": "random",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "11864:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1442,
																"name": "JPDA1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "11874:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11864:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1444,
																"name": "random",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "11883:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1445,
																"name": "JPDA2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "11892:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11883:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11864:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1453,
																	"name": "random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "11965:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1454,
																	"name": "JPDA2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "11975:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11965:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1456,
																	"name": "random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "11984:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1457,
																	"name": "JPDA3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "11993:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11984:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11965:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1469,
															"nodeType": "Block",
															"src": "12063:56:0",
															"statements": [
																{
																	"expression": {
																		"id": 1467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1465,
																			"name": "nftMint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1431,
																			"src": "12078:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1466,
																			"name": "queenbeeMintAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "12088:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12078:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1468,
																	"nodeType": "ExpressionStatement",
																	"src": "12078:29:0"
																}
															]
														},
														"id": 1470,
														"nodeType": "IfStatement",
														"src": "11961:158:0",
														"trueBody": {
															"id": 1464,
															"nodeType": "Block",
															"src": "12000:57:0",
															"statements": [
																{
																	"expression": {
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1460,
																			"name": "nftMint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1431,
																			"src": "12015:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1461,
																			"name": "knightbeeMintAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "12025:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "12015:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1463,
																	"nodeType": "ExpressionStatement",
																	"src": "12015:30:0"
																}
															]
														}
													},
													"id": 1471,
													"nodeType": "IfStatement",
													"src": "11860:259:0",
													"trueBody": {
														"id": 1452,
														"nodeType": "Block",
														"src": "11900:55:0",
														"statements": [
															{
																"expression": {
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1448,
																		"name": "nftMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "11915:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1449,
																		"name": "hashbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "11925:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "11915:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1451,
																"nodeType": "ExpressionStatement",
																"src": "11915:28:0"
															}
														]
													}
												},
												"id": 1472,
												"nodeType": "IfStatement",
												"src": "11779:340:0",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "11798:56:0",
													"statements": [
														{
															"expression": {
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1436,
																	"name": "nftMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "11813:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1437,
																	"name": "luckybeeMintAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "11823:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11813:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1439,
															"nodeType": "ExpressionStatement",
															"src": "11813:29:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1473,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "12129:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "t",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 872,
														"src": "12129:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1476,
														"name": "nftMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "12138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12129:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "12129:16:0"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1479,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12156:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftBreedTimes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 880,
																"src": "12156:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1484,
															"indexExpression": {
																"id": 1481,
																"name": "nftContractA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "12175:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12156:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1485,
														"indexExpression": {
															"id": 1482,
															"name": "tokenIdA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "12189:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12156:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12202:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12156:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "12156:47:0"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1489,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12214:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftBreedTimes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 880,
																"src": "12214:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1494,
															"indexExpression": {
																"id": 1491,
																"name": "nftContractB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "12233:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12214:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1495,
														"indexExpression": {
															"id": 1492,
															"name": "tokenIdB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "12247:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12214:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12260:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "12214:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "12214:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1500,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12284:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12284:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1502,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12296:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12296:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12296:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1505,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12323:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12323:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1508,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12350:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1509,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12350:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12350:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1511,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12369:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12369:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12369:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1499,
														"name": "Mating",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "12277:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12277:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "EmitStatement",
												"src": "12272:115:0"
											}
										]
									},
									"functionSelector": "bf90fc1e",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mating",
									"nameLocation": "10372:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "nftContractA",
												"nameLocation": "10388:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "10380:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "nftContractB",
												"nameLocation": "10410:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "10402:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "tokenIdA",
												"nameLocation": "10432:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "10424:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "tokenIdB",
												"nameLocation": "10450:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "10442:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10378:81:0"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10469:0:0"
									},
									"scope": 1874,
									"src": "10363:2032:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "12428:518:0",
										"statements": [
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12456:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "12439:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1521,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1520,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "12439:8:0"
															},
															"referencedDeclaration": 881,
															"src": "12439:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"baseExpression": {
														"id": 1523,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "12463:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1526,
													"indexExpression": {
														"expression": {
															"id": 1524,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12469:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12469:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12463:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12439:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1529,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12499:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "12499:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12522:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12499:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74207374617274206d6174696e67",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12525:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															},
															"value": "not start mating"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12491:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "12491:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1544,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12610:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1542,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12610:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12610:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1546,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12625:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12625:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1548,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12637:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12637:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12637:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12656:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12659:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1537,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "12566:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftA",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 867,
																		"src": "12566:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																			"typeString": "struct Breed.NftInfo storage ref"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "12566:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1536,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "12557:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12557:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2084,
														"src": "12557:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12557:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "12557:105:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1563,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12734:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12726:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12726:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12726:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1565,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12741:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12741:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1567,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12753:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12753:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12753:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12772:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12775:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1556,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "12682:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1557,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftB",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 870,
																		"src": "12682:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																			"typeString": "struct Breed.NftInfo storage ref"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "12682:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1555,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "12673:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12673:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2084,
														"src": "12673:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12673:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "12673:105:0"
											},
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1574,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "12789:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "12789:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12811:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12789:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "12789:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1581,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12835:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1583,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12847:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12847:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12847:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1586,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12874:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12874:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12874:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1589,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12901:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12901:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12901:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1592,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "12920:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12920:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12920:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1580,
														"name": "Cancel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "12828:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12828:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "EmitStatement",
												"src": "12823:115:0"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "12412:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12418:2:0"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12428:0:0"
									},
									"scope": 1874,
									"src": "12403:543:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "12978:614:0",
										"statements": [
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "nowTimestamp",
														"nameLocation": "12997:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "12989:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"expression": {
														"id": 1603,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "13012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "13012:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12989:38:0"
											},
											{
												"assignments": [
													1608
												],
												"declarations": [
													{
														"constant": false,
														"id": 1608,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "13055:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "13038:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1607,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1606,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "13038:8:0"
															},
															"referencedDeclaration": 881,
															"src": "13038:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"baseExpression": {
														"id": 1609,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "13062:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1612,
													"indexExpression": {
														"expression": {
															"id": 1610,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13068:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13068:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13062:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13038:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1615,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1608,
																	"src": "13098:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "13098:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13121:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13098:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74207374617274206d6174696e67",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13124:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															},
															"value": "not start mating"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															}
														],
														"id": 1614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13090:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "13090:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1623,
																	"name": "nowTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "13162:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1624,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "13177:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																			"typeString": "struct Breed.UserInfo storage pointer"
																		}
																	},
																	"id": 1625,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 874,
																	"src": "13177:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13162:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1627,
																"name": "breedInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 884,
																"src": "13200:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13162:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742066696e697368206d6174696e67",
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13215:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5",
																"typeString": "literal_string \"not finish mating\""
															},
															"value": "not finish mating"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5",
																"typeString": "literal_string \"not finish mating\""
															}
														],
														"id": 1622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13154:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "13154:81:0"
											},
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "nftMint",
														"nameLocation": "13256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "13248:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1632,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13248:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1636,
												"initialValue": {
													"expression": {
														"id": 1634,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "13266:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo storage pointer"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "t",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 872,
													"src": "13266:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13248:24:0"
											},
											{
												"assignments": [
													1638,
													1640
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "minTokenId",
														"nameLocation": "13292:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "13284:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13284:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1640,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "13312:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1679,
														"src": "13304:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1639,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1647,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1643,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "13349:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1645,
															"indexExpression": {
																"id": 1644,
																"name": "nftMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "13356:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13349:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"expression": {
															"id": 1641,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "13321:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "13321:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer) view returns (uint256,uint256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13321:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13283:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1651,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "13414:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1653,
															"indexExpression": {
																"id": 1652,
																"name": "nftMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "13421:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13414:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1654,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "13431:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1648,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "13376:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "removeByIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "13376:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13376:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "13376:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1663,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13493:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13485:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13485:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1665,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13500:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13500:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "13512:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13527:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1658,
																	"name": "nftMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "13459:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1657,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "13450:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13450:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2084,
														"src": "13450:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13450:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1671,
												"nodeType": "ExpressionStatement",
												"src": "13450:80:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1673,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13552:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13552:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "nftMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "13564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "13573:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1672,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "13546:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13546:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "EmitStatement",
												"src": "13541:43:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "12963:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12968:2:0"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12978:0:0"
									},
									"scope": 1874,
									"src": "12954:638:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "13665:44:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1687,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1689,
														"indexExpression": {
															"id": 1688,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "13690:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13683:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13683:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1691,
												"nodeType": "Return",
												"src": "13676:25:0"
											}
										]
									},
									"functionSelector": "c971ebb3",
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nftCount",
									"nameLocation": "13613:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "13630:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "13622:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13621:13:0"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "13656:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13655:9:0"
									},
									"scope": 1874,
									"src": "13604:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "13786:390:0",
										"statements": [
											{
												"assignments": [
													1701
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "13805:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "13797:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1702,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13814:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1704,
														"indexExpression": {
															"id": 1703,
															"name": "nftContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "13821:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13814:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13814:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13797:50:0"
											},
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "13875:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1758,
														"src": "13858:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1709,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13858:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1710,
															"nodeType": "ArrayTypeName",
															"src": "13858:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1717,
												"initialValue": {
													"arguments": [
														{
															"id": 1715,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "13899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13885:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1712,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13889:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1713,
															"nodeType": "ArrayTypeName",
															"src": "13889:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13885:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13858:48:0"
											},
											{
												"body": {
													"id": 1734,
													"nodeType": "Block",
													"src": "13954:41:0",
													"statements": [
														{
															"expression": {
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1728,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "13969:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1730,
																	"indexExpression": {
																		"id": 1729,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "13977:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13969:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13982:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13969:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1733,
															"nodeType": "ExpressionStatement",
															"src": "13969:14:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1722,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "13937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1723,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1701,
														"src": "13941:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13937:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"initializationExpression": {
													"assignments": [
														1719
													],
													"declarations": [
														{
															"constant": false,
															"id": 1719,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13930:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1735,
															"src": "13922:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1718,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1721,
													"initialValue": {
														"hexValue": "30",
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13922:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13949:3:0",
														"subExpression": {
															"id": 1725,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "13949:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1727,
													"nodeType": "ExpressionStatement",
													"src": "13949:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13917:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1742,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "14065:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1874",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14057:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1740,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14057:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14057:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1744,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14072:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14072:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1746,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "14084:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1748,
															"indexExpression": {
																"id": 1747,
																"name": "nftContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "14091:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14084:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1749,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "14112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14121:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1737,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "14014:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1736,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "14005:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2101_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14005:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2101",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "14005:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14005:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "14005:119:0"
											},
											{
												"expression": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "14135:33:0",
													"subExpression": {
														"baseExpression": {
															"id": 1753,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "14142:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1755,
														"indexExpression": {
															"id": 1754,
															"name": "nftContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "14149:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14142:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "14135:33:0"
											}
										]
									},
									"functionSelector": "c4091443",
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1698,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1697,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "13776:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13776:9:0"
										}
									],
									"name": "urgentWithdraw",
									"nameLocation": "13726:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "13749:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "13741:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13740:28:0"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13786:0:0"
									},
									"scope": 1874,
									"src": "13717:459:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "14242:355:0",
										"statements": [
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "nftStore",
														"nameLocation": "14270:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1811,
														"src": "14253:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1769,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1768,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "14253:8:0"
															},
															"referencedDeclaration": 881,
															"src": "14253:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1774,
												"initialValue": {
													"baseExpression": {
														"id": 1771,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "14281:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1773,
													"indexExpression": {
														"id": 1772,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1763,
														"src": "14287:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14281:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14253:37:0"
											},
											{
												"expression": {
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1775,
															"name": "nftStore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "14301:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "t",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 872,
														"src": "14301:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1778,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "14314:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14301:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "14301:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1781,
															"name": "nftStore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "14332:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "14332:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14332:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1810,
												"nodeType": "IfStatement",
												"src": "14328:262:0",
												"trueBody": {
													"id": 1809,
													"nodeType": "Block",
													"src": "14362:228:0",
													"statements": [
														{
															"expression": {
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1785,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14377:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1787,
																	"indexExpression": {
																		"id": 1786,
																		"name": "luckybeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "14392:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14377:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14415:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14377:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1790,
															"nodeType": "ExpressionStatement",
															"src": "14377:39:0"
														},
														{
															"expression": {
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1791,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14431:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1793,
																	"indexExpression": {
																		"id": 1792,
																		"name": "hashbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "14446:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14431:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14468:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14431:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1796,
															"nodeType": "ExpressionStatement",
															"src": "14431:38:0"
														},
														{
															"expression": {
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1797,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14484:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1799,
																	"indexExpression": {
																		"id": 1798,
																		"name": "knightbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "14499:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14484:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14523:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14484:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1802,
															"nodeType": "ExpressionStatement",
															"src": "14484:40:0"
														},
														{
															"expression": {
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1803,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14539:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1805,
																	"indexExpression": {
																		"id": 1804,
																		"name": "queenbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "14554:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14539:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "14539:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "14539:39:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9fdd3a3f",
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1765,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "14232:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14232:9:0"
										}
									],
									"name": "setNFT",
									"nameLocation": "14193:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "14208:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "14200:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14221:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "14213:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14199:25:0"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14242:0:0"
									},
									"scope": 1874,
									"src": "14184:413:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "14658:35:0",
										"statements": [
											{
												"expression": {
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14669:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1820,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "14682:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14669:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "14669:16:0"
											}
										]
									},
									"functionSelector": "8705fcd4",
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1817,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1816,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "14648:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14648:9:0"
										}
									],
									"name": "setFeeAddress",
									"nameLocation": "14614:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "14636:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "14628:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14628:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14627:13:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14658:0:0"
									},
									"scope": 1874,
									"src": "14605:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "14756:37:0",
										"statements": [
											{
												"expression": {
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1831,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "14767:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1832,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "14779:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14767:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "14767:18:0"
											}
										]
									},
									"functionSelector": "6b392680",
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1829,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1828,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "14746:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14746:9:0"
										}
									],
									"name": "setFeeAmount",
									"nameLocation": "14710:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14731:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "14723:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14722:16:0"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14756:0:0"
									},
									"scope": 1874,
									"src": "14701:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "14859:42:0",
										"statements": [
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1843,
														"name": "feeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "14870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2305",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1845,
																"name": "mint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "14888:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1844,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "14881:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2305_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14881:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2305",
															"typeString": "contract IERC20"
														}
													},
													"src": "14870:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "14870:23:0"
											}
										]
									},
									"functionSelector": "5dada3bb",
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1841,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1840,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "14849:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14849:9:0"
										}
									],
									"name": "setFeeMintAddress",
									"nameLocation": "14810:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "mint",
												"nameLocation": "14836:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "14828:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14827:14:0"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14859:0:0"
									},
									"scope": 1874,
									"src": "14801:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "14968:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1857,
															"name": "feeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "14994:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														],
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1855,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14986:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14986:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1859,
												"nodeType": "Return",
												"src": "14979:24:0"
											}
										]
									},
									"functionSelector": "19b8094b",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeMintAddress",
									"nameLocation": "14918:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14935:2:0"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "14959:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14958:9:0"
									},
									"scope": 1874,
									"src": "14909:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "15080:43:0",
										"statements": [
											{
												"expression": {
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1868,
														"name": "breedInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "15091:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1869,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "15107:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15091:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "15091:24:0"
											}
										]
									},
									"functionSelector": "79c5e977",
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1865,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "15070:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "15070:9:0"
										}
									],
									"name": "setBreedInterval",
									"nameLocation": "15028:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "15053:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "15045:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15044:18:0"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15080:0:0"
									},
									"scope": 1874,
									"src": "15019:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1875,
							"src": "6648:8478:0",
							"usedErrors": []
						}
					],
					"src": "59:15067:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2848
						],
						"Ownable": [
							1979
						]
					},
					"id": 1980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1980,
							"sourceUnit": 2849,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1879,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2848,
										"src": "668:7:1"
									},
									"id": 1880,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1878,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1979,
							"linearizedBaseContracts": [
								1979,
								2848
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1882,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1979,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1881,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1888,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1893,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1892,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1898,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 1979,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 1904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1882,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1903,
												"id": 1905,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 1979,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1911,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1913,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 1919,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1921,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1927,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 1922,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1925,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1924,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 1979,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1944,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1938,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1945,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1943,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1954,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1953,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1978,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1941,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1940,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1921,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 1979,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													1965
												],
												"declarations": [
													{
														"constant": false,
														"id": 1965,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1977,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1964,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1967,
												"initialValue": {
													"id": 1966,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1882,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1968,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1969,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1973,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1974,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1972,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 1979,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1980,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							2101
						],
						"IERC165": [
							2884
						]
					},
					"id": 2102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2102,
							"sourceUnit": 2885,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1984,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2884,
										"src": "357:7:2"
									},
									"id": 1985,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1983,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2101,
							"linearizedBaseContracts": [
								2101,
								2884
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1998,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 2013,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2006,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2007,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2009,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2010,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2022,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 2029,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2024,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 2039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 2101,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2041,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2042,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2044,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2045,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2048,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2049,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 2101,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 2101,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 2101,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 2084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 2101,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2090,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2091,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2093,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2094,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2096,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 2101,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2102,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							2142
						],
						"IERC165": [
							2884
						]
					},
					"id": 2143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2143,
							"sourceUnit": 2885,
							"src": "128:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2106,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2884,
										"src": "247:7:3"
									},
									"id": 2107,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2105,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2142,
							"linearizedBaseContracts": [
								2142,
								2884
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:3",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 2123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1118:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1144:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1166:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1209:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:3"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "1253:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2120,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:3"
									},
									"scope": 2142,
									"src": "1082:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:3",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 2141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2290:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2338:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2129,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2130,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2370:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2132,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2133,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2405:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:3"
									},
									"returnParameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2449:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2138,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:3"
									},
									"scope": 2142,
									"src": "2249:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2143,
							"src": "217:2242:3",
							"usedErrors": []
						}
					],
					"src": "103:2357:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							2193
						],
						"ERC1155Receiver": [
							2227
						],
						"ERC165": [
							2872
						],
						"IERC1155Receiver": [
							2142
						],
						"IERC165": [
							2884
						]
					},
					"id": 2194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 2145,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 2228,
							"src": "131:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2147,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2227,
										"src": "230:15:4"
									},
									"id": 2148,
									"nodeType": "InheritanceSpecifier",
									"src": "230:15:4"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2146,
								"nodeType": "StructuredDocumentation",
								"src": "164:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 2193,
							"linearizedBaseContracts": [
								2193,
								2227,
								2142,
								2872,
								2884
							],
							"name": "ERC1155Holder",
							"nameLocation": "213:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2123
									],
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "416:55:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2164,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "433:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$2193",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 2165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2169,
														"src": "433:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2166,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "433:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2163,
												"id": 2167,
												"nodeType": "Return",
												"src": "426:38:4"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "261:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "390:8:4"
									},
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "288:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "305:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "322:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "339:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "356:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "356:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:96:4"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "408:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "408:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:8:4"
									},
									"scope": 2193,
									"src": "252:219:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2141
									],
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "664:60:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2187,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "681:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$2193",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2192,
														"src": "681:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "681:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2186,
												"id": 2190,
												"nodeType": "Return",
												"src": "674:43:4"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "486:22:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2183,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "638:8:4"
									},
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "518:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "535:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "552:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2174,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "552:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2175,
													"nodeType": "ArrayTypeName",
													"src": "552:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "578:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "578:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2178,
													"nodeType": "ArrayTypeName",
													"src": "578:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "604:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "604:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:114:4"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "656:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2184,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:8:4"
									},
									"scope": 2193,
									"src": "477:247:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2194,
							"src": "204:522:4",
							"usedErrors": []
						}
					],
					"src": "106:621:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							2227
						],
						"ERC165": [
							2872
						],
						"IERC1155Receiver": [
							2142
						],
						"IERC165": [
							2884
						]
					},
					"id": 2228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 2196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2228,
							"sourceUnit": 2143,
							"src": "133:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 2197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2228,
							"sourceUnit": 2873,
							"src": "167:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2199,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2872,
										"src": "295:6:5"
									},
									"id": 2200,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:5"
								},
								{
									"baseName": {
										"id": 2201,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2142,
										"src": "303:16:5"
									},
									"id": 2202,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:5"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2198,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2227,
							"linearizedBaseContracts": [
								2227,
								2142,
								2872,
								2884
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2871,
										2883
									],
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "495:113:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2213,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "512:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2215,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2142,
																		"src": "532:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2142_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2142_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 2214,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$2142",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2221,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "589:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2219,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$2227_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2871,
															"src": "565:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2212,
												"id": 2224,
												"nodeType": "Return",
												"src": "505:96:5"
											}
										]
									},
									"documentation": {
										"id": 2203,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2209,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2207,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2872,
												"src": "463:6:5"
											},
											{
												"id": 2208,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2884,
												"src": "471:7:5"
											}
										],
										"src": "454:25:5"
									},
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "414:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:5"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "489:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:5"
									},
									"scope": 2227,
									"src": "387:221:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2228,
							"src": "258:352:5",
							"usedErrors": []
						}
					],
					"src": "108:503:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2305
						]
					},
					"id": 2306,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2229,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2230,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2305,
							"linearizedBaseContracts": [
								2305
							],
							"name": "IERC20",
							"nameLocation": "197:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:6"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "327:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:6"
									},
									"scope": 2305,
									"src": "281:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2237,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "438:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:6"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "478:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:6"
									},
									"scope": 2305,
									"src": "419:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2245,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "725:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:6"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "778:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:6"
									},
									"scope": 2305,
									"src": "707:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "1078:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "1093:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:6"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "1133:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:6"
									},
									"scope": 2305,
									"src": "1059:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "1812:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "1829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:6"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "1863:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:6"
									},
									"scope": 2305,
									"src": "1795:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2207:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2231:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2258:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:6"
									},
									"returnParameters": {
										"id": 2285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "2297:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:6"
									},
									"scope": 2305,
									"src": "2176:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2295,
									"name": "Transfer",
									"nameLocation": "2478:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "2487:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "2509:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "2529:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:6"
									},
									"src": "2472:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2304,
									"name": "Approval",
									"nameLocation": "2709:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2718:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2741:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2766:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:6"
									},
									"src": "2703:78:6"
								}
							],
							"scope": 2306,
							"src": "187:2596:6",
							"usedErrors": []
						}
					],
					"src": "91:2693:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2826
						],
						"IERC20": [
							2305
						],
						"SafeERC20": [
							2529
						]
					},
					"id": 2530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2307,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2308,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 2306,
							"src": "125:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 2309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2530,
							"sourceUnit": 2827,
							"src": "149:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2310,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2529,
							"linearizedBaseContracts": [
								2529
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2313,
									"libraryName": {
										"id": 2311,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2826,
										"src": "675:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:7",
									"typeName": {
										"id": 2312,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2335,
										"nodeType": "Block",
										"src": "803:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2324,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2316,
															"src": "833:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2327,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2316,
																			"src": "863:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2305",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2254,
																		"src": "863:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2330,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "888:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "892:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2325,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2323,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "813:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2305_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "813:86:7"
											}
										]
									},
									"id": 2336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "732:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2305",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2315,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2314,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2305,
														"src": "732:6:7"
													},
													"referencedDeclaration": 2305,
													"src": "732:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "754:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2336,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:7"
									},
									"returnParameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:7"
									},
									"scope": 2529,
									"src": "701:205:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "1040:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2349,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "1070:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2352,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "1100:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2305",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2286,
																		"src": "1100:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2355,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "1129:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2356,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2343,
																	"src": "1135:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2357,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "1139:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2350,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2348,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "1050:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2305_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:7"
											}
										]
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "947:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2305",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2337,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2305,
														"src": "947:6:7"
													},
													"referencedDeclaration": 2305,
													"src": "947:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "969:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "991:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "1011:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:7"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:7"
									},
									"scope": 2529,
									"src": "912:241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2405,
										"nodeType": "Block",
										"src": "1519:497:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2374,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2370,
																			"src": "1768:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2377,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2382,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2529",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2529",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2381,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2380,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2383,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2384,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2368,
																					"src": "1815:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2378,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2366,
																					"src": "1784:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2305",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2264,
																				"src": "1784:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2392,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2394,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "1939:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2397,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2366,
																			"src": "1969:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2305",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2274,
																		"src": "1969:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2400,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "1993:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2401,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "2002:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2395,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2393,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "1919:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2305_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:7"
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "1443:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2305",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2364,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2305,
														"src": "1443:6:7"
													},
													"referencedDeclaration": 2305,
													"src": "1443:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "1465:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2406,
												"src": "1490:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:7"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:7"
									},
									"scope": 2529,
									"src": "1413:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "2138:194:7",
										"statements": [
											{
												"assignments": [
													2417
												],
												"declarations": [
													{
														"constant": false,
														"id": 2417,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2441,
														"src": "2148:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2428,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2422,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2529",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2529",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2420,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2424,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2411,
																"src": "2202:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2418,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "2171:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2305",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2264,
															"src": "2171:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2426,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "2213:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2430,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "2248:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2433,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2409,
																			"src": "2278:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2305",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2274,
																		"src": "2278:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "2302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2437,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2417,
																	"src": "2311:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2431,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2305",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2429,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2528,
														"src": "2228:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2305_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2440,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:7"
											}
										]
									},
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "2062:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2305",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2408,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2407,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2305,
														"src": "2062:6:7"
													},
													"referencedDeclaration": 2305,
													"src": "2062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "2084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "2109:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:7"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:7"
									},
									"scope": 2529,
									"src": "2022:310:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2489,
										"nodeType": "Block",
										"src": "2454:370:7",
										"statements": [
											{
												"id": 2488,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:7",
												"statements": [
													{
														"assignments": [
															2453
														],
														"declarations": [
															{
																"constant": false,
																"id": 2453,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2488,
																"src": "2488:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2452,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2462,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2458,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2529",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2529",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2456,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2460,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2447,
																	"src": "2542:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2454,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2445,
																	"src": "2511:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2305",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2264,
																"src": "2511:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2464,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2453,
																		"src": "2572:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2465,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2449,
																		"src": "2588:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2463,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2469,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:7"
													},
													{
														"assignments": [
															2471
														],
														"declarations": [
															{
																"constant": false,
																"id": 2471,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2488,
																"src": "2653:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2470,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2475,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2472,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2453,
																"src": "2676:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2473,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "2691:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2477,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2445,
																	"src": "2730:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2305",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2480,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2445,
																					"src": "2760:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2305",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2274,
																				"src": "2760:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2483,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2447,
																			"src": "2784:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2484,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2471,
																			"src": "2793:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2478,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2305",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2476,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "2710:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2305_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2487,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:7"
													}
												]
											}
										]
									},
									"id": 2490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "2378:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2305",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2443,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2305,
														"src": "2378:6:7"
													},
													"referencedDeclaration": 2305,
													"src": "2378:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "2400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2490,
												"src": "2425:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:7"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:7"
									},
									"scope": 2529,
									"src": "2338:486:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2527,
										"nodeType": "Block",
										"src": "3277:636:7",
										"statements": [
											{
												"assignments": [
													2500
												],
												"declarations": [
													{
														"constant": false,
														"id": 2500,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2527,
														"src": "3626:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2499,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"arguments": [
														{
															"id": 2506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2496,
															"src": "3680:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2503,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2494,
																	"src": "3660:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2305",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2305",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2501,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2620,
														"src": "3652:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2510,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2500,
															"src": "3735:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2526,
												"nodeType": "IfStatement",
												"src": "3731:176:7",
												"trueBody": {
													"id": 2525,
													"nodeType": "Block",
													"src": "3758:149:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2517,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2500,
																				"src": "3830:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2519,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2518,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2520,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2515,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2514,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2524,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2491,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "3236:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2305",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2492,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2305,
														"src": "3236:6:7"
													},
													"referencedDeclaration": 2305,
													"src": "3236:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2305",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "3250:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:7"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:7"
									},
									"scope": 2529,
									"src": "3207:706:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2530,
							"src": "645:3270:7",
							"usedErrors": []
						}
					],
					"src": "100:3816:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2826
						]
					},
					"id": 2827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2532,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2826,
							"linearizedBaseContracts": [
								2826
							],
							"name": "Address",
							"nameLocation": "187:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "837:311:8",
										"statements": [
											{
												"assignments": [
													2541
												],
												"declarations": [
													{
														"constant": false,
														"id": 2541,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2548,
														"src": "1034:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2542,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2535,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:8",
														"valueSize": 1
													},
													{
														"declaration": 2541,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:8",
														"valueSize": 1
													}
												],
												"id": 2543,
												"nodeType": "InlineAssembly",
												"src": "1056:61:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2544,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "1133:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2539,
												"id": 2547,
												"nodeType": "Return",
												"src": "1126:15:8"
											}
										]
									},
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "791:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:8"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "831:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:8"
									},
									"scope": 2826,
									"src": "771:377:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "2136:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2560,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2826",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2826",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2558,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2563,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2554,
																"src": "2179:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:8"
											},
											{
												"assignments": [
													2569,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2569,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "2231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2568,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2576,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2570,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2552,
																"src": "2249:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2572,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2554,
																"src": "2271:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2578,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "2300:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:8"
											}
										]
									},
									"documentation": {
										"id": 2550,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "2084:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "2111:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:8"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:8"
									},
									"scope": 2826,
									"src": "2065:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "3208:84:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2594,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "3238:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2595,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "3246:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2593,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2600,
															2620
														],
														"referencedDeclaration": 2620,
														"src": "3225:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2592,
												"id": 2598,
												"nodeType": "Return",
												"src": "3218:67:8"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "3141:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "3157:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:8"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "3194:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:8"
									},
									"scope": 2826,
									"src": "3119:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "3661:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2613,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "3700:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2614,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "3708:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2616,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "3717:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2612,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2640,
															2690
														],
														"referencedDeclaration": 2690,
														"src": "3678:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2611,
												"id": 2618,
												"nodeType": "Return",
												"src": "3671:59:8"
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "3545:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "3569:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "3596:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2606,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:8"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "3647:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:8"
									},
									"scope": 2826,
									"src": "3514:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "4242:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "4281:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2634,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "4289:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2627,
															"src": "4295:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2632,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2640,
															2690
														],
														"referencedDeclaration": 2690,
														"src": "4259:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2631,
												"id": 2638,
												"nodeType": "Return",
												"src": "4252:94:8"
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "4139:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "4163:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2624,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "4190:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:8"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "4228:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:8"
									},
									"scope": 2826,
									"src": "4099:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2689,
										"nodeType": "Block",
										"src": "4780:320:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2657,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2826",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2826",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2655,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2660,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "4823:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2664,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2667,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2643,
																	"src": "4900:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2666,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "4889:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:8"
											},
											{
												"assignments": [
													2673,
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2673,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2689,
														"src": "4953:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2672,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2689,
														"src": "4967:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2674,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2682,
												"initialValue": {
													"arguments": [
														{
															"id": 2680,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "5020:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2676,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "4994:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2678,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2647,
																"src": "5013:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2684,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "5059:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2685,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "5068:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2686,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "5080:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2683,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2825,
														"src": "5042:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2653,
												"id": 2688,
												"nodeType": "Return",
												"src": "5035:58:8"
											}
										]
									},
									"documentation": {
										"id": 2641,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "4641:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "4665:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "4692:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "4715:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:8"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "4766:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:8"
									},
									"scope": 2826,
									"src": "4601:499:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "5377:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2701,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2693,
															"src": "5413:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2702,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2695,
															"src": "5421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2700,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2707,
															2742
														],
														"referencedDeclaration": 2742,
														"src": "5394:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2699,
												"id": 2705,
												"nodeType": "Return",
												"src": "5387:80:8"
											}
										]
									},
									"documentation": {
										"id": 2691,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "5305:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "5321:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:8"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2707,
												"src": "5363:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:8"
									},
									"scope": 2826,
									"src": "5277:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "5816:228:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2721,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2710,
																	"src": "5845:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2720,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "5834:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2725,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:8"
											},
											{
												"assignments": [
													2727,
													2729
												],
												"declarations": [
													{
														"constant": false,
														"id": 2727,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2741,
														"src": "5905:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2726,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2729,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2741,
														"src": "5919:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2728,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2734,
												"initialValue": {
													"arguments": [
														{
															"id": 2732,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2712,
															"src": "5964:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2730,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2710,
															"src": "5946:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2736,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "6003:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2737,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "6012:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2738,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2714,
															"src": "6024:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2735,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2825,
														"src": "5986:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2718,
												"id": 2740,
												"nodeType": "Return",
												"src": "5979:58:8"
											}
										]
									},
									"documentation": {
										"id": 2708,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "5695:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "5719:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2714,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "5746:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2713,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:8"
									},
									"returnParameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "5802:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2716,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:8"
									},
									"scope": 2826,
									"src": "5658:386:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2758,
										"nodeType": "Block",
										"src": "6320:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2753,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "6358:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2754,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "6366:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2752,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2759,
															2794
														],
														"referencedDeclaration": 2794,
														"src": "6337:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2751,
												"id": 2757,
												"nodeType": "Return",
												"src": "6330:84:8"
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "6253:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "6269:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:8"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2759,
												"src": "6306:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:8"
									},
									"scope": 2826,
									"src": "6223:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "6762:232:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2773,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "6791:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2772,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2549,
																"src": "6780:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2777,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:8"
											},
											{
												"assignments": [
													2779,
													2781
												],
												"declarations": [
													{
														"constant": false,
														"id": 2779,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2793,
														"src": "6853:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2778,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2781,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2793,
														"src": "6867:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2780,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2786,
												"initialValue": {
													"arguments": [
														{
															"id": 2784,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2764,
															"src": "6914:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2782,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2762,
															"src": "6894:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2788,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2779,
															"src": "6953:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2789,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2781,
															"src": "6962:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2790,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2766,
															"src": "6974:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2787,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2825,
														"src": "6936:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2770,
												"id": 2792,
												"nodeType": "Return",
												"src": "6929:58:8"
											}
										]
									},
									"documentation": {
										"id": 2760,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "6646:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "6670:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "6697:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2765,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:8"
									},
									"returnParameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "6748:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:8"
									},
									"scope": 2826,
									"src": "6607:387:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2824,
										"nodeType": "Block",
										"src": "7374:532:8",
										"statements": [
											{
												"condition": {
													"id": 2806,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2797,
													"src": "7388:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2822,
													"nodeType": "Block",
													"src": "7445:455:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2810,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2799,
																		"src": "7529:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2820,
																"nodeType": "Block",
																"src": "7837:53:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2817,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2801,
																					"src": "7862:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2816,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2819,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:8"
																	}
																]
															},
															"id": 2821,
															"nodeType": "IfStatement",
															"src": "7525:365:8",
															"trueBody": {
																"id": 2815,
																"nodeType": "Block",
																"src": "7552:279:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:8"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2799,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2799,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 2814,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:8"
																	}
																]
															}
														}
													]
												},
												"id": 2823,
												"nodeType": "IfStatement",
												"src": "7384:516:8",
												"trueBody": {
													"id": 2809,
													"nodeType": "Block",
													"src": "7397:42:8",
													"statements": [
														{
															"expression": {
																"id": 2807,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "7418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2805,
															"id": 2808,
															"nodeType": "Return",
															"src": "7411:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2795,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:8",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "7249:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "7271:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "7304:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2800,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:8"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "7360:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:8"
									},
									"scope": 2826,
									"src": "7214:692:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2827,
							"src": "179:7729:8",
							"usedErrors": []
						}
					],
					"src": "86:7823:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2848
						]
					},
					"id": 2849,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2829,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2848,
							"linearizedBaseContracts": [
								2848
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2834,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2833,
												"id": 2836,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 2848,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2843,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2842,
												"id": 2845,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2840,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 2848,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2849,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2872
						],
						"IERC165": [
							2884
						]
					},
					"id": 2873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2850,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2873,
							"sourceUnit": 2885,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2853,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2884,
										"src": "754:7:10"
									},
									"id": 2854,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2852,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2872,
							"linearizedBaseContracts": [
								2872,
								2884
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2883
									],
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2863,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2865,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2884,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2884_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2884_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2864,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2884",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2862,
												"id": 2869,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2856,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 2872,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2873,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2884
						]
					},
					"id": 2885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2875,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2884,
							"linearizedBaseContracts": [
								2884
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2877,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 2882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2880,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 2884,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2885,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							3196
						]
					},
					"id": 3197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2886,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2887,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 3196,
							"linearizedBaseContracts": [
								3196
							],
							"name": "SafeMath",
							"nameLocation": "475:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2918,
										"nodeType": "Block",
										"src": "702:140:12",
										"statements": [
											{
												"id": 2917,
												"nodeType": "UncheckedBlock",
												"src": "712:124:12",
												"statements": [
													{
														"assignments": [
															2900
														],
														"declarations": [
															{
																"constant": false,
																"id": 2900,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2917,
																"src": "736:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2899,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2904,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2901,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2890,
																"src": "748:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2902,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2892,
																"src": "752:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2905,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2900,
																"src": "771:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2906,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2890,
																"src": "775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2912,
														"nodeType": "IfStatement",
														"src": "767:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2910,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2898,
															"id": 2911,
															"nodeType": "Return",
															"src": "778:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2914,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2900,
																	"src": "823:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2915,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2898,
														"id": 2916,
														"nodeType": "Return",
														"src": "809:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2888,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "642:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "653:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:12"
									},
									"returnParameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "687:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2919,
												"src": "693:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:12"
									},
									"scope": 3196,
									"src": "626:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2946,
										"nodeType": "Block",
										"src": "1064:113:12",
										"statements": [
											{
												"id": 2945,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2931,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2924,
																"src": "1102:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2932,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2922,
																"src": "1106:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2938,
														"nodeType": "IfStatement",
														"src": "1098:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2936,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2930,
															"id": 2937,
															"nodeType": "Return",
															"src": "1109:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2940,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2922,
																		"src": "1154:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2941,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2924,
																		"src": "1158:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2943,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2930,
														"id": 2944,
														"nodeType": "Return",
														"src": "1140:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2920,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:12",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1004:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1015:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:12"
									},
									"returnParameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1049:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "1055:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:12"
									},
									"scope": 3196,
									"src": "988:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2988,
										"nodeType": "Block",
										"src": "1401:417:12",
										"statements": [
											{
												"id": 2987,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2959,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2950,
																"src": "1669:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "1665:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2958,
															"id": 2965,
															"nodeType": "Return",
															"src": "1677:16:12"
														}
													},
													{
														"assignments": [
															2968
														],
														"declarations": [
															{
																"constant": false,
																"id": 2968,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2987,
																"src": "1707:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2967,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2972,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2969,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2950,
																"src": "1719:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2970,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "1723:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2973,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2968,
																	"src": "1742:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2974,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2950,
																	"src": "1746:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2976,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2952,
																"src": "1751:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2982,
														"nodeType": "IfStatement",
														"src": "1738:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2980,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2958,
															"id": 2981,
															"nodeType": "Return",
															"src": "1754:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2984,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2968,
																	"src": "1799:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2985,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2958,
														"id": 2986,
														"nodeType": "Return",
														"src": "1785:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2948,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "1341:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2952,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "1352:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:12"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "1386:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2989,
												"src": "1392:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:12"
									},
									"scope": 3196,
									"src": "1325:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3016,
										"nodeType": "Block",
										"src": "2043:114:12",
										"statements": [
											{
												"id": 3015,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3001,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2994,
																"src": "2081:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3008,
														"nodeType": "IfStatement",
														"src": "2077:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3006,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3000,
															"id": 3007,
															"nodeType": "Return",
															"src": "2089:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3010,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2992,
																		"src": "2134:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3011,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "2138:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3013,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3000,
														"id": 3014,
														"nodeType": "Return",
														"src": "2120:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2990,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 3017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "1983:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "1994:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:12"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "2028:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "2034:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:12"
									},
									"scope": 3196,
									"src": "1967:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3044,
										"nodeType": "Block",
										"src": "2392:114:12",
										"statements": [
											{
												"id": 3043,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3029,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3022,
																"src": "2430:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3036,
														"nodeType": "IfStatement",
														"src": "2426:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3034,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3028,
															"id": 3035,
															"nodeType": "Return",
															"src": "2438:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3038,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3020,
																		"src": "2483:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 3039,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "2487:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3041,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3028,
														"id": 3042,
														"nodeType": "Return",
														"src": "2469:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3018,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 3045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "2332:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "2343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:12"
									},
									"returnParameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "2377:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3045,
												"src": "2383:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:12"
									},
									"scope": 3196,
									"src": "2316:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "2808:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3055,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3048,
														"src": "2825:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3056,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "2829:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3054,
												"id": 3058,
												"nodeType": "Return",
												"src": "2818:12:12"
											}
										]
									},
									"documentation": {
										"id": 3046,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "2754:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "2765:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:12"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "2799:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:12"
									},
									"scope": 3196,
									"src": "2741:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3074,
										"nodeType": "Block",
										"src": "3175:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3070,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3063,
														"src": "3192:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3071,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3065,
														"src": "3196:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3069,
												"id": 3073,
												"nodeType": "Return",
												"src": "3185:12:12"
											}
										]
									},
									"documentation": {
										"id": 3061,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "3121:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "3132:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:12"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "3166:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:12"
									},
									"scope": 3196,
									"src": "3108:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3089,
										"nodeType": "Block",
										"src": "3518:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3085,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3078,
														"src": "3535:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3086,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3080,
														"src": "3539:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3084,
												"id": 3088,
												"nodeType": "Return",
												"src": "3528:12:12"
											}
										]
									},
									"documentation": {
										"id": 3076,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 3090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "3464:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "3475:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:12"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3090,
												"src": "3509:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:12"
									},
									"scope": 3196,
									"src": "3451:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3104,
										"nodeType": "Block",
										"src": "3903:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "3920:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3095,
														"src": "3924:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3099,
												"id": 3103,
												"nodeType": "Return",
												"src": "3913:12:12"
											}
										]
									},
									"documentation": {
										"id": 3091,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "3849:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "3860:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:12"
									},
									"returnParameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3105,
												"src": "3894:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:12"
									},
									"scope": 3196,
									"src": "3836:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "4452:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3108,
														"src": "4469:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 3116,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3110,
														"src": "4473:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3114,
												"id": 3118,
												"nodeType": "Return",
												"src": "4462:12:12"
											}
										]
									},
									"documentation": {
										"id": 3106,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "4398:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "4409:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:12"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "4443:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:12"
									},
									"scope": 3196,
									"src": "4385:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3144,
										"nodeType": "Block",
										"src": "5070:106:12",
										"statements": [
											{
												"id": 3143,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3133,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3125,
																		"src": "5112:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 3134,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3123,
																		"src": "5117:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3136,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3127,
																	"src": "5120:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3132,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3138,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3139,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3123,
																"src": "5154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3140,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3125,
																"src": "5158:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3131,
														"id": 3142,
														"nodeType": "Return",
														"src": "5147:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3121,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "4967:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "4986:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "5005:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:12"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "5061:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:12"
									},
									"scope": 3196,
									"src": "4945:231:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3169,
										"nodeType": "Block",
										"src": "5785:105:12",
										"statements": [
											{
												"id": 3168,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3158,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3150,
																		"src": "5827:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3161,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3152,
																	"src": "5834:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3157,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3163,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3148,
																"src": "5868:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "5872:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3156,
														"id": 3167,
														"nodeType": "Return",
														"src": "5861:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "5682:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "5701:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "5720:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:12"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "5776:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:12"
									},
									"scope": 3196,
									"src": "5660:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3194,
										"nodeType": "Block",
										"src": "6661:105:12",
										"statements": [
											{
												"id": 3193,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3183,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3175,
																		"src": "6703:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3186,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3177,
																	"src": "6710:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3182,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3188,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3189,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "6744:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 3190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3175,
																"src": "6748:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3181,
														"id": 3192,
														"nodeType": "Return",
														"src": "6737:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3171,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "6558:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "6577:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "6596:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:12"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "6652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:12"
									},
									"scope": 3196,
									"src": "6536:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3197,
							"src": "467:6301:12",
							"usedErrors": []
						}
					],
					"src": "92:6677:12"
				},
				"id": 12
			}
		}
	}
}